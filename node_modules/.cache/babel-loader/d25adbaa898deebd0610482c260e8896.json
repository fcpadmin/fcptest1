{"ast":null,"code":"import _objectSpread from \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/FieldBoolean/FieldBoolean.js\";\nimport React from 'react';\nimport { injectIntl, intlShape } from 'react-intl';\nimport { FieldSelect } from '../../components';\n\nconst FieldBoolean = props => {\n  const placeholder = props.placeholder,\n        intl = props.intl,\n        rest = _objectWithoutProperties(props, [\"placeholder\", \"intl\"]);\n\n  const trueLabel = intl.formatMessage({\n    id: 'FieldBoolean.yes'\n  });\n  const falseLabel = intl.formatMessage({\n    id: 'FieldBoolean.no'\n  });\n\n  const selectProps = _objectSpread({}, rest, {\n    format: option => {\n      if (option === true) {\n        return 'true';\n      } else if (option === false) {\n        return 'false';\n      }\n\n      return '';\n    },\n    parse: value => {\n      if (value === 'true') {\n        return true;\n      } else if (value === 'false') {\n        return false;\n      }\n\n      return '';\n    }\n  });\n\n  return React.createElement(FieldSelect, Object.assign({}, selectProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, placeholder), React.createElement(\"option\", {\n    value: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, trueLabel), React.createElement(\"option\", {\n    value: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, falseLabel));\n};\n\nFieldBoolean.propTypes = {\n  intl: intlShape.isRequired\n};\nexport default injectIntl(FieldBoolean);","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/FieldBoolean/FieldBoolean.js"],"names":["React","injectIntl","intlShape","FieldSelect","FieldBoolean","props","placeholder","intl","rest","trueLabel","formatMessage","id","falseLabel","selectProps","format","option","parse","value","propTypes","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,YAAtC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA,QACpBC,WADoB,GACWD,KADX,CACpBC,WADoB;AAAA,QACPC,IADO,GACWF,KADX,CACPE,IADO;AAAA,QACEC,IADF,4BACWH,KADX;;AAE5B,QAAMI,SAAS,GAAGF,IAAI,CAACG,aAAL,CAAmB;AACnCC,IAAAA,EAAE,EAAE;AAD+B,GAAnB,CAAlB;AAGA,QAAMC,UAAU,GAAGL,IAAI,CAACG,aAAL,CAAmB;AACpCC,IAAAA,EAAE,EAAE;AADgC,GAAnB,CAAnB;;AAGA,QAAME,WAAW,qBACZL,IADY;AAEfM,IAAAA,MAAM,EAAEC,MAAM,IAAI;AAChB,UAAIA,MAAM,KAAK,IAAf,EAAqB;AACnB,eAAO,MAAP;AACD,OAFD,MAEO,IAAIA,MAAM,KAAK,KAAf,EAAsB;AAC3B,eAAO,OAAP;AACD;;AACD,aAAO,EAAP;AACD,KATc;AAUfC,IAAAA,KAAK,EAAEC,KAAK,IAAI;AACd,UAAIA,KAAK,KAAK,MAAd,EAAsB;AACpB,eAAO,IAAP;AACD,OAFD,MAEO,IAAIA,KAAK,KAAK,OAAd,EAAuB;AAC5B,eAAO,KAAP;AACD;;AACD,aAAO,EAAP;AACD;AAjBc,IAAjB;;AAmBA,SACE,oBAAC,WAAD,oBAAiBJ,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBP,WAAlB,CADF,EAEE;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBG,SAAtB,CAFF,EAGE;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBG,UAAvB,CAHF,CADF;AAOD,CAlCD;;AAoCAR,YAAY,CAACc,SAAb,GAAyB;AACvBX,EAAAA,IAAI,EAAEL,SAAS,CAACiB;AADO,CAAzB;AAIA,eAAelB,UAAU,CAACG,YAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { injectIntl, intlShape } from 'react-intl';\nimport { FieldSelect } from '../../components';\n\nconst FieldBoolean = props => {\n  const { placeholder, intl, ...rest } = props;\n  const trueLabel = intl.formatMessage({\n    id: 'FieldBoolean.yes',\n  });\n  const falseLabel = intl.formatMessage({\n    id: 'FieldBoolean.no',\n  });\n  const selectProps = {\n    ...rest,\n    format: option => {\n      if (option === true) {\n        return 'true';\n      } else if (option === false) {\n        return 'false';\n      }\n      return '';\n    },\n    parse: value => {\n      if (value === 'true') {\n        return true;\n      } else if (value === 'false') {\n        return false;\n      }\n      return '';\n    },\n  };\n  return (\n    <FieldSelect {...selectProps}>\n      <option value=\"\">{placeholder}</option>\n      <option value=\"true\">{trueLabel}</option>\n      <option value=\"false\">{falseLabel}</option>\n    </FieldSelect>\n  );\n};\n\nFieldBoolean.propTypes = {\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(FieldBoolean);\n"]},"metadata":{},"sourceType":"module"}