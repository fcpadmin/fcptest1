{"ast":null,"code":"import _objectSpread from \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/containers/ContactDetailsPage/ContactDetailsPage.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { injectIntl, intlShape, FormattedMessage } from 'react-intl';\nimport { propTypes } from '../../util/types';\nimport { ensureCurrentUser } from '../../util/data';\nimport { fetchCurrentUser, sendVerificationEmail } from '../../ducks/user.duck';\nimport { LayoutSideNavigation, LayoutWrapperMain, LayoutWrapperSideNav, LayoutWrapperTopbar, LayoutWrapperFooter, Footer, Page, UserNav } from '../../components';\nimport { ContactDetailsForm } from '../../forms';\nimport { TopbarContainer } from '../../containers';\nimport { isScrollingDisabled } from '../../ducks/UI.duck';\nimport { saveContactDetails, saveContactDetailsClear } from './ContactDetailsPage.duck';\nimport css from './ContactDetailsPage.css';\nexport const ContactDetailsPageComponent = props => {\n  const saveEmailError = props.saveEmailError,\n        savePhoneNumberError = props.savePhoneNumberError,\n        saveContactDetailsInProgress = props.saveContactDetailsInProgress,\n        currentUser = props.currentUser,\n        contactDetailsChanged = props.contactDetailsChanged,\n        onChange = props.onChange,\n        scrollingDisabled = props.scrollingDisabled,\n        sendVerificationEmailInProgress = props.sendVerificationEmailInProgress,\n        sendVerificationEmailError = props.sendVerificationEmailError,\n        onResendVerificationEmail = props.onResendVerificationEmail,\n        onSubmitContactDetails = props.onSubmitContactDetails,\n        intl = props.intl;\n  const tabs = [{\n    text: React.createElement(FormattedMessage, {\n      id: \"ContactDetailsPage.contactDetailsTabTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }),\n    selected: true,\n    linkProps: {\n      name: 'ContactDetailsPage'\n    }\n  }, {\n    text: React.createElement(FormattedMessage, {\n      id: \"ContactDetailsPage.passwordTabTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }),\n    selected: false,\n    linkProps: {\n      name: 'PasswordChangePage'\n    }\n  }, {\n    text: React.createElement(FormattedMessage, {\n      id: \"ContactDetailsPage.paymentsTabTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }),\n    selected: false,\n    linkProps: {\n      name: 'PayoutPreferencesPage'\n    }\n  }];\n  const user = ensureCurrentUser(currentUser);\n  const currentEmail = user.attributes.email || '';\n  const protectedData = user.attributes.profile.protectedData || {};\n  const currentPhoneNumber = protectedData.phoneNumber || '';\n  const contactInfoForm = user.id ? React.createElement(ContactDetailsForm, {\n    className: css.form,\n    initialValues: {\n      email: currentEmail,\n      phoneNumber: currentPhoneNumber\n    },\n    saveEmailError: saveEmailError,\n    savePhoneNumberError: savePhoneNumberError,\n    currentUser: currentUser,\n    onResendVerificationEmail: onResendVerificationEmail,\n    onSubmit: values => onSubmitContactDetails(_objectSpread({}, values, {\n      currentEmail,\n      currentPhoneNumber\n    })),\n    onChange: onChange,\n    inProgress: saveContactDetailsInProgress,\n    ready: contactDetailsChanged,\n    sendVerificationEmailInProgress: sendVerificationEmailInProgress,\n    sendVerificationEmailError: sendVerificationEmailError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }) : null;\n  const title = intl.formatMessage({\n    id: 'ContactDetailsPage.title'\n  });\n  return React.createElement(Page, {\n    title: title,\n    scrollingDisabled: scrollingDisabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(LayoutSideNavigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(LayoutWrapperTopbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(TopbarContainer, {\n    currentPage: \"ContactDetailsPage\",\n    desktopClassName: css.desktopTopbar,\n    mobileClassName: css.mobileTopbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(UserNav, {\n    selectedPageName: \"ContactDetailsPage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), React.createElement(LayoutWrapperSideNav, {\n    tabs: tabs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(LayoutWrapperMain, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: css.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ContactDetailsPage.heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), contactInfoForm)), React.createElement(LayoutWrapperFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))));\n};\nContactDetailsPageComponent.defaultProps = {\n  saveEmailError: null,\n  savePhoneNumberError: null,\n  currentUser: null,\n  sendVerificationEmailError: null\n};\nconst bool = PropTypes.bool,\n      func = PropTypes.func;\nContactDetailsPageComponent.propTypes = {\n  saveEmailError: propTypes.error,\n  savePhoneNumberError: propTypes.error,\n  saveContactDetailsInProgress: bool.isRequired,\n  currentUser: propTypes.currentUser,\n  contactDetailsChanged: bool.isRequired,\n  onChange: func.isRequired,\n  onSubmitContactDetails: func.isRequired,\n  scrollingDisabled: bool.isRequired,\n  sendVerificationEmailInProgress: bool.isRequired,\n  sendVerificationEmailError: propTypes.error,\n  onResendVerificationEmail: func.isRequired,\n  // from injectIntl\n  intl: intlShape.isRequired\n};\n\nconst mapStateToProps = state => {\n  // Topbar needs user info.\n  const _state$user = state.user,\n        currentUser = _state$user.currentUser,\n        sendVerificationEmailInProgress = _state$user.sendVerificationEmailInProgress,\n        sendVerificationEmailError = _state$user.sendVerificationEmailError;\n  const _state$ContactDetails = state.ContactDetailsPage,\n        saveEmailError = _state$ContactDetails.saveEmailError,\n        savePhoneNumberError = _state$ContactDetails.savePhoneNumberError,\n        saveContactDetailsInProgress = _state$ContactDetails.saveContactDetailsInProgress,\n        contactDetailsChanged = _state$ContactDetails.contactDetailsChanged;\n  return {\n    saveEmailError,\n    savePhoneNumberError,\n    saveContactDetailsInProgress,\n    currentUser,\n    contactDetailsChanged,\n    scrollingDisabled: isScrollingDisabled(state),\n    sendVerificationEmailInProgress,\n    sendVerificationEmailError\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: () => dispatch(saveContactDetailsClear()),\n  onResendVerificationEmail: () => dispatch(sendVerificationEmail()),\n  onSubmitContactDetails: values => dispatch(saveContactDetails(values))\n});\n\nconst ContactDetailsPage = compose(connect(mapStateToProps, mapDispatchToProps), injectIntl)(ContactDetailsPageComponent);\n\nContactDetailsPage.loadData = () => {\n  // Since verify email happens in separate tab, current user's data might be updated\n  return fetchCurrentUser();\n};\n\nexport default ContactDetailsPage;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/containers/ContactDetailsPage/ContactDetailsPage.js"],"names":["React","PropTypes","compose","connect","injectIntl","intlShape","FormattedMessage","propTypes","ensureCurrentUser","fetchCurrentUser","sendVerificationEmail","LayoutSideNavigation","LayoutWrapperMain","LayoutWrapperSideNav","LayoutWrapperTopbar","LayoutWrapperFooter","Footer","Page","UserNav","ContactDetailsForm","TopbarContainer","isScrollingDisabled","saveContactDetails","saveContactDetailsClear","css","ContactDetailsPageComponent","props","saveEmailError","savePhoneNumberError","saveContactDetailsInProgress","currentUser","contactDetailsChanged","onChange","scrollingDisabled","sendVerificationEmailInProgress","sendVerificationEmailError","onResendVerificationEmail","onSubmitContactDetails","intl","tabs","text","selected","linkProps","name","user","currentEmail","attributes","email","protectedData","profile","currentPhoneNumber","phoneNumber","contactInfoForm","id","form","values","title","formatMessage","desktopTopbar","mobileTopbar","content","defaultProps","bool","func","error","isRequired","mapStateToProps","state","ContactDetailsPage","mapDispatchToProps","dispatch","loadData"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,gBAAhC,QAAwD,YAAxD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,SAASC,gBAAT,EAA2BC,qBAA3B,QAAwD,uBAAxD;AACA,SACEC,oBADF,EAEEC,iBAFF,EAGEC,oBAHF,EAIEC,mBAJF,EAKEC,mBALF,EAMEC,MANF,EAOEC,IAPF,EAQEC,OARF,QASO,kBATP;AAUA,SAASC,kBAAT,QAAmC,aAAnC;AACA,SAASC,eAAT,QAAgC,kBAAhC;AAEA,SAASC,mBAAT,QAAoC,qBAApC;AACA,SAASC,kBAAT,EAA6BC,uBAA7B,QAA4D,2BAA5D;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AAEA,OAAO,MAAMC,2BAA2B,GAAGC,KAAK,IAAI;AAAA,QAEhDC,cAFgD,GAc9CD,KAd8C,CAEhDC,cAFgD;AAAA,QAGhDC,oBAHgD,GAc9CF,KAd8C,CAGhDE,oBAHgD;AAAA,QAIhDC,4BAJgD,GAc9CH,KAd8C,CAIhDG,4BAJgD;AAAA,QAKhDC,WALgD,GAc9CJ,KAd8C,CAKhDI,WALgD;AAAA,QAMhDC,qBANgD,GAc9CL,KAd8C,CAMhDK,qBANgD;AAAA,QAOhDC,QAPgD,GAc9CN,KAd8C,CAOhDM,QAPgD;AAAA,QAQhDC,iBARgD,GAc9CP,KAd8C,CAQhDO,iBARgD;AAAA,QAShDC,+BATgD,GAc9CR,KAd8C,CAShDQ,+BATgD;AAAA,QAUhDC,0BAVgD,GAc9CT,KAd8C,CAUhDS,0BAVgD;AAAA,QAWhDC,yBAXgD,GAc9CV,KAd8C,CAWhDU,yBAXgD;AAAA,QAYhDC,sBAZgD,GAc9CX,KAd8C,CAYhDW,sBAZgD;AAAA,QAahDC,IAbgD,GAc9CZ,KAd8C,CAahDY,IAbgD;AAgBlD,QAAMC,IAAI,GAAG,CACX;AACEC,IAAAA,IAAI,EAAE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,2CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR;AAEEC,IAAAA,QAAQ,EAAE,IAFZ;AAGEC,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE;AADG;AAHb,GADW,EAQX;AACEH,IAAAA,IAAI,EAAE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,qCAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR;AAEEC,IAAAA,QAAQ,EAAE,KAFZ;AAGEC,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE;AADG;AAHb,GARW,EAeX;AACEH,IAAAA,IAAI,EAAE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,qCAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR;AAEEC,IAAAA,QAAQ,EAAE,KAFZ;AAGEC,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE;AADG;AAHb,GAfW,CAAb;AAwBA,QAAMC,IAAI,GAAGpC,iBAAiB,CAACsB,WAAD,CAA9B;AACA,QAAMe,YAAY,GAAGD,IAAI,CAACE,UAAL,CAAgBC,KAAhB,IAAyB,EAA9C;AACA,QAAMC,aAAa,GAAGJ,IAAI,CAACE,UAAL,CAAgBG,OAAhB,CAAwBD,aAAxB,IAAyC,EAA/D;AACA,QAAME,kBAAkB,GAAGF,aAAa,CAACG,WAAd,IAA6B,EAAxD;AACA,QAAMC,eAAe,GAAGR,IAAI,CAACS,EAAL,GACtB,oBAAC,kBAAD;AACE,IAAA,SAAS,EAAE7B,GAAG,CAAC8B,IADjB;AAEE,IAAA,aAAa,EAAE;AAAEP,MAAAA,KAAK,EAAEF,YAAT;AAAuBM,MAAAA,WAAW,EAAED;AAApC,KAFjB;AAGE,IAAA,cAAc,EAAEvB,cAHlB;AAIE,IAAA,oBAAoB,EAAEC,oBAJxB;AAKE,IAAA,WAAW,EAAEE,WALf;AAME,IAAA,yBAAyB,EAAEM,yBAN7B;AAOE,IAAA,QAAQ,EAAEmB,MAAM,IAAIlB,sBAAsB,mBAAMkB,MAAN;AAAcV,MAAAA,YAAd;AAA4BK,MAAAA;AAA5B,OAP5C;AAQE,IAAA,QAAQ,EAAElB,QARZ;AASE,IAAA,UAAU,EAAEH,4BATd;AAUE,IAAA,KAAK,EAAEE,qBAVT;AAWE,IAAA,+BAA+B,EAAEG,+BAXnC;AAYE,IAAA,0BAA0B,EAAEC,0BAZ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADsB,GAepB,IAfJ;AAiBA,QAAMqB,KAAK,GAAGlB,IAAI,CAACmB,aAAL,CAAmB;AAAEJ,IAAAA,EAAE,EAAE;AAAN,GAAnB,CAAd;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,KAAb;AAAoB,IAAA,iBAAiB,EAAEvB,iBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AACE,IAAA,WAAW,EAAC,oBADd;AAEE,IAAA,gBAAgB,EAAET,GAAG,CAACkC,aAFxB;AAGE,IAAA,eAAe,EAAElC,GAAG,CAACmC,YAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,OAAD;AAAS,IAAA,gBAAgB,EAAC,oBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,EASE,oBAAC,oBAAD;AAAsB,IAAA,IAAI,EAAEpB,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEf,GAAG,CAACoC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEpC,GAAG,CAACgC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,4BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIGJ,eAJH,CADF,CAVF,EAkBE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAlBF,CADF,CADF;AA0BD,CAzFM;AA2FP3B,2BAA2B,CAACoC,YAA5B,GAA2C;AACzClC,EAAAA,cAAc,EAAE,IADyB;AAEzCC,EAAAA,oBAAoB,EAAE,IAFmB;AAGzCE,EAAAA,WAAW,EAAE,IAH4B;AAIzCK,EAAAA,0BAA0B,EAAE;AAJa,CAA3C;MAOQ2B,I,GAAe7D,S,CAAf6D,I;MAAMC,I,GAAS9D,S,CAAT8D,I;AAEdtC,2BAA2B,CAAClB,SAA5B,GAAwC;AACtCoB,EAAAA,cAAc,EAAEpB,SAAS,CAACyD,KADY;AAEtCpC,EAAAA,oBAAoB,EAAErB,SAAS,CAACyD,KAFM;AAGtCnC,EAAAA,4BAA4B,EAAEiC,IAAI,CAACG,UAHG;AAItCnC,EAAAA,WAAW,EAAEvB,SAAS,CAACuB,WAJe;AAKtCC,EAAAA,qBAAqB,EAAE+B,IAAI,CAACG,UALU;AAMtCjC,EAAAA,QAAQ,EAAE+B,IAAI,CAACE,UANuB;AAOtC5B,EAAAA,sBAAsB,EAAE0B,IAAI,CAACE,UAPS;AAQtChC,EAAAA,iBAAiB,EAAE6B,IAAI,CAACG,UARc;AAStC/B,EAAAA,+BAA+B,EAAE4B,IAAI,CAACG,UATA;AAUtC9B,EAAAA,0BAA0B,EAAE5B,SAAS,CAACyD,KAVA;AAWtC5B,EAAAA,yBAAyB,EAAE2B,IAAI,CAACE,UAXM;AAatC;AACA3B,EAAAA,IAAI,EAAEjC,SAAS,CAAC4D;AAdsB,CAAxC;;AAiBA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B;AAD+B,sBAEsDA,KAAK,CAACvB,IAF5D;AAAA,QAEvBd,WAFuB,eAEvBA,WAFuB;AAAA,QAEVI,+BAFU,eAEVA,+BAFU;AAAA,QAEuBC,0BAFvB,eAEuBA,0BAFvB;AAAA,gCAQ3BgC,KAAK,CAACC,kBARqB;AAAA,QAI7BzC,cAJ6B,yBAI7BA,cAJ6B;AAAA,QAK7BC,oBAL6B,yBAK7BA,oBAL6B;AAAA,QAM7BC,4BAN6B,yBAM7BA,4BAN6B;AAAA,QAO7BE,qBAP6B,yBAO7BA,qBAP6B;AAS/B,SAAO;AACLJ,IAAAA,cADK;AAELC,IAAAA,oBAFK;AAGLC,IAAAA,4BAHK;AAILC,IAAAA,WAJK;AAKLC,IAAAA,qBALK;AAMLE,IAAAA,iBAAiB,EAAEZ,mBAAmB,CAAC8C,KAAD,CANjC;AAOLjC,IAAAA,+BAPK;AAQLC,IAAAA;AARK,GAAP;AAUD,CAnBD;;AAqBA,MAAMkC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCtC,EAAAA,QAAQ,EAAE,MAAMsC,QAAQ,CAAC/C,uBAAuB,EAAxB,CADc;AAEtCa,EAAAA,yBAAyB,EAAE,MAAMkC,QAAQ,CAAC5D,qBAAqB,EAAtB,CAFH;AAGtC2B,EAAAA,sBAAsB,EAAEkB,MAAM,IAAIe,QAAQ,CAAChD,kBAAkB,CAACiC,MAAD,CAAnB;AAHJ,CAAL,CAAnC;;AAMA,MAAMa,kBAAkB,GAAGlE,OAAO,CAChCC,OAAO,CACL+D,eADK,EAELG,kBAFK,CADyB,EAKhCjE,UALgC,CAAP,CAMzBqB,2BANyB,CAA3B;;AAQA2C,kBAAkB,CAACG,QAAnB,GAA8B,MAAM;AAClC;AACA,SAAO9D,gBAAgB,EAAvB;AACD,CAHD;;AAKA,eAAe2D,kBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { injectIntl, intlShape, FormattedMessage } from 'react-intl';\nimport { propTypes } from '../../util/types';\nimport { ensureCurrentUser } from '../../util/data';\nimport { fetchCurrentUser, sendVerificationEmail } from '../../ducks/user.duck';\nimport {\n  LayoutSideNavigation,\n  LayoutWrapperMain,\n  LayoutWrapperSideNav,\n  LayoutWrapperTopbar,\n  LayoutWrapperFooter,\n  Footer,\n  Page,\n  UserNav,\n} from '../../components';\nimport { ContactDetailsForm } from '../../forms';\nimport { TopbarContainer } from '../../containers';\n\nimport { isScrollingDisabled } from '../../ducks/UI.duck';\nimport { saveContactDetails, saveContactDetailsClear } from './ContactDetailsPage.duck';\nimport css from './ContactDetailsPage.css';\n\nexport const ContactDetailsPageComponent = props => {\n  const {\n    saveEmailError,\n    savePhoneNumberError,\n    saveContactDetailsInProgress,\n    currentUser,\n    contactDetailsChanged,\n    onChange,\n    scrollingDisabled,\n    sendVerificationEmailInProgress,\n    sendVerificationEmailError,\n    onResendVerificationEmail,\n    onSubmitContactDetails,\n    intl,\n  } = props;\n\n  const tabs = [\n    {\n      text: <FormattedMessage id=\"ContactDetailsPage.contactDetailsTabTitle\" />,\n      selected: true,\n      linkProps: {\n        name: 'ContactDetailsPage',\n      },\n    },\n    {\n      text: <FormattedMessage id=\"ContactDetailsPage.passwordTabTitle\" />,\n      selected: false,\n      linkProps: {\n        name: 'PasswordChangePage',\n      },\n    },\n    {\n      text: <FormattedMessage id=\"ContactDetailsPage.paymentsTabTitle\" />,\n      selected: false,\n      linkProps: {\n        name: 'PayoutPreferencesPage',\n      },\n    },\n  ];\n\n  const user = ensureCurrentUser(currentUser);\n  const currentEmail = user.attributes.email || '';\n  const protectedData = user.attributes.profile.protectedData || {};\n  const currentPhoneNumber = protectedData.phoneNumber || '';\n  const contactInfoForm = user.id ? (\n    <ContactDetailsForm\n      className={css.form}\n      initialValues={{ email: currentEmail, phoneNumber: currentPhoneNumber }}\n      saveEmailError={saveEmailError}\n      savePhoneNumberError={savePhoneNumberError}\n      currentUser={currentUser}\n      onResendVerificationEmail={onResendVerificationEmail}\n      onSubmit={values => onSubmitContactDetails({ ...values, currentEmail, currentPhoneNumber })}\n      onChange={onChange}\n      inProgress={saveContactDetailsInProgress}\n      ready={contactDetailsChanged}\n      sendVerificationEmailInProgress={sendVerificationEmailInProgress}\n      sendVerificationEmailError={sendVerificationEmailError}\n    />\n  ) : null;\n\n  const title = intl.formatMessage({ id: 'ContactDetailsPage.title' });\n\n  return (\n    <Page title={title} scrollingDisabled={scrollingDisabled}>\n      <LayoutSideNavigation>\n        <LayoutWrapperTopbar>\n          <TopbarContainer\n            currentPage=\"ContactDetailsPage\"\n            desktopClassName={css.desktopTopbar}\n            mobileClassName={css.mobileTopbar}\n          />\n          <UserNav selectedPageName=\"ContactDetailsPage\" />\n        </LayoutWrapperTopbar>\n        <LayoutWrapperSideNav tabs={tabs} />\n        <LayoutWrapperMain>\n          <div className={css.content}>\n            <h1 className={css.title}>\n              <FormattedMessage id=\"ContactDetailsPage.heading\" />\n            </h1>\n            {contactInfoForm}\n          </div>\n        </LayoutWrapperMain>\n        <LayoutWrapperFooter>\n          <Footer />\n        </LayoutWrapperFooter>\n      </LayoutSideNavigation>\n    </Page>\n  );\n};\n\nContactDetailsPageComponent.defaultProps = {\n  saveEmailError: null,\n  savePhoneNumberError: null,\n  currentUser: null,\n  sendVerificationEmailError: null,\n};\n\nconst { bool, func } = PropTypes;\n\nContactDetailsPageComponent.propTypes = {\n  saveEmailError: propTypes.error,\n  savePhoneNumberError: propTypes.error,\n  saveContactDetailsInProgress: bool.isRequired,\n  currentUser: propTypes.currentUser,\n  contactDetailsChanged: bool.isRequired,\n  onChange: func.isRequired,\n  onSubmitContactDetails: func.isRequired,\n  scrollingDisabled: bool.isRequired,\n  sendVerificationEmailInProgress: bool.isRequired,\n  sendVerificationEmailError: propTypes.error,\n  onResendVerificationEmail: func.isRequired,\n\n  // from injectIntl\n  intl: intlShape.isRequired,\n};\n\nconst mapStateToProps = state => {\n  // Topbar needs user info.\n  const { currentUser, sendVerificationEmailInProgress, sendVerificationEmailError } = state.user;\n  const {\n    saveEmailError,\n    savePhoneNumberError,\n    saveContactDetailsInProgress,\n    contactDetailsChanged,\n  } = state.ContactDetailsPage;\n  return {\n    saveEmailError,\n    savePhoneNumberError,\n    saveContactDetailsInProgress,\n    currentUser,\n    contactDetailsChanged,\n    scrollingDisabled: isScrollingDisabled(state),\n    sendVerificationEmailInProgress,\n    sendVerificationEmailError,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: () => dispatch(saveContactDetailsClear()),\n  onResendVerificationEmail: () => dispatch(sendVerificationEmail()),\n  onSubmitContactDetails: values => dispatch(saveContactDetails(values)),\n});\n\nconst ContactDetailsPage = compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  injectIntl\n)(ContactDetailsPageComponent);\n\nContactDetailsPage.loadData = () => {\n  // Since verify email happens in separate tab, current user's data might be updated\n  return fetchCurrentUser();\n};\n\nexport default ContactDetailsPage;\n"]},"metadata":{},"sourceType":"module"}