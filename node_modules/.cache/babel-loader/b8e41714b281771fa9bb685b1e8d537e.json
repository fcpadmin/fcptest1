{"ast":null,"code":"import _objectSpread from \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/containers/ListingPage/ListingPage.js\";\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { Component } from 'react';\nimport { array, arrayOf, bool, func, shape, string, oneOf } from 'prop-types';\nimport { FormattedMessage, intlShape, injectIntl } from 'react-intl';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport config from '../../config';\nimport routeConfiguration from '../../routeConfiguration';\nimport { LISTING_STATE_PENDING_APPROVAL, LISTING_STATE_CLOSED, propTypes } from '../../util/types';\nimport { types as sdkTypes } from '../../util/sdkLoader';\nimport { LISTING_PAGE_DRAFT_VARIANT, LISTING_PAGE_PENDING_APPROVAL_VARIANT, LISTING_PAGE_PARAM_TYPE_DRAFT, LISTING_PAGE_PARAM_TYPE_EDIT, createSlug } from '../../util/urlHelpers';\nimport { formatMoney } from '../../util/currency';\nimport { createResourceLocatorString, findRouteByRouteName } from '../../util/routes';\nimport { ensureListing, ensureOwnListing, ensureUser, userDisplayNameAsString } from '../../util/data';\nimport { richText } from '../../util/richText';\nimport { getMarketplaceEntities } from '../../ducks/marketplaceData.duck';\nimport { manageDisableScrolling, isScrollingDisabled } from '../../ducks/UI.duck';\nimport { Page, NamedLink, NamedRedirect, LayoutSingleColumn, LayoutWrapperTopbar, LayoutWrapperMain, LayoutWrapperFooter, Footer, BookingPanel } from '../../components';\nimport { TopbarContainer, NotFoundPage } from '../../containers';\nimport { sendEnquiry, loadData, setInitialValues } from './ListingPage.duck';\nimport SectionImages from './SectionImages';\nimport SectionAvatar from './SectionAvatar';\nimport SectionHeading from './SectionHeading';\nimport SectionDescriptionMaybe from './SectionDescriptionMaybe';\nimport SectionFeaturesMaybe from './SectionFeaturesMaybe';\nimport SectionReviews from './SectionReviews';\nimport SectionHostMaybe from './SectionHostMaybe';\nimport SectionRulesMaybe from './SectionRulesMaybe';\nimport SectionMapMaybe from './SectionMapMaybe';\nimport css from './ListingPage.css';\nconst MIN_LENGTH_FOR_LONG_WORDS_IN_TITLE = 16;\nconst UUID = sdkTypes.UUID;\n\nconst priceData = (price, intl) => {\n  if (price && price.currency === config.currency) {\n    const formattedPrice = formatMoney(intl, price);\n    return {\n      formattedPrice,\n      priceTitle: formattedPrice\n    };\n  } else if (price) {\n    return {\n      formattedPrice: \"(\".concat(price.currency, \")\"),\n      priceTitle: \"Unsupported currency (\".concat(price.currency, \")\")\n    };\n  }\n\n  return {};\n};\n\nconst categoryLabel = (categories, key) => {\n  const cat = categories.find(c => c.key === key);\n  return cat ? cat.label : key;\n};\n\nexport class ListingPageComponent extends Component {\n  constructor(props) {\n    super(props);\n    const enquiryModalOpenForListingId = props.enquiryModalOpenForListingId,\n          params = props.params;\n    this.state = {\n      pageClassNames: [],\n      imageCarouselOpen: false,\n      enquiryModalOpen: enquiryModalOpenForListingId === params.id\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onContactUser = this.onContactUser.bind(this);\n    this.onSubmitEnquiry = this.onSubmitEnquiry.bind(this);\n  }\n\n  handleSubmit(values) {\n    const _this$props = this.props,\n          history = _this$props.history,\n          getListing = _this$props.getListing,\n          params = _this$props.params,\n          callSetInitialValues = _this$props.callSetInitialValues;\n    const listingId = new UUID(params.id);\n    const listing = getListing(listingId);\n\n    const bookingDates = values.bookingDates,\n          bookingData = _objectWithoutProperties(values, [\"bookingDates\"]);\n\n    const initialValues = {\n      listing,\n      bookingData,\n      bookingDates: {\n        bookingStart: bookingDates.startDate,\n        bookingEnd: bookingDates.endDate\n      }\n    };\n    const routes = routeConfiguration(); // Customize checkout page state with current listing and selected bookingDates\n\n    const _findRouteByRouteName = findRouteByRouteName('CheckoutPage', routes),\n          setInitialValues = _findRouteByRouteName.setInitialValues;\n\n    callSetInitialValues(setInitialValues, initialValues); // Redirect to CheckoutPage\n\n    history.push(createResourceLocatorString('CheckoutPage', routes, {\n      id: listing.id.uuid,\n      slug: createSlug(listing.attributes.title)\n    }, {}));\n  }\n\n  onContactUser() {\n    const _this$props2 = this.props,\n          currentUser = _this$props2.currentUser,\n          history = _this$props2.history,\n          callSetInitialValues = _this$props2.callSetInitialValues,\n          params = _this$props2.params,\n          location = _this$props2.location;\n\n    if (!currentUser) {\n      const state = {\n        from: \"\".concat(location.pathname).concat(location.search).concat(location.hash)\n      }; // We need to log in before showing the modal, but first we need to ensure\n      // that modal does open when user is redirected back to this listingpage\n\n      callSetInitialValues(setInitialValues, {\n        enquiryModalOpenForListingId: params.id\n      }); // signup and return back to listingPage.\n\n      history.push(createResourceLocatorString('SignupPage', routeConfiguration(), {}, {}), state);\n    } else {\n      this.setState({\n        enquiryModalOpen: true\n      });\n    }\n  }\n\n  onSubmitEnquiry(values) {\n    const _this$props3 = this.props,\n          history = _this$props3.history,\n          params = _this$props3.params,\n          onSendEnquiry = _this$props3.onSendEnquiry;\n    const routes = routeConfiguration();\n    const listingId = new UUID(params.id);\n    const message = values.message;\n    onSendEnquiry(listingId, message.trim()).then(txId => {\n      this.setState({\n        enquiryModalOpen: false\n      }); // Redirect to OrderDetailsPage\n\n      history.push(createResourceLocatorString('OrderDetailsPage', routes, {\n        id: txId.uuid\n      }, {}));\n    }).catch(() => {// Ignore, error handling in duck file\n    });\n  }\n\n  render() {\n    const _this$props4 = this.props,\n          unitType = _this$props4.unitType,\n          isAuthenticated = _this$props4.isAuthenticated,\n          currentUser = _this$props4.currentUser,\n          getListing = _this$props4.getListing,\n          getOwnListing = _this$props4.getOwnListing,\n          intl = _this$props4.intl,\n          onManageDisableScrolling = _this$props4.onManageDisableScrolling,\n          rawParams = _this$props4.params,\n          location = _this$props4.location,\n          scrollingDisabled = _this$props4.scrollingDisabled,\n          showListingError = _this$props4.showListingError,\n          reviews = _this$props4.reviews,\n          fetchReviewsError = _this$props4.fetchReviewsError,\n          sendEnquiryInProgress = _this$props4.sendEnquiryInProgress,\n          sendEnquiryError = _this$props4.sendEnquiryError,\n          timeSlots = _this$props4.timeSlots,\n          fetchTimeSlotsError = _this$props4.fetchTimeSlotsError,\n          categoriesConfig = _this$props4.categoriesConfig,\n          amenitiesConfig = _this$props4.amenitiesConfig;\n    const listingId = new UUID(rawParams.id);\n    const isPendingApprovalVariant = rawParams.variant === LISTING_PAGE_PENDING_APPROVAL_VARIANT;\n    const isDraftVariant = rawParams.variant === LISTING_PAGE_DRAFT_VARIANT;\n    const currentListing = isPendingApprovalVariant || isDraftVariant ? ensureOwnListing(getOwnListing(listingId)) : ensureListing(getListing(listingId));\n    const listingSlug = rawParams.slug || createSlug(currentListing.attributes.title || '');\n\n    const params = _objectSpread({\n      slug: listingSlug\n    }, rawParams);\n\n    const listingType = isDraftVariant ? LISTING_PAGE_PARAM_TYPE_DRAFT : LISTING_PAGE_PARAM_TYPE_EDIT;\n    const listingTab = isDraftVariant ? 'photos' : 'description';\n    const isApproved = currentListing.id && currentListing.attributes.state !== LISTING_STATE_PENDING_APPROVAL;\n    const pendingIsApproved = isPendingApprovalVariant && isApproved; // If a /pending-approval URL is shared, the UI requires\n    // authentication and attempts to fetch the listing from own\n    // listings. This will fail with 403 Forbidden if the author is\n    // another user. We use this information to try to fetch the\n    // public listing.\n\n    const pendingOtherUsersListing = (isPendingApprovalVariant || isDraftVariant) && showListingError && showListingError.status === 403;\n    const shouldShowPublicListingPage = pendingIsApproved || pendingOtherUsersListing;\n\n    if (shouldShowPublicListingPage) {\n      return React.createElement(NamedRedirect, {\n        name: \"ListingPage\",\n        params: params,\n        search: location.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      });\n    }\n\n    const _currentListing$attri = currentListing.attributes,\n          _currentListing$attri2 = _currentListing$attri.description,\n          description = _currentListing$attri2 === void 0 ? '' : _currentListing$attri2,\n          _currentListing$attri3 = _currentListing$attri.geolocation,\n          geolocation = _currentListing$attri3 === void 0 ? null : _currentListing$attri3,\n          _currentListing$attri4 = _currentListing$attri.price,\n          price = _currentListing$attri4 === void 0 ? null : _currentListing$attri4,\n          _currentListing$attri5 = _currentListing$attri.title,\n          title = _currentListing$attri5 === void 0 ? '' : _currentListing$attri5,\n          publicData = _currentListing$attri.publicData;\n    const richTitle = React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, richText(title, {\n      longWordMinLength: MIN_LENGTH_FOR_LONG_WORDS_IN_TITLE,\n      longWordClass: css.longWord\n    }));\n    const bookingTitle = React.createElement(FormattedMessage, {\n      id: \"ListingPage.bookingTitle\",\n      values: {\n        title: richTitle\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    });\n    const bookingSubTitle = intl.formatMessage({\n      id: 'ListingPage.bookingSubTitle'\n    });\n    const topbar = React.createElement(TopbarContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    });\n\n    if (showListingError && showListingError.status === 404) {\n      // 404 listing not found\n      return React.createElement(NotFoundPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      });\n    } else if (showListingError) {\n      // Other error in fetching listing\n      const errorTitle = intl.formatMessage({\n        id: 'ListingPage.errorLoadingListingTitle'\n      });\n      return React.createElement(Page, {\n        title: errorTitle,\n        scrollingDisabled: scrollingDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(LayoutSingleColumn, {\n        className: css.pageRoot,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(LayoutWrapperTopbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, topbar), React.createElement(LayoutWrapperMain, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: css.errorText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"ListingPage.errorLoadingListingMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }))), React.createElement(LayoutWrapperFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }))));\n    } else if (!currentListing.id) {\n      // Still loading the listing\n      const loadingTitle = intl.formatMessage({\n        id: 'ListingPage.loadingListingTitle'\n      });\n      return React.createElement(Page, {\n        title: loadingTitle,\n        scrollingDisabled: scrollingDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(LayoutSingleColumn, {\n        className: css.pageRoot,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(LayoutWrapperTopbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, topbar), React.createElement(LayoutWrapperMain, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: css.loadingText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"ListingPage.loadingListingMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }))), React.createElement(LayoutWrapperFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }))));\n    }\n\n    const handleViewPhotosClick = e => {\n      // Stop event from bubbling up to prevent image click handler\n      // trying to open the carousel as well.\n      e.stopPropagation();\n      this.setState({\n        imageCarouselOpen: true\n      });\n    };\n\n    const authorAvailable = currentListing && currentListing.author;\n    const userAndListingAuthorAvailable = !!(currentUser && authorAvailable);\n    const isOwnListing = userAndListingAuthorAvailable && currentListing.author.id.uuid === currentUser.id.uuid;\n    const showContactUser = authorAvailable && (!currentUser || currentUser && !isOwnListing);\n    const currentAuthor = authorAvailable ? currentListing.author : null;\n    const ensuredAuthor = ensureUser(currentAuthor); // When user is banned or deleted the listing is also deleted.\n    // Because listing can be never showed with banned or deleted user we don't have to provide\n    // banned or deleted display names for the function\n\n    const authorDisplayName = userDisplayNameAsString(ensuredAuthor, '');\n\n    const _priceData = priceData(price, intl),\n          formattedPrice = _priceData.formattedPrice,\n          priceTitle = _priceData.priceTitle;\n\n    const handleBookingSubmit = values => {\n      const isCurrentlyClosed = currentListing.attributes.state === LISTING_STATE_CLOSED;\n\n      if (isOwnListing || isCurrentlyClosed) {\n        window.scrollTo(0, 0);\n      } else {\n        this.handleSubmit(values);\n      }\n    };\n\n    const listingImages = (listing, variantName) => (listing.images || []).map(image => {\n      const variants = image.attributes.variants;\n      const variant = variants ? variants[variantName] : null; // deprecated\n      // for backwards combatility only\n\n      const sizes = image.attributes.sizes;\n      const size = sizes ? sizes.find(i => i.name === variantName) : null;\n      return variant || size;\n    }).filter(variant => variant != null);\n\n    const facebookImages = listingImages(currentListing, 'facebook');\n    const twitterImages = listingImages(currentListing, 'twitter');\n    const schemaImages = JSON.stringify(facebookImages.map(img => img.url));\n    const siteTitle = config.siteTitle;\n    const schemaTitle = intl.formatMessage({\n      id: 'ListingPage.schemaTitle'\n    }, {\n      title,\n      price: formattedPrice,\n      siteTitle\n    });\n    const hostLink = React.createElement(NamedLink, {\n      className: css.authorNameLink,\n      name: \"ListingPage\",\n      params: params,\n      to: {\n        hash: '#host'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, authorDisplayName);\n    const category = publicData && publicData.category ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, categoryLabel(categoriesConfig, publicData.category), React.createElement(\"span\", {\n      className: css.separator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, \"\\u2022\")) : null;\n    return React.createElement(Page, {\n      title: schemaTitle,\n      scrollingDisabled: scrollingDisabled,\n      author: authorDisplayName,\n      contentType: \"website\",\n      description: description,\n      facebookImages: facebookImages,\n      twitterImages: twitterImages,\n      schema: {\n        '@context': 'http://schema.org',\n        '@type': 'ItemPage',\n        description: description,\n        name: schemaTitle,\n        image: schemaImages\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(LayoutSingleColumn, {\n      className: css.pageRoot,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(LayoutWrapperTopbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, topbar), React.createElement(LayoutWrapperMain, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(SectionImages, {\n      title: title,\n      listing: currentListing,\n      isOwnListing: isOwnListing,\n      editParams: {\n        id: listingId.uuid,\n        slug: listingSlug,\n        type: listingType,\n        tab: listingTab\n      },\n      imageCarouselOpen: this.state.imageCarouselOpen,\n      onImageCarouselClose: () => this.setState({\n        imageCarouselOpen: false\n      }),\n      handleViewPhotosClick: handleViewPhotosClick,\n      onManageDisableScrolling: onManageDisableScrolling,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: css.contentContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(SectionAvatar, {\n      user: currentAuthor,\n      params: params,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: css.mainContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, React.createElement(SectionHeading, {\n      priceTitle: priceTitle,\n      formattedPrice: formattedPrice,\n      richTitle: richTitle,\n      category: category,\n      hostLink: hostLink,\n      showContactUser: showContactUser,\n      onContactUser: this.onContactUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }), React.createElement(SectionDescriptionMaybe, {\n      description: description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }), React.createElement(SectionFeaturesMaybe, {\n      options: amenitiesConfig,\n      publicData: publicData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }), React.createElement(SectionRulesMaybe, {\n      publicData: publicData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }), React.createElement(SectionMapMaybe, {\n      geolocation: geolocation,\n      publicData: publicData,\n      listingId: currentListing.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }), React.createElement(SectionReviews, {\n      reviews: reviews,\n      fetchReviewsError: fetchReviewsError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }), React.createElement(SectionHostMaybe, {\n      title: title,\n      listing: currentListing,\n      authorDisplayName: authorDisplayName,\n      onContactUser: this.onContactUser,\n      isEnquiryModalOpen: isAuthenticated && this.state.enquiryModalOpen,\n      onCloseEnquiryModal: () => this.setState({\n        enquiryModalOpen: false\n      }),\n      sendEnquiryError: sendEnquiryError,\n      sendEnquiryInProgress: sendEnquiryInProgress,\n      onSubmitEnquiry: this.onSubmitEnquiry,\n      currentUser: currentUser,\n      onManageDisableScrolling: onManageDisableScrolling,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    })), React.createElement(BookingPanel, {\n      className: css.bookingPanel,\n      listing: currentListing,\n      isOwnListing: isOwnListing,\n      unitType: unitType,\n      onSubmit: handleBookingSubmit,\n      title: bookingTitle,\n      subTitle: bookingSubTitle,\n      authorDisplayName: authorDisplayName,\n      onManageDisableScrolling: onManageDisableScrolling,\n      timeSlots: timeSlots,\n      fetchTimeSlotsError: fetchTimeSlotsError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    })))), React.createElement(LayoutWrapperFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }))));\n  }\n\n}\nListingPageComponent.defaultProps = {\n  unitType: config.bookingUnitType,\n  currentUser: null,\n  enquiryModalOpenForListingId: null,\n  showListingError: null,\n  reviews: [],\n  fetchReviewsError: null,\n  timeSlots: null,\n  fetchTimeSlotsError: null,\n  sendEnquiryError: null,\n  categoriesConfig: config.custom.categories,\n  amenitiesConfig: config.custom.amenities\n};\nListingPageComponent.propTypes = {\n  // from withRouter\n  history: shape({\n    push: func.isRequired\n  }).isRequired,\n  location: shape({\n    search: string\n  }).isRequired,\n  unitType: propTypes.bookingUnitType,\n  // from injectIntl\n  intl: intlShape.isRequired,\n  params: shape({\n    id: string.isRequired,\n    slug: string,\n    variant: oneOf([LISTING_PAGE_DRAFT_VARIANT, LISTING_PAGE_PENDING_APPROVAL_VARIANT])\n  }).isRequired,\n  isAuthenticated: bool.isRequired,\n  currentUser: propTypes.currentUser,\n  getListing: func.isRequired,\n  getOwnListing: func.isRequired,\n  onManageDisableScrolling: func.isRequired,\n  scrollingDisabled: bool.isRequired,\n  enquiryModalOpenForListingId: string,\n  showListingError: propTypes.error,\n  callSetInitialValues: func.isRequired,\n  reviews: arrayOf(propTypes.review),\n  fetchReviewsError: propTypes.error,\n  timeSlots: arrayOf(propTypes.timeSlot),\n  fetchTimeSlotsError: propTypes.error,\n  sendEnquiryInProgress: bool.isRequired,\n  sendEnquiryError: propTypes.error,\n  onSendEnquiry: func.isRequired,\n  categoriesConfig: array,\n  amenitiesConfig: array\n};\n\nconst mapStateToProps = state => {\n  const isAuthenticated = state.Auth.isAuthenticated;\n  const _state$ListingPage = state.ListingPage,\n        showListingError = _state$ListingPage.showListingError,\n        reviews = _state$ListingPage.reviews,\n        fetchReviewsError = _state$ListingPage.fetchReviewsError,\n        timeSlots = _state$ListingPage.timeSlots,\n        fetchTimeSlotsError = _state$ListingPage.fetchTimeSlotsError,\n        sendEnquiryInProgress = _state$ListingPage.sendEnquiryInProgress,\n        sendEnquiryError = _state$ListingPage.sendEnquiryError,\n        enquiryModalOpenForListingId = _state$ListingPage.enquiryModalOpenForListingId;\n  const currentUser = state.user.currentUser;\n\n  const getListing = id => {\n    const ref = {\n      id,\n      type: 'listing'\n    };\n    const listings = getMarketplaceEntities(state, [ref]);\n    return listings.length === 1 ? listings[0] : null;\n  };\n\n  const getOwnListing = id => {\n    const ref = {\n      id,\n      type: 'ownListing'\n    };\n    const listings = getMarketplaceEntities(state, [ref]);\n    return listings.length === 1 ? listings[0] : null;\n  };\n\n  return {\n    isAuthenticated,\n    currentUser,\n    getListing,\n    getOwnListing,\n    scrollingDisabled: isScrollingDisabled(state),\n    enquiryModalOpenForListingId,\n    showListingError,\n    reviews,\n    fetchReviewsError,\n    timeSlots,\n    fetchTimeSlotsError,\n    sendEnquiryInProgress,\n    sendEnquiryError\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onManageDisableScrolling: (componentId, disableScrolling) => dispatch(manageDisableScrolling(componentId, disableScrolling)),\n  callSetInitialValues: (setInitialValues, values) => dispatch(setInitialValues(values)),\n  onSendEnquiry: (listingId, message) => dispatch(sendEnquiry(listingId, message))\n}); // Note: it is important that the withRouter HOC is **outside** the\n// connect HOC, otherwise React Router won't rerender any Route\n// components since connect implements a shouldComponentUpdate\n// lifecycle hook.\n//\n// See: https://github.com/ReactTraining/react-router/issues/4671\n\n\nconst ListingPage = compose(withRouter, connect(mapStateToProps, mapDispatchToProps), injectIntl)(ListingPageComponent);\n\nListingPage.setInitialValues = initialValues => setInitialValues(initialValues);\n\nListingPage.loadData = loadData;\nexport default ListingPage;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/containers/ListingPage/ListingPage.js"],"names":["React","Component","array","arrayOf","bool","func","shape","string","oneOf","FormattedMessage","intlShape","injectIntl","compose","connect","withRouter","config","routeConfiguration","LISTING_STATE_PENDING_APPROVAL","LISTING_STATE_CLOSED","propTypes","types","sdkTypes","LISTING_PAGE_DRAFT_VARIANT","LISTING_PAGE_PENDING_APPROVAL_VARIANT","LISTING_PAGE_PARAM_TYPE_DRAFT","LISTING_PAGE_PARAM_TYPE_EDIT","createSlug","formatMoney","createResourceLocatorString","findRouteByRouteName","ensureListing","ensureOwnListing","ensureUser","userDisplayNameAsString","richText","getMarketplaceEntities","manageDisableScrolling","isScrollingDisabled","Page","NamedLink","NamedRedirect","LayoutSingleColumn","LayoutWrapperTopbar","LayoutWrapperMain","LayoutWrapperFooter","Footer","BookingPanel","TopbarContainer","NotFoundPage","sendEnquiry","loadData","setInitialValues","SectionImages","SectionAvatar","SectionHeading","SectionDescriptionMaybe","SectionFeaturesMaybe","SectionReviews","SectionHostMaybe","SectionRulesMaybe","SectionMapMaybe","css","MIN_LENGTH_FOR_LONG_WORDS_IN_TITLE","UUID","priceData","price","intl","currency","formattedPrice","priceTitle","categoryLabel","categories","key","cat","find","c","label","ListingPageComponent","constructor","props","enquiryModalOpenForListingId","params","state","pageClassNames","imageCarouselOpen","enquiryModalOpen","id","handleSubmit","bind","onContactUser","onSubmitEnquiry","values","history","getListing","callSetInitialValues","listingId","listing","bookingDates","bookingData","initialValues","bookingStart","startDate","bookingEnd","endDate","routes","push","uuid","slug","attributes","title","currentUser","location","from","pathname","search","hash","setState","onSendEnquiry","message","trim","then","txId","catch","render","unitType","isAuthenticated","getOwnListing","onManageDisableScrolling","rawParams","scrollingDisabled","showListingError","reviews","fetchReviewsError","sendEnquiryInProgress","sendEnquiryError","timeSlots","fetchTimeSlotsError","categoriesConfig","amenitiesConfig","isPendingApprovalVariant","variant","isDraftVariant","currentListing","listingSlug","listingType","listingTab","isApproved","pendingIsApproved","pendingOtherUsersListing","status","shouldShowPublicListingPage","description","geolocation","publicData","richTitle","longWordMinLength","longWordClass","longWord","bookingTitle","bookingSubTitle","formatMessage","topbar","errorTitle","pageRoot","errorText","loadingTitle","loadingText","handleViewPhotosClick","e","stopPropagation","authorAvailable","author","userAndListingAuthorAvailable","isOwnListing","showContactUser","currentAuthor","ensuredAuthor","authorDisplayName","handleBookingSubmit","isCurrentlyClosed","window","scrollTo","listingImages","variantName","images","map","image","variants","sizes","size","i","name","filter","facebookImages","twitterImages","schemaImages","JSON","stringify","img","url","siteTitle","schemaTitle","hostLink","authorNameLink","category","separator","type","tab","contentContainer","mainContent","bookingPanel","defaultProps","bookingUnitType","custom","amenities","isRequired","error","review","timeSlot","mapStateToProps","Auth","ListingPage","user","ref","listings","length","mapDispatchToProps","dispatch","componentId","disableScrolling"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { Component } from 'react';\nimport { array, arrayOf, bool, func, shape, string, oneOf } from 'prop-types';\nimport { FormattedMessage, intlShape, injectIntl } from 'react-intl';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport config from '../../config';\nimport routeConfiguration from '../../routeConfiguration';\nimport { LISTING_STATE_PENDING_APPROVAL, LISTING_STATE_CLOSED, propTypes } from '../../util/types';\nimport { types as sdkTypes } from '../../util/sdkLoader';\nimport {\n  LISTING_PAGE_DRAFT_VARIANT,\n  LISTING_PAGE_PENDING_APPROVAL_VARIANT,\n  LISTING_PAGE_PARAM_TYPE_DRAFT,\n  LISTING_PAGE_PARAM_TYPE_EDIT,\n  createSlug,\n} from '../../util/urlHelpers';\nimport { formatMoney } from '../../util/currency';\nimport { createResourceLocatorString, findRouteByRouteName } from '../../util/routes';\nimport {\n  ensureListing,\n  ensureOwnListing,\n  ensureUser,\n  userDisplayNameAsString,\n} from '../../util/data';\nimport { richText } from '../../util/richText';\nimport { getMarketplaceEntities } from '../../ducks/marketplaceData.duck';\nimport { manageDisableScrolling, isScrollingDisabled } from '../../ducks/UI.duck';\nimport {\n  Page,\n  NamedLink,\n  NamedRedirect,\n  LayoutSingleColumn,\n  LayoutWrapperTopbar,\n  LayoutWrapperMain,\n  LayoutWrapperFooter,\n  Footer,\n  BookingPanel,\n} from '../../components';\nimport { TopbarContainer, NotFoundPage } from '../../containers';\n\nimport { sendEnquiry, loadData, setInitialValues } from './ListingPage.duck';\nimport SectionImages from './SectionImages';\nimport SectionAvatar from './SectionAvatar';\nimport SectionHeading from './SectionHeading';\nimport SectionDescriptionMaybe from './SectionDescriptionMaybe';\nimport SectionFeaturesMaybe from './SectionFeaturesMaybe';\nimport SectionReviews from './SectionReviews';\nimport SectionHostMaybe from './SectionHostMaybe';\nimport SectionRulesMaybe from './SectionRulesMaybe';\nimport SectionMapMaybe from './SectionMapMaybe';\nimport css from './ListingPage.css';\n\nconst MIN_LENGTH_FOR_LONG_WORDS_IN_TITLE = 16;\n\nconst { UUID } = sdkTypes;\n\nconst priceData = (price, intl) => {\n  if (price && price.currency === config.currency) {\n    const formattedPrice = formatMoney(intl, price);\n    return { formattedPrice, priceTitle: formattedPrice };\n  } else if (price) {\n    return {\n      formattedPrice: `(${price.currency})`,\n      priceTitle: `Unsupported currency (${price.currency})`,\n    };\n  }\n  return {};\n};\n\nconst categoryLabel = (categories, key) => {\n  const cat = categories.find(c => c.key === key);\n  return cat ? cat.label : key;\n};\n\nexport class ListingPageComponent extends Component {\n  constructor(props) {\n    super(props);\n    const { enquiryModalOpenForListingId, params } = props;\n    this.state = {\n      pageClassNames: [],\n      imageCarouselOpen: false,\n      enquiryModalOpen: enquiryModalOpenForListingId === params.id,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onContactUser = this.onContactUser.bind(this);\n    this.onSubmitEnquiry = this.onSubmitEnquiry.bind(this);\n  }\n\n  handleSubmit(values) {\n    const { history, getListing, params, callSetInitialValues } = this.props;\n    const listingId = new UUID(params.id);\n    const listing = getListing(listingId);\n\n    const { bookingDates, ...bookingData } = values;\n\n    const initialValues = {\n      listing,\n      bookingData,\n      bookingDates: {\n        bookingStart: bookingDates.startDate,\n        bookingEnd: bookingDates.endDate,\n      },\n    };\n\n    const routes = routeConfiguration();\n    // Customize checkout page state with current listing and selected bookingDates\n    const { setInitialValues } = findRouteByRouteName('CheckoutPage', routes);\n    callSetInitialValues(setInitialValues, initialValues);\n\n    // Redirect to CheckoutPage\n    history.push(\n      createResourceLocatorString(\n        'CheckoutPage',\n        routes,\n        { id: listing.id.uuid, slug: createSlug(listing.attributes.title) },\n        {}\n      )\n    );\n  }\n\n  onContactUser() {\n    const { currentUser, history, callSetInitialValues, params, location } = this.props;\n\n    if (!currentUser) {\n      const state = { from: `${location.pathname}${location.search}${location.hash}` };\n\n      // We need to log in before showing the modal, but first we need to ensure\n      // that modal does open when user is redirected back to this listingpage\n      callSetInitialValues(setInitialValues, { enquiryModalOpenForListingId: params.id });\n\n      // signup and return back to listingPage.\n      history.push(createResourceLocatorString('SignupPage', routeConfiguration(), {}, {}), state);\n    } else {\n      this.setState({ enquiryModalOpen: true });\n    }\n  }\n\n  onSubmitEnquiry(values) {\n    const { history, params, onSendEnquiry } = this.props;\n    const routes = routeConfiguration();\n    const listingId = new UUID(params.id);\n    const { message } = values;\n\n    onSendEnquiry(listingId, message.trim())\n      .then(txId => {\n        this.setState({ enquiryModalOpen: false });\n\n        // Redirect to OrderDetailsPage\n        history.push(\n          createResourceLocatorString('OrderDetailsPage', routes, { id: txId.uuid }, {})\n        );\n      })\n      .catch(() => {\n        // Ignore, error handling in duck file\n      });\n  }\n\n  render() {\n    const {\n      unitType,\n      isAuthenticated,\n      currentUser,\n      getListing,\n      getOwnListing,\n      intl,\n      onManageDisableScrolling,\n      params: rawParams,\n      location,\n      scrollingDisabled,\n      showListingError,\n      reviews,\n      fetchReviewsError,\n      sendEnquiryInProgress,\n      sendEnquiryError,\n      timeSlots,\n      fetchTimeSlotsError,\n      categoriesConfig,\n      amenitiesConfig,\n    } = this.props;\n\n    const listingId = new UUID(rawParams.id);\n    const isPendingApprovalVariant = rawParams.variant === LISTING_PAGE_PENDING_APPROVAL_VARIANT;\n    const isDraftVariant = rawParams.variant === LISTING_PAGE_DRAFT_VARIANT;\n    const currentListing =\n      isPendingApprovalVariant || isDraftVariant\n        ? ensureOwnListing(getOwnListing(listingId))\n        : ensureListing(getListing(listingId));\n\n    const listingSlug = rawParams.slug || createSlug(currentListing.attributes.title || '');\n    const params = { slug: listingSlug, ...rawParams };\n\n    const listingType = isDraftVariant\n      ? LISTING_PAGE_PARAM_TYPE_DRAFT\n      : LISTING_PAGE_PARAM_TYPE_EDIT;\n    const listingTab = isDraftVariant ? 'photos' : 'description';\n\n    const isApproved =\n      currentListing.id && currentListing.attributes.state !== LISTING_STATE_PENDING_APPROVAL;\n\n    const pendingIsApproved = isPendingApprovalVariant && isApproved;\n\n    // If a /pending-approval URL is shared, the UI requires\n    // authentication and attempts to fetch the listing from own\n    // listings. This will fail with 403 Forbidden if the author is\n    // another user. We use this information to try to fetch the\n    // public listing.\n    const pendingOtherUsersListing =\n      (isPendingApprovalVariant || isDraftVariant) &&\n      showListingError &&\n      showListingError.status === 403;\n    const shouldShowPublicListingPage = pendingIsApproved || pendingOtherUsersListing;\n\n    if (shouldShowPublicListingPage) {\n      return <NamedRedirect name=\"ListingPage\" params={params} search={location.search} />;\n    }\n\n    const {\n      description = '',\n      geolocation = null,\n      price = null,\n      title = '',\n      publicData,\n    } = currentListing.attributes;\n\n    const richTitle = (\n      <span>\n        {richText(title, {\n          longWordMinLength: MIN_LENGTH_FOR_LONG_WORDS_IN_TITLE,\n          longWordClass: css.longWord,\n        })}\n      </span>\n    );\n\n    const bookingTitle = (\n      <FormattedMessage id=\"ListingPage.bookingTitle\" values={{ title: richTitle }} />\n    );\n    const bookingSubTitle = intl.formatMessage({ id: 'ListingPage.bookingSubTitle' });\n\n    const topbar = <TopbarContainer />;\n\n    if (showListingError && showListingError.status === 404) {\n      // 404 listing not found\n\n      return <NotFoundPage />;\n    } else if (showListingError) {\n      // Other error in fetching listing\n\n      const errorTitle = intl.formatMessage({\n        id: 'ListingPage.errorLoadingListingTitle',\n      });\n\n      return (\n        <Page title={errorTitle} scrollingDisabled={scrollingDisabled}>\n          <LayoutSingleColumn className={css.pageRoot}>\n            <LayoutWrapperTopbar>{topbar}</LayoutWrapperTopbar>\n            <LayoutWrapperMain>\n              <p className={css.errorText}>\n                <FormattedMessage id=\"ListingPage.errorLoadingListingMessage\" />\n              </p>\n            </LayoutWrapperMain>\n            <LayoutWrapperFooter>\n              <Footer />\n            </LayoutWrapperFooter>\n          </LayoutSingleColumn>\n        </Page>\n      );\n    } else if (!currentListing.id) {\n      // Still loading the listing\n\n      const loadingTitle = intl.formatMessage({\n        id: 'ListingPage.loadingListingTitle',\n      });\n\n      return (\n        <Page title={loadingTitle} scrollingDisabled={scrollingDisabled}>\n          <LayoutSingleColumn className={css.pageRoot}>\n            <LayoutWrapperTopbar>{topbar}</LayoutWrapperTopbar>\n            <LayoutWrapperMain>\n              <p className={css.loadingText}>\n                <FormattedMessage id=\"ListingPage.loadingListingMessage\" />\n              </p>\n            </LayoutWrapperMain>\n            <LayoutWrapperFooter>\n              <Footer />\n            </LayoutWrapperFooter>\n          </LayoutSingleColumn>\n        </Page>\n      );\n    }\n\n    const handleViewPhotosClick = e => {\n      // Stop event from bubbling up to prevent image click handler\n      // trying to open the carousel as well.\n      e.stopPropagation();\n      this.setState({\n        imageCarouselOpen: true,\n      });\n    };\n    const authorAvailable = currentListing && currentListing.author;\n    const userAndListingAuthorAvailable = !!(currentUser && authorAvailable);\n    const isOwnListing =\n      userAndListingAuthorAvailable && currentListing.author.id.uuid === currentUser.id.uuid;\n    const showContactUser = authorAvailable && (!currentUser || (currentUser && !isOwnListing));\n\n    const currentAuthor = authorAvailable ? currentListing.author : null;\n    const ensuredAuthor = ensureUser(currentAuthor);\n\n    // When user is banned or deleted the listing is also deleted.\n    // Because listing can be never showed with banned or deleted user we don't have to provide\n    // banned or deleted display names for the function\n    const authorDisplayName = userDisplayNameAsString(ensuredAuthor, '');\n\n    const { formattedPrice, priceTitle } = priceData(price, intl);\n\n    const handleBookingSubmit = values => {\n      const isCurrentlyClosed = currentListing.attributes.state === LISTING_STATE_CLOSED;\n      if (isOwnListing || isCurrentlyClosed) {\n        window.scrollTo(0, 0);\n      } else {\n        this.handleSubmit(values);\n      }\n    };\n\n    const listingImages = (listing, variantName) =>\n      (listing.images || [])\n        .map(image => {\n          const variants = image.attributes.variants;\n          const variant = variants ? variants[variantName] : null;\n\n          // deprecated\n          // for backwards combatility only\n          const sizes = image.attributes.sizes;\n          const size = sizes ? sizes.find(i => i.name === variantName) : null;\n\n          return variant || size;\n        })\n        .filter(variant => variant != null);\n\n    const facebookImages = listingImages(currentListing, 'facebook');\n    const twitterImages = listingImages(currentListing, 'twitter');\n    const schemaImages = JSON.stringify(facebookImages.map(img => img.url));\n    const siteTitle = config.siteTitle;\n    const schemaTitle = intl.formatMessage(\n      { id: 'ListingPage.schemaTitle' },\n      { title, price: formattedPrice, siteTitle }\n    );\n\n    const hostLink = (\n      <NamedLink\n        className={css.authorNameLink}\n        name=\"ListingPage\"\n        params={params}\n        to={{ hash: '#host' }}\n      >\n        {authorDisplayName}\n      </NamedLink>\n    );\n\n    const category =\n      publicData && publicData.category ? (\n        <span>\n          {categoryLabel(categoriesConfig, publicData.category)}\n          <span className={css.separator}>•</span>\n        </span>\n      ) : null;\n\n    return (\n      <Page\n        title={schemaTitle}\n        scrollingDisabled={scrollingDisabled}\n        author={authorDisplayName}\n        contentType=\"website\"\n        description={description}\n        facebookImages={facebookImages}\n        twitterImages={twitterImages}\n        schema={{\n          '@context': 'http://schema.org',\n          '@type': 'ItemPage',\n          description: description,\n          name: schemaTitle,\n          image: schemaImages,\n        }}\n      >\n        <LayoutSingleColumn className={css.pageRoot}>\n          <LayoutWrapperTopbar>{topbar}</LayoutWrapperTopbar>\n          <LayoutWrapperMain>\n            <div>\n              <SectionImages\n                title={title}\n                listing={currentListing}\n                isOwnListing={isOwnListing}\n                editParams={{\n                  id: listingId.uuid,\n                  slug: listingSlug,\n                  type: listingType,\n                  tab: listingTab,\n                }}\n                imageCarouselOpen={this.state.imageCarouselOpen}\n                onImageCarouselClose={() => this.setState({ imageCarouselOpen: false })}\n                handleViewPhotosClick={handleViewPhotosClick}\n                onManageDisableScrolling={onManageDisableScrolling}\n              />\n              <div className={css.contentContainer}>\n                <SectionAvatar user={currentAuthor} params={params} />\n                <div className={css.mainContent}>\n                  <SectionHeading\n                    priceTitle={priceTitle}\n                    formattedPrice={formattedPrice}\n                    richTitle={richTitle}\n                    category={category}\n                    hostLink={hostLink}\n                    showContactUser={showContactUser}\n                    onContactUser={this.onContactUser}\n                  />\n                  <SectionDescriptionMaybe description={description} />\n                  <SectionFeaturesMaybe options={amenitiesConfig} publicData={publicData} />\n                  <SectionRulesMaybe publicData={publicData} />\n                  <SectionMapMaybe\n                    geolocation={geolocation}\n                    publicData={publicData}\n                    listingId={currentListing.id}\n                  />\n                  <SectionReviews reviews={reviews} fetchReviewsError={fetchReviewsError} />\n                  <SectionHostMaybe\n                    title={title}\n                    listing={currentListing}\n                    authorDisplayName={authorDisplayName}\n                    onContactUser={this.onContactUser}\n                    isEnquiryModalOpen={isAuthenticated && this.state.enquiryModalOpen}\n                    onCloseEnquiryModal={() => this.setState({ enquiryModalOpen: false })}\n                    sendEnquiryError={sendEnquiryError}\n                    sendEnquiryInProgress={sendEnquiryInProgress}\n                    onSubmitEnquiry={this.onSubmitEnquiry}\n                    currentUser={currentUser}\n                    onManageDisableScrolling={onManageDisableScrolling}\n                  />\n                </div>\n                <BookingPanel\n                  className={css.bookingPanel}\n                  listing={currentListing}\n                  isOwnListing={isOwnListing}\n                  unitType={unitType}\n                  onSubmit={handleBookingSubmit}\n                  title={bookingTitle}\n                  subTitle={bookingSubTitle}\n                  authorDisplayName={authorDisplayName}\n                  onManageDisableScrolling={onManageDisableScrolling}\n                  timeSlots={timeSlots}\n                  fetchTimeSlotsError={fetchTimeSlotsError}\n                />\n              </div>\n            </div>\n          </LayoutWrapperMain>\n          <LayoutWrapperFooter>\n            <Footer />\n          </LayoutWrapperFooter>\n        </LayoutSingleColumn>\n      </Page>\n    );\n  }\n}\n\nListingPageComponent.defaultProps = {\n  unitType: config.bookingUnitType,\n  currentUser: null,\n  enquiryModalOpenForListingId: null,\n  showListingError: null,\n  reviews: [],\n  fetchReviewsError: null,\n  timeSlots: null,\n  fetchTimeSlotsError: null,\n  sendEnquiryError: null,\n  categoriesConfig: config.custom.categories,\n  amenitiesConfig: config.custom.amenities,\n};\n\nListingPageComponent.propTypes = {\n  // from withRouter\n  history: shape({\n    push: func.isRequired,\n  }).isRequired,\n  location: shape({\n    search: string,\n  }).isRequired,\n\n  unitType: propTypes.bookingUnitType,\n  // from injectIntl\n  intl: intlShape.isRequired,\n\n  params: shape({\n    id: string.isRequired,\n    slug: string,\n    variant: oneOf([LISTING_PAGE_DRAFT_VARIANT, LISTING_PAGE_PENDING_APPROVAL_VARIANT]),\n  }).isRequired,\n\n  isAuthenticated: bool.isRequired,\n  currentUser: propTypes.currentUser,\n  getListing: func.isRequired,\n  getOwnListing: func.isRequired,\n  onManageDisableScrolling: func.isRequired,\n  scrollingDisabled: bool.isRequired,\n  enquiryModalOpenForListingId: string,\n  showListingError: propTypes.error,\n  callSetInitialValues: func.isRequired,\n  reviews: arrayOf(propTypes.review),\n  fetchReviewsError: propTypes.error,\n  timeSlots: arrayOf(propTypes.timeSlot),\n  fetchTimeSlotsError: propTypes.error,\n  sendEnquiryInProgress: bool.isRequired,\n  sendEnquiryError: propTypes.error,\n  onSendEnquiry: func.isRequired,\n\n  categoriesConfig: array,\n  amenitiesConfig: array,\n};\n\nconst mapStateToProps = state => {\n  const { isAuthenticated } = state.Auth;\n  const {\n    showListingError,\n    reviews,\n    fetchReviewsError,\n    timeSlots,\n    fetchTimeSlotsError,\n    sendEnquiryInProgress,\n    sendEnquiryError,\n    enquiryModalOpenForListingId,\n  } = state.ListingPage;\n  const { currentUser } = state.user;\n\n  const getListing = id => {\n    const ref = { id, type: 'listing' };\n    const listings = getMarketplaceEntities(state, [ref]);\n    return listings.length === 1 ? listings[0] : null;\n  };\n\n  const getOwnListing = id => {\n    const ref = { id, type: 'ownListing' };\n    const listings = getMarketplaceEntities(state, [ref]);\n    return listings.length === 1 ? listings[0] : null;\n  };\n\n  return {\n    isAuthenticated,\n    currentUser,\n    getListing,\n    getOwnListing,\n    scrollingDisabled: isScrollingDisabled(state),\n    enquiryModalOpenForListingId,\n    showListingError,\n    reviews,\n    fetchReviewsError,\n    timeSlots,\n    fetchTimeSlotsError,\n    sendEnquiryInProgress,\n    sendEnquiryError,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onManageDisableScrolling: (componentId, disableScrolling) =>\n    dispatch(manageDisableScrolling(componentId, disableScrolling)),\n  callSetInitialValues: (setInitialValues, values) => dispatch(setInitialValues(values)),\n  onSendEnquiry: (listingId, message) => dispatch(sendEnquiry(listingId, message)),\n});\n\n// Note: it is important that the withRouter HOC is **outside** the\n// connect HOC, otherwise React Router won't rerender any Route\n// components since connect implements a shouldComponentUpdate\n// lifecycle hook.\n//\n// See: https://github.com/ReactTraining/react-router/issues/4671\nconst ListingPage = compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  injectIntl\n)(ListingPageComponent);\n\nListingPage.setInitialValues = initialValues => setInitialValues(initialValues);\nListingPage.loadData = loadData;\n\nexport default ListingPage;\n"]},"metadata":{},"sourceType":"module"}