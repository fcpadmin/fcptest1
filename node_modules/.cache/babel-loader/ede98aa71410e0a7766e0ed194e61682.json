{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/containers/ListingPage/SectionHeading.js\";\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { InlineTextButton } from '../../components';\nimport { LINE_ITEM_NIGHT, LINE_ITEM_DAY } from '../../util/types';\nimport config from '../../config';\nimport css from './ListingPage.css';\n\nconst SectionHeading = props => {\n  const priceTitle = props.priceTitle,\n        formattedPrice = props.formattedPrice,\n        richTitle = props.richTitle,\n        category = props.category,\n        hostLink = props.hostLink,\n        showContactUser = props.showContactUser,\n        onContactUser = props.onContactUser;\n  const unitType = config.bookingUnitType;\n  const isNightly = unitType === LINE_ITEM_NIGHT;\n  const isDaily = unitType === LINE_ITEM_DAY;\n  const unitTranslationKey = isNightly ? 'ListingPage.perNight' : isDaily ? 'ListingPage.perDay' : 'ListingPage.perUnit';\n  return React.createElement(\"div\", {\n    className: css.sectionHeading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css.desktopPriceContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css.desktopPriceValue,\n    title: priceTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, formattedPrice), React.createElement(\"div\", {\n    className: css.desktopPerUnit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: unitTranslationKey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: css.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: css.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, richTitle), React.createElement(\"div\", {\n    className: css.author,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, category, React.createElement(FormattedMessage, {\n    id: \"ListingPage.hostedBy\",\n    values: {\n      name: hostLink\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), showContactUser ? React.createElement(\"span\", {\n    className: css.contactWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: css.separator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"\\u2022\"), React.createElement(InlineTextButton, {\n    rootClassName: css.contactLink,\n    onClick: onContactUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ListingPage.contactUser\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))) : null)));\n};\n\nexport default SectionHeading;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/containers/ListingPage/SectionHeading.js"],"names":["React","FormattedMessage","InlineTextButton","LINE_ITEM_NIGHT","LINE_ITEM_DAY","config","css","SectionHeading","props","priceTitle","formattedPrice","richTitle","category","hostLink","showContactUser","onContactUser","unitType","bookingUnitType","isNightly","isDaily","unitTranslationKey","sectionHeading","desktopPriceContainer","desktopPriceValue","desktopPerUnit","heading","title","author","name","contactWrapper","separator","contactLink"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,kBAA/C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAAA,QAE5BC,UAF4B,GAS1BD,KAT0B,CAE5BC,UAF4B;AAAA,QAG5BC,cAH4B,GAS1BF,KAT0B,CAG5BE,cAH4B;AAAA,QAI5BC,SAJ4B,GAS1BH,KAT0B,CAI5BG,SAJ4B;AAAA,QAK5BC,QAL4B,GAS1BJ,KAT0B,CAK5BI,QAL4B;AAAA,QAM5BC,QAN4B,GAS1BL,KAT0B,CAM5BK,QAN4B;AAAA,QAO5BC,eAP4B,GAS1BN,KAT0B,CAO5BM,eAP4B;AAAA,QAQ5BC,aAR4B,GAS1BP,KAT0B,CAQ5BO,aAR4B;AAW9B,QAAMC,QAAQ,GAAGX,MAAM,CAACY,eAAxB;AACA,QAAMC,SAAS,GAAGF,QAAQ,KAAKb,eAA/B;AACA,QAAMgB,OAAO,GAAGH,QAAQ,KAAKZ,aAA7B;AAEA,QAAMgB,kBAAkB,GAAGF,SAAS,GAChC,sBADgC,GAEhCC,OAAO,GACP,oBADO,GAEP,qBAJJ;AAMA,SACE;AAAK,IAAA,SAAS,EAAEb,GAAG,CAACe,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEf,GAAG,CAACgB,qBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEhB,GAAG,CAACiB,iBAApB;AAAuC,IAAA,KAAK,EAAEd,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,cADH,CADF,EAIE;AAAK,IAAA,SAAS,EAAEJ,GAAG,CAACkB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAEJ,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF,EASE;AAAK,IAAA,SAAS,EAAEd,GAAG,CAACmB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEnB,GAAG,CAACoB,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2Bf,SAA3B,CADF,EAEE;AAAK,IAAA,SAAS,EAAEL,GAAG,CAACqB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,QADH,EAEE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,sBAArB;AAA4C,IAAA,MAAM,EAAE;AAAEgB,MAAAA,IAAI,EAAEf;AAAR,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGC,eAAe,GACd;AAAM,IAAA,SAAS,EAAER,GAAG,CAACuB,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAEvB,GAAG,CAACwB,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,gBAAD;AAAkB,IAAA,aAAa,EAAExB,GAAG,CAACyB,WAArC;AAAkD,IAAA,OAAO,EAAEhB,aAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,yBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADc,GAOZ,IAVN,CAFF,CATF,CADF;AA2BD,CAhDD;;AAkDA,eAAeR,cAAf","sourcesContent":["import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { InlineTextButton } from '../../components';\nimport { LINE_ITEM_NIGHT, LINE_ITEM_DAY } from '../../util/types';\nimport config from '../../config';\n\nimport css from './ListingPage.css';\n\nconst SectionHeading = props => {\n  const {\n    priceTitle,\n    formattedPrice,\n    richTitle,\n    category,\n    hostLink,\n    showContactUser,\n    onContactUser,\n  } = props;\n\n  const unitType = config.bookingUnitType;\n  const isNightly = unitType === LINE_ITEM_NIGHT;\n  const isDaily = unitType === LINE_ITEM_DAY;\n\n  const unitTranslationKey = isNightly\n    ? 'ListingPage.perNight'\n    : isDaily\n    ? 'ListingPage.perDay'\n    : 'ListingPage.perUnit';\n\n  return (\n    <div className={css.sectionHeading}>\n      <div className={css.desktopPriceContainer}>\n        <div className={css.desktopPriceValue} title={priceTitle}>\n          {formattedPrice}\n        </div>\n        <div className={css.desktopPerUnit}>\n          <FormattedMessage id={unitTranslationKey} />\n        </div>\n      </div>\n      <div className={css.heading}>\n        <h1 className={css.title}>{richTitle}</h1>\n        <div className={css.author}>\n          {category}\n          <FormattedMessage id=\"ListingPage.hostedBy\" values={{ name: hostLink }} />\n          {showContactUser ? (\n            <span className={css.contactWrapper}>\n              <span className={css.separator}>â€¢</span>\n              <InlineTextButton rootClassName={css.contactLink} onClick={onContactUser}>\n                <FormattedMessage id=\"ListingPage.contactUser\" />\n              </InlineTextButton>\n            </span>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SectionHeading;\n"]},"metadata":{},"sourceType":"module"}