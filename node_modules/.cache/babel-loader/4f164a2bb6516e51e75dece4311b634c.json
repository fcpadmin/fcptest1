{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/BookingBreakdown/LineItemProviderCommissionMaybe.js\";\nimport React from 'react';\nimport { bool } from 'prop-types';\nimport { FormattedMessage, intlShape } from 'react-intl';\nimport { formatMoney } from '../../util/currency';\nimport { types as sdkTypes } from '../../util/sdkLoader';\nimport { LINE_ITEM_PROVIDER_COMMISSION, propTypes } from '../../util/types';\nimport css from './BookingBreakdown.css';\nconst Money = sdkTypes.Money; // Validate the assumption that the commission exists and the amount\n// is zero or negative.\n\nconst isValidCommission = commissionLineItem => {\n  return commissionLineItem && commissionLineItem.lineTotal instanceof Money && commissionLineItem.lineTotal.amount <= 0;\n};\n\nconst LineItemProviderCommissionMaybe = props => {\n  const transaction = props.transaction,\n        isProvider = props.isProvider,\n        intl = props.intl;\n  const providerCommissionLineItem = transaction.attributes.lineItems.find(item => item.code === LINE_ITEM_PROVIDER_COMMISSION && !item.reversal); // If commission is passed it will be shown as a fee already reduces from the total price\n\n  let commissionItem = null;\n\n  if (isProvider) {\n    if (!isValidCommission(providerCommissionLineItem)) {\n      // eslint-disable-next-line no-console\n      console.error('invalid commission line item:', providerCommissionLineItem);\n      throw new Error('Commission should be present and the value should be zero or negative');\n    }\n\n    const commission = providerCommissionLineItem.lineTotal;\n    const formattedCommission = commission ? formatMoney(intl, commission) : null;\n    commissionItem = React.createElement(\"div\", {\n      className: css.lineItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: css.itemLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"BookingBreakdown.commission\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: css.itemValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, formattedCommission));\n  }\n\n  return commissionItem;\n};\n\nLineItemProviderCommissionMaybe.propTypes = {\n  transaction: propTypes.transaction.isRequired,\n  isProvider: bool.isRequired,\n  intl: intlShape.isRequired\n};\nexport default LineItemProviderCommissionMaybe;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/BookingBreakdown/LineItemProviderCommissionMaybe.js"],"names":["React","bool","FormattedMessage","intlShape","formatMoney","types","sdkTypes","LINE_ITEM_PROVIDER_COMMISSION","propTypes","css","Money","isValidCommission","commissionLineItem","lineTotal","amount","LineItemProviderCommissionMaybe","props","transaction","isProvider","intl","providerCommissionLineItem","attributes","lineItems","find","item","code","reversal","commissionItem","console","error","Error","commission","formattedCommission","lineItem","itemLabel","itemValue","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,gBAAT,EAA2BC,SAA3B,QAA4C,YAA5C;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,KAAK,IAAIC,QAAlB,QAAkC,sBAAlC;AACA,SAASC,6BAAT,EAAwCC,SAAxC,QAAyD,kBAAzD;AAEA,OAAOC,GAAP,MAAgB,wBAAhB;MAEQC,K,GAAUJ,Q,CAAVI,K,EAER;AACA;;AACA,MAAMC,iBAAiB,GAAGC,kBAAkB,IAAI;AAC9C,SACEA,kBAAkB,IAClBA,kBAAkB,CAACC,SAAnB,YAAwCH,KADxC,IAEAE,kBAAkB,CAACC,SAAnB,CAA6BC,MAA7B,IAAuC,CAHzC;AAKD,CAND;;AAQA,MAAMC,+BAA+B,GAAGC,KAAK,IAAI;AAAA,QACvCC,WADuC,GACLD,KADK,CACvCC,WADuC;AAAA,QAC1BC,UAD0B,GACLF,KADK,CAC1BE,UAD0B;AAAA,QACdC,IADc,GACLH,KADK,CACdG,IADc;AAG/C,QAAMC,0BAA0B,GAAGH,WAAW,CAACI,UAAZ,CAAuBC,SAAvB,CAAiCC,IAAjC,CACjCC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAclB,6BAAd,IAA+C,CAACiB,IAAI,CAACE,QAD5B,CAAnC,CAH+C,CAO/C;;AACA,MAAIC,cAAc,GAAG,IAArB;;AAEA,MAAIT,UAAJ,EAAgB;AACd,QAAI,CAACP,iBAAiB,CAACS,0BAAD,CAAtB,EAAoD;AAClD;AACAQ,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CT,0BAA/C;AACA,YAAM,IAAIU,KAAJ,CAAU,uEAAV,CAAN;AACD;;AAED,UAAMC,UAAU,GAAGX,0BAA0B,CAACP,SAA9C;AACA,UAAMmB,mBAAmB,GAAGD,UAAU,GAAG3B,WAAW,CAACe,IAAD,EAAOY,UAAP,CAAd,GAAmC,IAAzE;AAEAJ,IAAAA,cAAc,GACZ;AAAK,MAAA,SAAS,EAAElB,GAAG,CAACwB,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAExB,GAAG,CAACyB,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,6BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAM,MAAA,SAAS,EAAEzB,GAAG,CAAC0B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCH,mBAAjC,CAJF,CADF;AAQD;;AAED,SAAOL,cAAP;AACD,CA/BD;;AAiCAZ,+BAA+B,CAACP,SAAhC,GAA4C;AAC1CS,EAAAA,WAAW,EAAET,SAAS,CAACS,WAAV,CAAsBmB,UADO;AAE1ClB,EAAAA,UAAU,EAAEjB,IAAI,CAACmC,UAFyB;AAG1CjB,EAAAA,IAAI,EAAEhB,SAAS,CAACiC;AAH0B,CAA5C;AAMA,eAAerB,+BAAf","sourcesContent":["import React from 'react';\nimport { bool } from 'prop-types';\nimport { FormattedMessage, intlShape } from 'react-intl';\nimport { formatMoney } from '../../util/currency';\nimport { types as sdkTypes } from '../../util/sdkLoader';\nimport { LINE_ITEM_PROVIDER_COMMISSION, propTypes } from '../../util/types';\n\nimport css from './BookingBreakdown.css';\n\nconst { Money } = sdkTypes;\n\n// Validate the assumption that the commission exists and the amount\n// is zero or negative.\nconst isValidCommission = commissionLineItem => {\n  return (\n    commissionLineItem &&\n    commissionLineItem.lineTotal instanceof Money &&\n    commissionLineItem.lineTotal.amount <= 0\n  );\n};\n\nconst LineItemProviderCommissionMaybe = props => {\n  const { transaction, isProvider, intl } = props;\n\n  const providerCommissionLineItem = transaction.attributes.lineItems.find(\n    item => item.code === LINE_ITEM_PROVIDER_COMMISSION && !item.reversal\n  );\n\n  // If commission is passed it will be shown as a fee already reduces from the total price\n  let commissionItem = null;\n\n  if (isProvider) {\n    if (!isValidCommission(providerCommissionLineItem)) {\n      // eslint-disable-next-line no-console\n      console.error('invalid commission line item:', providerCommissionLineItem);\n      throw new Error('Commission should be present and the value should be zero or negative');\n    }\n\n    const commission = providerCommissionLineItem.lineTotal;\n    const formattedCommission = commission ? formatMoney(intl, commission) : null;\n\n    commissionItem = (\n      <div className={css.lineItem}>\n        <span className={css.itemLabel}>\n          <FormattedMessage id=\"BookingBreakdown.commission\" />\n        </span>\n        <span className={css.itemValue}>{formattedCommission}</span>\n      </div>\n    );\n  }\n\n  return commissionItem;\n};\n\nLineItemProviderCommissionMaybe.propTypes = {\n  transaction: propTypes.transaction.isRequired,\n  isProvider: bool.isRequired,\n  intl: intlShape.isRequired,\n};\n\nexport default LineItemProviderCommissionMaybe;\n"]},"metadata":{},"sourceType":"module"}