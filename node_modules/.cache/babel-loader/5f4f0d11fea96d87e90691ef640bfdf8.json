{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/forms/PayoutDetailsForm/PayoutDetailsPersonalDetails.js\";\nimport React from 'react';\nimport { bool, node, object, oneOf, string } from 'prop-types';\nimport { FormattedMessage, intlShape } from 'react-intl';\nimport * as validators from '../../util/validators';\nimport { FieldBirthdayInput, FieldCheckbox, FieldTextInput } from '../../components';\nimport * as normalizePhoneNumberUS from './normalizePhoneNumberUS';\nimport css from './PayoutDetailsForm.css';\nconst MIN_STRIPE_ACCOUNT_AGE = 18;\n\nconst PayoutDetailsPersonalDetails = props => {\n  const intl = props.intl,\n        disabled = props.disabled,\n        values = props.values,\n        country = props.country,\n        fieldId = props.fieldId,\n        sectionTitle = props.sectionTitle,\n        showEmailField = props.showEmailField,\n        showOrganizationTitleField = props.showOrganizationTitleField,\n        showOwnerField = props.showOwnerField,\n        showOwnershipPercentageField = props.showOwnershipPercentageField,\n        showPersonalIdNumberField = props.showPersonalIdNumberField,\n        showPhoneNumberField = props.showPhoneNumberField;\n  const organizationTitleLabel = intl.formatMessage({\n    id: 'PayoutDetailsForm.organizationTitleLabel'\n  });\n  const organizationTitlePlaceholder = intl.formatMessage({\n    id: 'PayoutDetailsForm.organizationTitlePlaceholder'\n  });\n  const personalDetailsTitle = sectionTitle ? sectionTitle : intl.formatMessage({\n    id: 'PayoutDetailsForm.personalDetailsTitle'\n  });\n  const firstNameLabel = intl.formatMessage({\n    id: 'PayoutDetailsForm.firstNameLabel'\n  });\n  const firstNamePlaceholder = intl.formatMessage({\n    id: 'PayoutDetailsForm.firstNamePlaceholder'\n  });\n  const firstNameRequired = validators.required(intl.formatMessage({\n    id: 'PayoutDetailsForm.firstNameRequired'\n  }));\n  const lastNameLabel = intl.formatMessage({\n    id: 'PayoutDetailsForm.lastNameLabel'\n  });\n  const lastNamePlaceholder = intl.formatMessage({\n    id: 'PayoutDetailsForm.lastNamePlaceholder'\n  });\n  const lastNameRequired = validators.required(intl.formatMessage({\n    id: 'PayoutDetailsForm.lastNameRequired'\n  }));\n  const birthdayLabel = intl.formatMessage({\n    id: 'PayoutDetailsForm.birthdayLabel'\n  });\n  const birthdayLabelMonth = intl.formatMessage({\n    id: 'PayoutDetailsForm.birthdayLabelMonth'\n  });\n  const birthdayLabelYear = intl.formatMessage({\n    id: 'PayoutDetailsForm.birthdayLabelYear'\n  });\n  const birthdayRequired = validators.required(intl.formatMessage({\n    id: 'PayoutDetailsForm.birthdayRequired'\n  }));\n  const birthdayMinAge = validators.ageAtLeast(intl.formatMessage({\n    id: 'PayoutDetailsForm.birthdayMinAge'\n  }, {\n    minAge: MIN_STRIPE_ACCOUNT_AGE\n  }), MIN_STRIPE_ACCOUNT_AGE);\n  const personalIdNumberRequired = validators.required(intl.formatMessage({\n    id: \"PayoutDetailsForm.personalIdNumberRequired\"\n  }));\n  let personalIdNumberLabel = null;\n  let personalIdNumberPlaceholder = null;\n  let personalIdNumberValid = personalIdNumberRequired;\n\n  if (country === 'US') {\n    personalIdNumberLabel = intl.formatMessage({\n      id: \"PayoutDetailsForm.personalIdNumberLabel.US\"\n    });\n    personalIdNumberPlaceholder = intl.formatMessage({\n      id: \"PayoutDetailsForm.personalIdNumberPlaceholder.US\"\n    });\n    const validSSN = validators.validSsnLast4(intl.formatMessage({\n      id: \"PayoutDetailsForm.personalIdNumberValid\"\n    }));\n    personalIdNumberValid = validators.composeValidators(personalIdNumberRequired, validSSN);\n  } else if (country === 'HK') {\n    personalIdNumberLabel = intl.formatMessage({\n      id: \"PayoutDetailsForm.personalIdNumberLabel.HK\"\n    });\n    personalIdNumberPlaceholder = intl.formatMessage({\n      id: \"PayoutDetailsForm.personalIdNumberPlaceholder.HK\"\n    });\n    const validHKID = validators.validHKID(intl.formatMessage({\n      id: \"PayoutDetailsForm.personalIdNumberValid\"\n    }));\n    personalIdNumberValid = validators.composeValidators(personalIdNumberRequired, validHKID);\n  }\n\n  const phoneLabel = intl.formatMessage({\n    id: 'PayoutDetailsForm.personalPhoneLabel'\n  });\n  const phonePlaceholder = intl.formatMessage({\n    id: 'PayoutDetailsForm.personalPhonePlaceholder'\n  });\n  const phoneNumberForUSRequired = validators.required(intl.formatMessage({\n    id: 'PayoutDetailsForm.personalPhoneRequired'\n  }));\n  const emailLabel = intl.formatMessage({\n    id: 'PayoutDetailsForm.personalEmailLabel'\n  });\n  const emailPlaceholder = intl.formatMessage({\n    id: 'PayoutDetailsForm.personalEmailPlaceholder'\n  });\n  const emailRequired = validators.required(intl.formatMessage({\n    id: 'PayoutDetailsForm.personalEmailRequired'\n  }));\n\n  const parseOwnershipPercentage = value => {\n    if (!value) {\n      return value;\n    }\n\n    const pattern = /^\\d{0,3}(?:\\.\\d{1,2})?$/;\n    const hasCorrectFormat = value.match(pattern);\n    const floatValue = Number.parseFloat(value);\n    const isInRange = 0 <= floatValue && floatValue <= 100;\n    return hasCorrectFormat && isInRange ? value : hasCorrectFormat && floatValue < 0 ? 0 : hasCorrectFormat && floatValue > 100 ? 100 : value.substring(0, value.length - 1);\n  }; // Note: fname and lname are input names for browser autofill functionality.\n\n\n  return React.createElement(\"div\", {\n    className: css.sectionContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: css.subTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, personalDetailsTitle), React.createElement(\"div\", {\n    className: css.formRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(FieldTextInput, {\n    id: \"\".concat(fieldId, \".firstName\"),\n    name: \"\".concat(fieldId, \".fname\"),\n    disabled: disabled,\n    className: css.firstName,\n    type: \"text\",\n    autoComplete: \"given-name\",\n    label: firstNameLabel,\n    placeholder: firstNamePlaceholder,\n    validate: firstNameRequired,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), React.createElement(FieldTextInput, {\n    id: \"\".concat(fieldId, \".lastName\"),\n    name: \"\".concat(fieldId, \".lname\"),\n    disabled: disabled,\n    className: css.lastName,\n    type: \"text\",\n    autoComplete: \"family-name\",\n    label: lastNameLabel,\n    placeholder: lastNamePlaceholder,\n    validate: lastNameRequired,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  })), showOwnerField ? React.createElement(\"fieldset\", {\n    className: css.roleField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"PayoutDetailsForm.role\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  })), React.createElement(FieldCheckbox, {\n    id: \"\".concat(fieldId, \".owner\"),\n    className: css.textInputRow,\n    name: \"\".concat(fieldId, \".role\"),\n    label: intl.formatMessage({\n      id: 'PayoutDetailsForm.owner'\n    }),\n    value: \"owner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  })) : null, showOwnershipPercentageField ? React.createElement(FieldTextInput, {\n    id: \"\".concat(fieldId, \".ownershipPercentage\"),\n    name: \"\".concat(fieldId, \".ownershipPercentage\"),\n    className: css.ownershipPercentage,\n    disabled: disabled,\n    label: intl.formatMessage({\n      id: 'PayoutDetailsForm.ownershipPercentageLabel'\n    }),\n    placeholder: intl.formatMessage({\n      id: 'PayoutDetailsForm.ownershipPercentagePlaceholder'\n    }),\n    type: \"number\",\n    min: 0,\n    max: 100,\n    step: \"0.01\",\n    parse: parseOwnershipPercentage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }) : null, showOrganizationTitleField ? React.createElement(FieldTextInput, {\n    id: \"\".concat(fieldId, \".title\"),\n    name: \"\".concat(fieldId, \".title\"),\n    className: css.textInputRow,\n    autoComplete: \"organization-title\",\n    disabled: disabled,\n    label: organizationTitleLabel,\n    placeholder: organizationTitlePlaceholder,\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }) : null, React.createElement(\"div\", {\n    className: css.formRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(FieldBirthdayInput, {\n    id: \"\".concat(fieldId, \".birthDate\"),\n    name: \"\".concat(fieldId, \".birthDate\"),\n    disabled: disabled,\n    className: css.field,\n    label: birthdayLabel,\n    labelForMonth: birthdayLabelMonth,\n    labelForYear: birthdayLabelYear,\n    format: null,\n    valueFromForm: values.birthDate,\n    validate: validators.composeValidators(birthdayRequired, birthdayMinAge),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  })), showPersonalIdNumberField ? React.createElement(FieldTextInput, {\n    id: \"\".concat(fieldId, \".personalIdNumber\"),\n    name: \"\".concat(fieldId, \".personalIdNumber\"),\n    disabled: disabled,\n    className: css.textInputRow,\n    type: \"text\",\n    label: personalIdNumberLabel,\n    placeholder: personalIdNumberPlaceholder,\n    validate: personalIdNumberValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }) : null, showPhoneNumberField ? React.createElement(FieldTextInput, {\n    id: \"\".concat(fieldId, \".phone\"),\n    name: \"\".concat(fieldId, \".phone\"),\n    className: css.textInputRow,\n    autoComplete: \"tel-national\",\n    disabled: disabled,\n    format: normalizePhoneNumberUS.format,\n    label: phoneLabel,\n    parse: normalizePhoneNumberUS.parse,\n    placeholder: phonePlaceholder,\n    type: \"text\",\n    validate: phoneNumberForUSRequired,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }) : null, showEmailField ? React.createElement(FieldTextInput, {\n    id: \"\".concat(fieldId, \".email\"),\n    name: \"\".concat(fieldId, \".email\"),\n    className: css.textInputRow,\n    autoComplete: \"email\",\n    disabled: disabled,\n    label: emailLabel,\n    placeholder: emailPlaceholder,\n    type: \"text\",\n    validate: emailRequired,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }) : null);\n};\n\nPayoutDetailsPersonalDetails.defaultProps = {\n  country: null,\n  disabled: false,\n  fieldId: null,\n  sectionTitle: null,\n  showEmailField: false,\n  showOrganizationTitleField: false,\n  showOwnerField: false,\n  showOwnershipPercentageField: false,\n  showPersonalIdNumberField: false,\n  showPhoneNumberField: false,\n  values: null\n};\nPayoutDetailsPersonalDetails.propTypes = {\n  accountType: oneOf(['company', 'individual']).isRequired,\n  country: string,\n  disabled: bool,\n  fieldId: string,\n  intl: intlShape.isRequired,\n  sectionTitle: node,\n  showEmailField: bool,\n  showOrganizationTitleField: bool,\n  showOwnerField: bool,\n  showOwnershipPercentageField: bool,\n  showPersonalIdNumberField: bool,\n  showPhoneNumberField: bool,\n  values: object\n};\nexport default PayoutDetailsPersonalDetails;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/forms/PayoutDetailsForm/PayoutDetailsPersonalDetails.js"],"names":["React","bool","node","object","oneOf","string","FormattedMessage","intlShape","validators","FieldBirthdayInput","FieldCheckbox","FieldTextInput","normalizePhoneNumberUS","css","MIN_STRIPE_ACCOUNT_AGE","PayoutDetailsPersonalDetails","props","intl","disabled","values","country","fieldId","sectionTitle","showEmailField","showOrganizationTitleField","showOwnerField","showOwnershipPercentageField","showPersonalIdNumberField","showPhoneNumberField","organizationTitleLabel","formatMessage","id","organizationTitlePlaceholder","personalDetailsTitle","firstNameLabel","firstNamePlaceholder","firstNameRequired","required","lastNameLabel","lastNamePlaceholder","lastNameRequired","birthdayLabel","birthdayLabelMonth","birthdayLabelYear","birthdayRequired","birthdayMinAge","ageAtLeast","minAge","personalIdNumberRequired","personalIdNumberLabel","personalIdNumberPlaceholder","personalIdNumberValid","validSSN","validSsnLast4","composeValidators","validHKID","phoneLabel","phonePlaceholder","phoneNumberForUSRequired","emailLabel","emailPlaceholder","emailRequired","parseOwnershipPercentage","value","pattern","hasCorrectFormat","match","floatValue","Number","parseFloat","isInRange","substring","length","sectionContainer","subTitle","formRow","firstName","lastName","roleField","textInputRow","ownershipPercentage","field","birthDate","format","parse","defaultProps","propTypes","accountType","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { bool, node, object, oneOf, string } from 'prop-types';\nimport { FormattedMessage, intlShape } from 'react-intl';\nimport * as validators from '../../util/validators';\nimport { FieldBirthdayInput, FieldCheckbox, FieldTextInput } from '../../components';\n\nimport * as normalizePhoneNumberUS from './normalizePhoneNumberUS';\nimport css from './PayoutDetailsForm.css';\n\nconst MIN_STRIPE_ACCOUNT_AGE = 18;\n\nconst PayoutDetailsPersonalDetails = props => {\n  const {\n    intl,\n    disabled,\n    values,\n    country,\n    fieldId,\n    sectionTitle,\n    showEmailField,\n    showOrganizationTitleField,\n    showOwnerField,\n    showOwnershipPercentageField,\n    showPersonalIdNumberField,\n    showPhoneNumberField,\n  } = props;\n\n  const organizationTitleLabel = intl.formatMessage({\n    id: 'PayoutDetailsForm.organizationTitleLabel',\n  });\n  const organizationTitlePlaceholder = intl.formatMessage({\n    id: 'PayoutDetailsForm.organizationTitlePlaceholder',\n  });\n\n  const personalDetailsTitle = sectionTitle\n    ? sectionTitle\n    : intl.formatMessage({ id: 'PayoutDetailsForm.personalDetailsTitle' });\n\n  const firstNameLabel = intl.formatMessage({ id: 'PayoutDetailsForm.firstNameLabel' });\n  const firstNamePlaceholder = intl.formatMessage({\n    id: 'PayoutDetailsForm.firstNamePlaceholder',\n  });\n  const firstNameRequired = validators.required(\n    intl.formatMessage({\n      id: 'PayoutDetailsForm.firstNameRequired',\n    })\n  );\n\n  const lastNameLabel = intl.formatMessage({ id: 'PayoutDetailsForm.lastNameLabel' });\n  const lastNamePlaceholder = intl.formatMessage({\n    id: 'PayoutDetailsForm.lastNamePlaceholder',\n  });\n  const lastNameRequired = validators.required(\n    intl.formatMessage({\n      id: 'PayoutDetailsForm.lastNameRequired',\n    })\n  );\n\n  const birthdayLabel = intl.formatMessage({ id: 'PayoutDetailsForm.birthdayLabel' });\n  const birthdayLabelMonth = intl.formatMessage({\n    id: 'PayoutDetailsForm.birthdayLabelMonth',\n  });\n  const birthdayLabelYear = intl.formatMessage({ id: 'PayoutDetailsForm.birthdayLabelYear' });\n  const birthdayRequired = validators.required(\n    intl.formatMessage({\n      id: 'PayoutDetailsForm.birthdayRequired',\n    })\n  );\n  const birthdayMinAge = validators.ageAtLeast(\n    intl.formatMessage(\n      {\n        id: 'PayoutDetailsForm.birthdayMinAge',\n      },\n      {\n        minAge: MIN_STRIPE_ACCOUNT_AGE,\n      }\n    ),\n    MIN_STRIPE_ACCOUNT_AGE\n  );\n\n  const personalIdNumberRequired = validators.required(\n    intl.formatMessage({\n      id: `PayoutDetailsForm.personalIdNumberRequired`,\n    })\n  );\n\n  let personalIdNumberLabel = null;\n  let personalIdNumberPlaceholder = null;\n  let personalIdNumberValid = personalIdNumberRequired;\n\n  if (country === 'US') {\n    personalIdNumberLabel = intl.formatMessage({\n      id: `PayoutDetailsForm.personalIdNumberLabel.US`,\n    });\n    personalIdNumberPlaceholder = intl.formatMessage({\n      id: `PayoutDetailsForm.personalIdNumberPlaceholder.US`,\n    });\n\n    const validSSN = validators.validSsnLast4(\n      intl.formatMessage({\n        id: `PayoutDetailsForm.personalIdNumberValid`,\n      })\n    );\n    personalIdNumberValid = validators.composeValidators(personalIdNumberRequired, validSSN);\n  } else if (country === 'HK') {\n    personalIdNumberLabel = intl.formatMessage({\n      id: `PayoutDetailsForm.personalIdNumberLabel.HK`,\n    });\n    personalIdNumberPlaceholder = intl.formatMessage({\n      id: `PayoutDetailsForm.personalIdNumberPlaceholder.HK`,\n    });\n    const validHKID = validators.validHKID(\n      intl.formatMessage({\n        id: `PayoutDetailsForm.personalIdNumberValid`,\n      })\n    );\n    personalIdNumberValid = validators.composeValidators(personalIdNumberRequired, validHKID);\n  }\n\n  const phoneLabel = intl.formatMessage({ id: 'PayoutDetailsForm.personalPhoneLabel' });\n  const phonePlaceholder = intl.formatMessage({ id: 'PayoutDetailsForm.personalPhonePlaceholder' });\n  const phoneNumberForUSRequired = validators.required(\n    intl.formatMessage({ id: 'PayoutDetailsForm.personalPhoneRequired' })\n  );\n\n  const emailLabel = intl.formatMessage({ id: 'PayoutDetailsForm.personalEmailLabel' });\n  const emailPlaceholder = intl.formatMessage({ id: 'PayoutDetailsForm.personalEmailPlaceholder' });\n  const emailRequired = validators.required(\n    intl.formatMessage({ id: 'PayoutDetailsForm.personalEmailRequired' })\n  );\n\n  const parseOwnershipPercentage = value => {\n    if (!value) {\n      return value;\n    }\n\n    const pattern = /^\\d{0,3}(?:\\.\\d{1,2})?$/;\n    const hasCorrectFormat = value.match(pattern);\n    const floatValue = Number.parseFloat(value);\n    const isInRange = 0 <= floatValue && floatValue <= 100;\n\n    return hasCorrectFormat && isInRange\n      ? value\n      : hasCorrectFormat && floatValue < 0\n      ? 0\n      : hasCorrectFormat && floatValue > 100\n      ? 100\n      : value.substring(0, value.length - 1);\n  };\n\n  // Note: fname and lname are input names for browser autofill functionality.\n  return (\n    <div className={css.sectionContainer}>\n      <h3 className={css.subTitle}>{personalDetailsTitle}</h3>\n      <div className={css.formRow}>\n        <FieldTextInput\n          id={`${fieldId}.firstName`}\n          name={`${fieldId}.fname`}\n          disabled={disabled}\n          className={css.firstName}\n          type=\"text\"\n          autoComplete=\"given-name\"\n          label={firstNameLabel}\n          placeholder={firstNamePlaceholder}\n          validate={firstNameRequired}\n        />\n        <FieldTextInput\n          id={`${fieldId}.lastName`}\n          name={`${fieldId}.lname`}\n          disabled={disabled}\n          className={css.lastName}\n          type=\"text\"\n          autoComplete=\"family-name\"\n          label={lastNameLabel}\n          placeholder={lastNamePlaceholder}\n          validate={lastNameRequired}\n        />\n      </div>\n\n      {showOwnerField ? (\n        <fieldset className={css.roleField}>\n          <legend>\n            <FormattedMessage id=\"PayoutDetailsForm.role\" />\n          </legend>\n          <FieldCheckbox\n            id={`${fieldId}.owner`}\n            className={css.textInputRow}\n            name={`${fieldId}.role`}\n            label={intl.formatMessage({ id: 'PayoutDetailsForm.owner' })}\n            value=\"owner\"\n          />\n        </fieldset>\n      ) : null}\n\n      {showOwnershipPercentageField ? (\n        <FieldTextInput\n          id={`${fieldId}.ownershipPercentage`}\n          name={`${fieldId}.ownershipPercentage`}\n          className={css.ownershipPercentage}\n          disabled={disabled}\n          label={intl.formatMessage({ id: 'PayoutDetailsForm.ownershipPercentageLabel' })}\n          placeholder={intl.formatMessage({\n            id: 'PayoutDetailsForm.ownershipPercentagePlaceholder',\n          })}\n          type=\"number\"\n          min={0}\n          max={100}\n          step=\"0.01\"\n          parse={parseOwnershipPercentage}\n        />\n      ) : null}\n\n      {showOrganizationTitleField ? (\n        <FieldTextInput\n          id={`${fieldId}.title`}\n          name={`${fieldId}.title`}\n          className={css.textInputRow}\n          autoComplete=\"organization-title\"\n          disabled={disabled}\n          label={organizationTitleLabel}\n          placeholder={organizationTitlePlaceholder}\n          type=\"text\"\n        />\n      ) : null}\n\n      <div className={css.formRow}>\n        <FieldBirthdayInput\n          id={`${fieldId}.birthDate`}\n          name={`${fieldId}.birthDate`}\n          disabled={disabled}\n          className={css.field}\n          label={birthdayLabel}\n          labelForMonth={birthdayLabelMonth}\n          labelForYear={birthdayLabelYear}\n          format={null}\n          valueFromForm={values.birthDate}\n          validate={validators.composeValidators(birthdayRequired, birthdayMinAge)}\n        />\n      </div>\n\n      {showPersonalIdNumberField ? (\n        <FieldTextInput\n          id={`${fieldId}.personalIdNumber`}\n          name={`${fieldId}.personalIdNumber`}\n          disabled={disabled}\n          className={css.textInputRow}\n          type=\"text\"\n          label={personalIdNumberLabel}\n          placeholder={personalIdNumberPlaceholder}\n          validate={personalIdNumberValid}\n        />\n      ) : null}\n\n      {showPhoneNumberField ? (\n        <FieldTextInput\n          id={`${fieldId}.phone`}\n          name={`${fieldId}.phone`}\n          className={css.textInputRow}\n          autoComplete=\"tel-national\"\n          disabled={disabled}\n          format={normalizePhoneNumberUS.format}\n          label={phoneLabel}\n          parse={normalizePhoneNumberUS.parse}\n          placeholder={phonePlaceholder}\n          type=\"text\"\n          validate={phoneNumberForUSRequired}\n        />\n      ) : null}\n      {showEmailField ? (\n        <FieldTextInput\n          id={`${fieldId}.email`}\n          name={`${fieldId}.email`}\n          className={css.textInputRow}\n          autoComplete=\"email\"\n          disabled={disabled}\n          label={emailLabel}\n          placeholder={emailPlaceholder}\n          type=\"text\"\n          validate={emailRequired}\n        />\n      ) : null}\n    </div>\n  );\n};\nPayoutDetailsPersonalDetails.defaultProps = {\n  country: null,\n  disabled: false,\n  fieldId: null,\n  sectionTitle: null,\n  showEmailField: false,\n  showOrganizationTitleField: false,\n  showOwnerField: false,\n  showOwnershipPercentageField: false,\n  showPersonalIdNumberField: false,\n  showPhoneNumberField: false,\n  values: null,\n};\n\nPayoutDetailsPersonalDetails.propTypes = {\n  accountType: oneOf(['company', 'individual']).isRequired,\n  country: string,\n  disabled: bool,\n  fieldId: string,\n  intl: intlShape.isRequired,\n  sectionTitle: node,\n  showEmailField: bool,\n  showOrganizationTitleField: bool,\n  showOwnerField: bool,\n  showOwnershipPercentageField: bool,\n  showPersonalIdNumberField: bool,\n  showPhoneNumberField: bool,\n  values: object,\n};\n\nexport default PayoutDetailsPersonalDetails;\n"]},"metadata":{},"sourceType":"module"}