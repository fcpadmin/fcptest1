{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/TransactionPanel/DetailCardImage.js\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { AvatarMedium, ResponsiveImage } from '../../components';\nimport css from './TransactionPanel.css'; // Functional component as a helper to build AddressLinkMaybe\n\nconst DetailCardImage = props => {\n  const className = props.className,\n        rootClassName = props.rootClassName,\n        avatarWrapperClassName = props.avatarWrapperClassName,\n        listingTitle = props.listingTitle,\n        image = props.image,\n        provider = props.provider,\n        isCustomer = props.isCustomer;\n  const classes = classNames(rootClassName || css.detailCardImageWrapper, className);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css.aspectWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(ResponsiveImage, {\n    rootClassName: css.rootForImage,\n    alt: listingTitle,\n    image: image,\n    variants: ['landscape-crop', 'landscape-crop2x'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }))), isCustomer ? React.createElement(\"div\", {\n    className: avatarWrapperClassName || css.avatarWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(AvatarMedium, {\n    user: provider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })) : null);\n};\n\nexport default DetailCardImage;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/TransactionPanel/DetailCardImage.js"],"names":["React","classNames","AvatarMedium","ResponsiveImage","css","DetailCardImage","props","className","rootClassName","avatarWrapperClassName","listingTitle","image","provider","isCustomer","classes","detailCardImageWrapper","aspectWrapper","rootForImage","avatarWrapper"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,kBAA9C;AAEA,OAAOC,GAAP,MAAgB,wBAAhB,C,CAEA;;AACA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAAA,QAE7BC,SAF6B,GAS3BD,KAT2B,CAE7BC,SAF6B;AAAA,QAG7BC,aAH6B,GAS3BF,KAT2B,CAG7BE,aAH6B;AAAA,QAI7BC,sBAJ6B,GAS3BH,KAT2B,CAI7BG,sBAJ6B;AAAA,QAK7BC,YAL6B,GAS3BJ,KAT2B,CAK7BI,YAL6B;AAAA,QAM7BC,KAN6B,GAS3BL,KAT2B,CAM7BK,KAN6B;AAAA,QAO7BC,QAP6B,GAS3BN,KAT2B,CAO7BM,QAP6B;AAAA,QAQ7BC,UAR6B,GAS3BP,KAT2B,CAQ7BO,UAR6B;AAU/B,QAAMC,OAAO,GAAGb,UAAU,CAACO,aAAa,IAAIJ,GAAG,CAACW,sBAAtB,EAA8CR,SAA9C,CAA1B;AACA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEO,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEV,GAAG,CAACY,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AACE,IAAA,aAAa,EAAEZ,GAAG,CAACa,YADrB;AAEE,IAAA,GAAG,EAAEP,YAFP;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,QAAQ,EAAE,CAAC,gBAAD,EAAmB,kBAAnB,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAWGE,UAAU,GACT;AAAK,IAAA,SAAS,EAAEJ,sBAAsB,IAAIL,GAAG,CAACc,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEN,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADS,GAIP,IAfN,CADF;AAmBD,CA9BD;;AAgCA,eAAeP,eAAf","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { AvatarMedium, ResponsiveImage } from '../../components';\n\nimport css from './TransactionPanel.css';\n\n// Functional component as a helper to build AddressLinkMaybe\nconst DetailCardImage = props => {\n  const {\n    className,\n    rootClassName,\n    avatarWrapperClassName,\n    listingTitle,\n    image,\n    provider,\n    isCustomer,\n  } = props;\n  const classes = classNames(rootClassName || css.detailCardImageWrapper, className);\n  return (\n    <React.Fragment>\n      <div className={classes}>\n        <div className={css.aspectWrapper}>\n          <ResponsiveImage\n            rootClassName={css.rootForImage}\n            alt={listingTitle}\n            image={image}\n            variants={['landscape-crop', 'landscape-crop2x']}\n          />\n        </div>\n      </div>\n      {isCustomer ? (\n        <div className={avatarWrapperClassName || css.avatarWrapper}>\n          <AvatarMedium user={provider} />\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n};\n\nexport default DetailCardImage;\n"]},"metadata":{},"sourceType":"module"}