{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/ActivityFeed/ActivityFeed.example.js\";\nimport React, { Component } from 'react';\nimport { createUser, createCurrentUser, createMessage, createTransaction, createListing, createTxTransition, createReview } from '../../util/test-data';\nimport { TRANSITION_ACCEPT, TRANSITION_COMPLETE, TRANSITION_DECLINE, TRANSITION_EXPIRE_REVIEW_PERIOD, TRANSITION_REQUEST, TRANSITION_REVIEW_1_BY_CUSTOMER, TRANSITION_REVIEW_1_BY_PROVIDER, TRANSITION_REVIEW_2_BY_CUSTOMER, TRANSITION_REVIEW_2_BY_PROVIDER, TX_TRANSITION_ACTOR_CUSTOMER, TX_TRANSITION_ACTOR_PROVIDER } from '../../util/transaction';\nimport ActivityFeed from './ActivityFeed';\n\nconst noop = () => null;\n\nexport const Empty = {\n  component: ActivityFeed,\n  props: {\n    messages: [],\n    hasOlderMessages: false,\n    onOpenReviewModal: noop,\n    onShowOlderMessages: noop,\n    fetchMessagesInProgress: false\n  },\n  group: 'messages'\n};\nexport const WithoutCurrentUser = {\n  component: ActivityFeed,\n  props: {\n    messages: [createMessage('msg1', {}, {\n      sender: createUser('user1')\n    }), createMessage('msg2', {}, {\n      sender: createUser('user2')\n    })],\n    hasOlderMessages: false,\n    onOpenReviewModal: noop,\n    onShowOlderMessages: noop,\n    fetchMessagesInProgress: false\n  },\n  group: 'messages'\n};\nexport const WithCurrentUser = {\n  component: ActivityFeed,\n  props: {\n    currentUser: createCurrentUser('user2'),\n    messages: [createMessage('msg1', {}, {\n      sender: createUser('user1')\n    }), createMessage('msg2', {}, {\n      sender: createUser('user2')\n    }), createMessage('msg3', {\n      content: 'ok'\n    }, {\n      sender: createUser('user2')\n    }), createMessage('msg4', {\n      content: 'ok'\n    }, {\n      sender: createUser('user1')\n    }), createMessage('msg5', {}, {\n      sender: createUser('user1')\n    })],\n    hasOlderMessages: false,\n    onOpenReviewModal: noop,\n    onShowOlderMessages: noop,\n    fetchMessagesInProgress: false\n  },\n  group: 'messages'\n};\nexport const WithTransitions = {\n  component: ActivityFeed,\n  props: {\n    currentUser: createCurrentUser('user2'),\n    transaction: createTransaction({\n      customer: createUser('user1'),\n      provider: createUser('user2'),\n      listing: createListing('Listing'),\n      transitions: [createTxTransition({\n        createdAt: new Date(Date.UTC(2017, 10, 9, 8, 10)),\n        by: TX_TRANSITION_ACTOR_CUSTOMER,\n        transition: TRANSITION_REQUEST\n      }), createTxTransition({\n        createdAt: new Date(Date.UTC(2017, 10, 9, 8, 12)),\n        by: TX_TRANSITION_ACTOR_PROVIDER,\n        transition: TRANSITION_ACCEPT\n      }), // this should not be visible in the feed\n      createTxTransition({\n        createdAt: new Date(Date.UTC(2017, 10, 16, 8, 12)),\n        by: TX_TRANSITION_ACTOR_PROVIDER,\n        transition: TRANSITION_EXPIRE_REVIEW_PERIOD\n      })]\n    }),\n    messages: [],\n    hasOlderMessages: false,\n    onOpenReviewModal: noop,\n    onShowOlderMessages: noop,\n    fetchMessagesInProgress: false\n  },\n  group: 'messages'\n};\nexport const WithMessagesTransitionsAndReviews = {\n  component: ActivityFeed,\n  props: {\n    currentUser: createCurrentUser('user2'),\n    transaction: createTransaction({\n      customer: createUser('user1'),\n      provider: createUser('user2'),\n      listing: createListing('Listing'),\n      lastTransition: TRANSITION_REVIEW_2_BY_CUSTOMER,\n      transitions: [createTxTransition({\n        createdAt: new Date(Date.UTC(2017, 10, 9, 8, 10)),\n        by: TX_TRANSITION_ACTOR_CUSTOMER,\n        transition: TRANSITION_REQUEST\n      }), createTxTransition({\n        createdAt: new Date(Date.UTC(2017, 10, 9, 8, 12)),\n        by: TX_TRANSITION_ACTOR_PROVIDER,\n        transition: TRANSITION_ACCEPT\n      }), createTxTransition({\n        createdAt: new Date(Date.UTC(2017, 10, 9, 10, 33)),\n        by: TX_TRANSITION_ACTOR_PROVIDER,\n        transition: TRANSITION_DECLINE\n      }), createTxTransition({\n        createdAt: new Date(Date.UTC(2017, 10, 9, 10, 34)),\n        by: TX_TRANSITION_ACTOR_PROVIDER,\n        transition: TRANSITION_COMPLETE\n      }), createTxTransition({\n        createdAt: new Date(Date.UTC(2017, 10, 9, 11, 34)),\n        by: TX_TRANSITION_ACTOR_PROVIDER,\n        transition: TRANSITION_REVIEW_1_BY_PROVIDER\n      }), createTxTransition({\n        createdAt: new Date(Date.UTC(2017, 10, 9, 12, 34)),\n        by: TX_TRANSITION_ACTOR_CUSTOMER,\n        transition: TRANSITION_REVIEW_2_BY_CUSTOMER\n      })],\n      reviews: [createReview('review1', {\n        createdAt: new Date(Date.UTC(2017, 10, 9, 11, 34)),\n        rating: 3,\n        type: 'ofCustomer'\n      }, {\n        author: createUser('user2'),\n        subject: createUser('user1')\n      }), createReview('review2', {\n        createdAt: new Date(Date.UTC(2017, 10, 9, 12, 34)),\n        rating: 5,\n        type: 'ofProvider'\n      }, {\n        author: createUser('user1'),\n        subject: createUser('user2')\n      })]\n    }),\n    messages: [createMessage('msg1', {\n      createdAt: new Date(Date.UTC(2017, 10, 9, 8, 11))\n    }, {\n      sender: createUser('user1')\n    }), createMessage('msg2', {\n      createdAt: new Date(Date.UTC(2017, 10, 9, 8, 14))\n    }, {\n      sender: createUser('user1')\n    }), createMessage('msg3', {\n      createdAt: new Date(Date.UTC(2017, 10, 9, 8, 17))\n    }, {\n      sender: createUser('user2')\n    }), createMessage('msg4', {\n      createdAt: new Date(Date.UTC(2017, 10, 12, 13, 20))\n    }, {\n      sender: createUser('user2')\n    })],\n    hasOlderMessages: false,\n    onOpenReviewModal: noop,\n    onShowOlderMessages: noop,\n    fetchMessagesInProgress: false\n  },\n  group: 'messages'\n};\nexport const WithAReviewFromBothUsers = {\n  component: ActivityFeed,\n  props: {\n    currentUser: createCurrentUser('user1'),\n    transaction: createTransaction({\n      customer: createUser('user1'),\n      provider: createUser('user2'),\n      listing: createListing('Listing'),\n      reviews: [createReview('review1', {\n        createdAt: new Date(Date.UTC(2017, 10, 9, 8, 10)),\n        rating: 3,\n        type: 'ofProvider'\n      }, {\n        author: createUser('user1'),\n        subject: createUser('user2')\n      }), createReview('review2', {\n        createdAt: new Date(Date.UTC(2017, 10, 10, 8, 10)),\n        rating: 5,\n        type: 'ofCustomer'\n      }, {\n        author: createUser('user2'),\n        subject: createUser('user1')\n      })],\n      lastTransition: TRANSITION_REVIEW_2_BY_PROVIDER,\n      transitions: [createTxTransition({\n        createdAt: new Date(Date.UTC(2017, 10, 9, 8, 10)),\n        by: TX_TRANSITION_ACTOR_CUSTOMER,\n        transition: TRANSITION_REVIEW_1_BY_CUSTOMER\n      }), createTxTransition({\n        createdAt: new Date(Date.UTC(2017, 10, 10, 8, 10)),\n        by: TX_TRANSITION_ACTOR_PROVIDER,\n        transition: TRANSITION_REVIEW_2_BY_PROVIDER\n      })]\n    }),\n    messages: [],\n    hasOlderMessages: false,\n    onOpenReviewModal: noop,\n    onShowOlderMessages: noop,\n    fetchMessagesInProgress: false\n  },\n  group: 'messages'\n};\n\nclass PagedFeed extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAllMessages: false\n    };\n  }\n\n  render() {\n    const dates = [new Date(Date.UTC(2017, 10, 20, 12)), new Date(Date.UTC(2017, 10, 21, 12)), new Date(Date.UTC(2017, 10, 22, 12)), new Date(Date.UTC(2017, 10, 23, 12)), new Date(Date.UTC(2017, 10, 24, 12)), new Date(Date.UTC(2017, 10, 25, 12)), new Date(Date.UTC(2017, 10, 26, 12))];\n    const currentUser = createCurrentUser('customer');\n    const customer = createUser('customer');\n    const provider = createUser('provider');\n    const trans1 = createTxTransition({\n      createdAt: dates[0],\n      by: TX_TRANSITION_ACTOR_CUSTOMER,\n      transition: TRANSITION_REQUEST\n    });\n    const trans2 = createTxTransition({\n      createdAt: dates[2],\n      by: TX_TRANSITION_ACTOR_PROVIDER,\n      transition: TRANSITION_ACCEPT\n    }); // Last transition timestamp is interleaved between the last two\n    // messages.\n\n    const trans3 = createTxTransition({\n      createdAt: dates[5],\n      by: TX_TRANSITION_ACTOR_CUSTOMER,\n      transition: TRANSITION_COMPLETE\n    }); // First message timestamp is interleaved between the first two\n    // transitions.\n\n    const msg1 = createMessage('msg1', {\n      createdAt: dates[1]\n    }, {\n      sender: customer\n    });\n    const msg2 = createMessage('msg2', {\n      createdAt: dates[3]\n    }, {\n      sender: provider\n    });\n    const msg3 = createMessage('msg3', {\n      createdAt: dates[4]\n    }, {\n      sender: customer\n    });\n    const msg4 = createMessage('msg4', {\n      createdAt: dates[6]\n    }, {\n      sender: customer\n    });\n    const transaction = createTransaction({\n      id: 'tx1',\n      lastTransition: TRANSITION_COMPLETE,\n      lastTransitionedAt: dates[5],\n      transitions: [trans1, trans2, trans3],\n      listing: createListing('listing'),\n      customer,\n      provider\n    });\n    const messages = this.state.showAllMessages ? [msg1, msg2, msg3, msg4] : [msg2, msg3, msg4];\n\n    const handleShowOlder = () => {\n      console.log('show older messages');\n      this.setState({\n        showAllMessages: true\n      });\n    };\n\n    const feedProps = {\n      currentUser,\n      transaction,\n      messages,\n      hasOlderMessages: !this.state.showAllMessages,\n      onOpenReviewModal: noop,\n      onShowOlderMessages: handleShowOlder,\n      fetchMessagesInProgress: false\n    };\n    return React.createElement(ActivityFeed, Object.assign({}, feedProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport const WithMessagePaging = {\n  component: PagedFeed,\n  props: {},\n  group: 'messages'\n};","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/ActivityFeed/ActivityFeed.example.js"],"names":["React","Component","createUser","createCurrentUser","createMessage","createTransaction","createListing","createTxTransition","createReview","TRANSITION_ACCEPT","TRANSITION_COMPLETE","TRANSITION_DECLINE","TRANSITION_EXPIRE_REVIEW_PERIOD","TRANSITION_REQUEST","TRANSITION_REVIEW_1_BY_CUSTOMER","TRANSITION_REVIEW_1_BY_PROVIDER","TRANSITION_REVIEW_2_BY_CUSTOMER","TRANSITION_REVIEW_2_BY_PROVIDER","TX_TRANSITION_ACTOR_CUSTOMER","TX_TRANSITION_ACTOR_PROVIDER","ActivityFeed","noop","Empty","component","props","messages","hasOlderMessages","onOpenReviewModal","onShowOlderMessages","fetchMessagesInProgress","group","WithoutCurrentUser","sender","WithCurrentUser","currentUser","content","WithTransitions","transaction","customer","provider","listing","transitions","createdAt","Date","UTC","by","transition","WithMessagesTransitionsAndReviews","lastTransition","reviews","rating","type","author","subject","WithAReviewFromBothUsers","PagedFeed","constructor","state","showAllMessages","render","dates","trans1","trans2","trans3","msg1","msg2","msg3","msg4","id","lastTransitionedAt","handleShowOlder","console","log","setState","feedProps","WithMessagePaging"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  createUser,\n  createCurrentUser,\n  createMessage,\n  createTransaction,\n  createListing,\n  createTxTransition,\n  createReview,\n} from '../../util/test-data';\nimport {\n  TRANSITION_ACCEPT,\n  TRANSITION_COMPLETE,\n  TRANSITION_DECLINE,\n  TRANSITION_EXPIRE_REVIEW_PERIOD,\n  TRANSITION_REQUEST,\n  TRANSITION_REVIEW_1_BY_CUSTOMER,\n  TRANSITION_REVIEW_1_BY_PROVIDER,\n  TRANSITION_REVIEW_2_BY_CUSTOMER,\n  TRANSITION_REVIEW_2_BY_PROVIDER,\n  TX_TRANSITION_ACTOR_CUSTOMER,\n  TX_TRANSITION_ACTOR_PROVIDER,\n} from '../../util/transaction';\nimport ActivityFeed from './ActivityFeed';\n\nconst noop = () => null;\n\nexport const Empty = {\n  component: ActivityFeed,\n  props: {\n    messages: [],\n    hasOlderMessages: false,\n    onOpenReviewModal: noop,\n    onShowOlderMessages: noop,\n    fetchMessagesInProgress: false,\n  },\n  group: 'messages',\n};\n\nexport const WithoutCurrentUser = {\n  component: ActivityFeed,\n  props: {\n    messages: [\n      createMessage('msg1', {}, { sender: createUser('user1') }),\n      createMessage('msg2', {}, { sender: createUser('user2') }),\n    ],\n    hasOlderMessages: false,\n    onOpenReviewModal: noop,\n    onShowOlderMessages: noop,\n    fetchMessagesInProgress: false,\n  },\n  group: 'messages',\n};\n\nexport const WithCurrentUser = {\n  component: ActivityFeed,\n  props: {\n    currentUser: createCurrentUser('user2'),\n    messages: [\n      createMessage('msg1', {}, { sender: createUser('user1') }),\n      createMessage('msg2', {}, { sender: createUser('user2') }),\n      createMessage('msg3', { content: 'ok' }, { sender: createUser('user2') }),\n      createMessage('msg4', { content: 'ok' }, { sender: createUser('user1') }),\n      createMessage('msg5', {}, { sender: createUser('user1') }),\n    ],\n    hasOlderMessages: false,\n    onOpenReviewModal: noop,\n    onShowOlderMessages: noop,\n    fetchMessagesInProgress: false,\n  },\n  group: 'messages',\n};\n\nexport const WithTransitions = {\n  component: ActivityFeed,\n  props: {\n    currentUser: createCurrentUser('user2'),\n    transaction: createTransaction({\n      customer: createUser('user1'),\n      provider: createUser('user2'),\n      listing: createListing('Listing'),\n      transitions: [\n        createTxTransition({\n          createdAt: new Date(Date.UTC(2017, 10, 9, 8, 10)),\n          by: TX_TRANSITION_ACTOR_CUSTOMER,\n          transition: TRANSITION_REQUEST,\n        }),\n        createTxTransition({\n          createdAt: new Date(Date.UTC(2017, 10, 9, 8, 12)),\n          by: TX_TRANSITION_ACTOR_PROVIDER,\n          transition: TRANSITION_ACCEPT,\n        }),\n        // this should not be visible in the feed\n        createTxTransition({\n          createdAt: new Date(Date.UTC(2017, 10, 16, 8, 12)),\n          by: TX_TRANSITION_ACTOR_PROVIDER,\n          transition: TRANSITION_EXPIRE_REVIEW_PERIOD,\n        }),\n      ],\n    }),\n    messages: [],\n    hasOlderMessages: false,\n    onOpenReviewModal: noop,\n    onShowOlderMessages: noop,\n    fetchMessagesInProgress: false,\n  },\n  group: 'messages',\n};\n\nexport const WithMessagesTransitionsAndReviews = {\n  component: ActivityFeed,\n  props: {\n    currentUser: createCurrentUser('user2'),\n    transaction: createTransaction({\n      customer: createUser('user1'),\n      provider: createUser('user2'),\n      listing: createListing('Listing'),\n      lastTransition: TRANSITION_REVIEW_2_BY_CUSTOMER,\n      transitions: [\n        createTxTransition({\n          createdAt: new Date(Date.UTC(2017, 10, 9, 8, 10)),\n          by: TX_TRANSITION_ACTOR_CUSTOMER,\n          transition: TRANSITION_REQUEST,\n        }),\n        createTxTransition({\n          createdAt: new Date(Date.UTC(2017, 10, 9, 8, 12)),\n          by: TX_TRANSITION_ACTOR_PROVIDER,\n          transition: TRANSITION_ACCEPT,\n        }),\n        createTxTransition({\n          createdAt: new Date(Date.UTC(2017, 10, 9, 10, 33)),\n          by: TX_TRANSITION_ACTOR_PROVIDER,\n          transition: TRANSITION_DECLINE,\n        }),\n        createTxTransition({\n          createdAt: new Date(Date.UTC(2017, 10, 9, 10, 34)),\n          by: TX_TRANSITION_ACTOR_PROVIDER,\n          transition: TRANSITION_COMPLETE,\n        }),\n        createTxTransition({\n          createdAt: new Date(Date.UTC(2017, 10, 9, 11, 34)),\n          by: TX_TRANSITION_ACTOR_PROVIDER,\n          transition: TRANSITION_REVIEW_1_BY_PROVIDER,\n        }),\n        createTxTransition({\n          createdAt: new Date(Date.UTC(2017, 10, 9, 12, 34)),\n          by: TX_TRANSITION_ACTOR_CUSTOMER,\n          transition: TRANSITION_REVIEW_2_BY_CUSTOMER,\n        }),\n      ],\n      reviews: [\n        createReview(\n          'review1',\n          { createdAt: new Date(Date.UTC(2017, 10, 9, 11, 34)), rating: 3, type: 'ofCustomer' },\n          { author: createUser('user2'), subject: createUser('user1') }\n        ),\n        createReview(\n          'review2',\n          { createdAt: new Date(Date.UTC(2017, 10, 9, 12, 34)), rating: 5, type: 'ofProvider' },\n          { author: createUser('user1'), subject: createUser('user2') }\n        ),\n      ],\n    }),\n    messages: [\n      createMessage(\n        'msg1',\n        { createdAt: new Date(Date.UTC(2017, 10, 9, 8, 11)) },\n        { sender: createUser('user1') }\n      ),\n      createMessage(\n        'msg2',\n        { createdAt: new Date(Date.UTC(2017, 10, 9, 8, 14)) },\n        { sender: createUser('user1') }\n      ),\n      createMessage(\n        'msg3',\n        { createdAt: new Date(Date.UTC(2017, 10, 9, 8, 17)) },\n        { sender: createUser('user2') }\n      ),\n      createMessage(\n        'msg4',\n        { createdAt: new Date(Date.UTC(2017, 10, 12, 13, 20)) },\n        { sender: createUser('user2') }\n      ),\n    ],\n    hasOlderMessages: false,\n    onOpenReviewModal: noop,\n    onShowOlderMessages: noop,\n    fetchMessagesInProgress: false,\n  },\n  group: 'messages',\n};\n\nexport const WithAReviewFromBothUsers = {\n  component: ActivityFeed,\n  props: {\n    currentUser: createCurrentUser('user1'),\n    transaction: createTransaction({\n      customer: createUser('user1'),\n      provider: createUser('user2'),\n      listing: createListing('Listing'),\n      reviews: [\n        createReview(\n          'review1',\n          { createdAt: new Date(Date.UTC(2017, 10, 9, 8, 10)), rating: 3, type: 'ofProvider' },\n          { author: createUser('user1'), subject: createUser('user2') }\n        ),\n        createReview(\n          'review2',\n          { createdAt: new Date(Date.UTC(2017, 10, 10, 8, 10)), rating: 5, type: 'ofCustomer' },\n          { author: createUser('user2'), subject: createUser('user1') }\n        ),\n      ],\n      lastTransition: TRANSITION_REVIEW_2_BY_PROVIDER,\n      transitions: [\n        createTxTransition({\n          createdAt: new Date(Date.UTC(2017, 10, 9, 8, 10)),\n          by: TX_TRANSITION_ACTOR_CUSTOMER,\n          transition: TRANSITION_REVIEW_1_BY_CUSTOMER,\n        }),\n        createTxTransition({\n          createdAt: new Date(Date.UTC(2017, 10, 10, 8, 10)),\n          by: TX_TRANSITION_ACTOR_PROVIDER,\n          transition: TRANSITION_REVIEW_2_BY_PROVIDER,\n        }),\n      ],\n    }),\n    messages: [],\n    hasOlderMessages: false,\n    onOpenReviewModal: noop,\n    onShowOlderMessages: noop,\n    fetchMessagesInProgress: false,\n  },\n  group: 'messages',\n};\n\nclass PagedFeed extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { showAllMessages: false };\n  }\n  render() {\n    const dates = [\n      new Date(Date.UTC(2017, 10, 20, 12)),\n      new Date(Date.UTC(2017, 10, 21, 12)),\n      new Date(Date.UTC(2017, 10, 22, 12)),\n      new Date(Date.UTC(2017, 10, 23, 12)),\n      new Date(Date.UTC(2017, 10, 24, 12)),\n      new Date(Date.UTC(2017, 10, 25, 12)),\n      new Date(Date.UTC(2017, 10, 26, 12)),\n    ];\n\n    const currentUser = createCurrentUser('customer');\n    const customer = createUser('customer');\n    const provider = createUser('provider');\n\n    const trans1 = createTxTransition({\n      createdAt: dates[0],\n      by: TX_TRANSITION_ACTOR_CUSTOMER,\n      transition: TRANSITION_REQUEST,\n    });\n    const trans2 = createTxTransition({\n      createdAt: dates[2],\n      by: TX_TRANSITION_ACTOR_PROVIDER,\n      transition: TRANSITION_ACCEPT,\n    });\n\n    // Last transition timestamp is interleaved between the last two\n    // messages.\n    const trans3 = createTxTransition({\n      createdAt: dates[5],\n      by: TX_TRANSITION_ACTOR_CUSTOMER,\n      transition: TRANSITION_COMPLETE,\n    });\n\n    // First message timestamp is interleaved between the first two\n    // transitions.\n    const msg1 = createMessage('msg1', { createdAt: dates[1] }, { sender: customer });\n\n    const msg2 = createMessage('msg2', { createdAt: dates[3] }, { sender: provider });\n    const msg3 = createMessage('msg3', { createdAt: dates[4] }, { sender: customer });\n    const msg4 = createMessage('msg4', { createdAt: dates[6] }, { sender: customer });\n\n    const transaction = createTransaction({\n      id: 'tx1',\n      lastTransition: TRANSITION_COMPLETE,\n      lastTransitionedAt: dates[5],\n      transitions: [trans1, trans2, trans3],\n      listing: createListing('listing'),\n      customer,\n      provider,\n    });\n    const messages = this.state.showAllMessages ? [msg1, msg2, msg3, msg4] : [msg2, msg3, msg4];\n\n    const handleShowOlder = () => {\n      console.log('show older messages');\n      this.setState({ showAllMessages: true });\n    };\n\n    const feedProps = {\n      currentUser,\n      transaction,\n      messages,\n      hasOlderMessages: !this.state.showAllMessages,\n      onOpenReviewModal: noop,\n      onShowOlderMessages: handleShowOlder,\n      fetchMessagesInProgress: false,\n    };\n    return <ActivityFeed {...feedProps} />;\n  }\n}\n\nexport const WithMessagePaging = {\n  component: PagedFeed,\n  props: {},\n  group: 'messages',\n};\n"]},"metadata":{},"sourceType":"module"}