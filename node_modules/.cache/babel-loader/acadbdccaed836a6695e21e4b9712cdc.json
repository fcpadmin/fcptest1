{"ast":null,"code":"import _objectSpread from \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/NamedLink/NamedLink.js\";\n\n/**\n * This component wraps React-Router's Link by providing name-based routing.\n *\n * The `name` prop should match a route in the flattened\n * routeConfiguration passed in context by the RoutesProvider\n * component. The `params` props is the route params for the route\n * path of the given route name.\n *\n * The `to` prop is an object with the same shape as Link requires,\n * but without `pathname` that will be generated from the given route\n * name.\n *\n * Some additional props can be passed for the <a> element like\n * `className` and `style`.\n *\n * The component can also be given the `activeClassName` prop that\n * will be added to the element className if the current URL matches\n * the one in the generated pathname of the link.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport routeConfiguration from '../../routeConfiguration';\nimport { pathByRouteName } from '../../util/routes';\nexport const NamedLinkComponent = props => {\n  const name = props.name,\n        params = props.params,\n        title = props.title; // Link props\n\n  const to = props.to,\n        children = props.children;\n  const pathname = pathByRouteName(name, routeConfiguration(), params);\n  const match = props.match;\n  const active = match.url && match.url === pathname; // <a> element props\n\n  const className = props.className,\n        style = props.style,\n        activeClassName = props.activeClassName;\n  const aElemProps = {\n    className: classNames(className, {\n      [activeClassName]: active\n    }),\n    style,\n    title\n  };\n  return React.createElement(Link, Object.assign({\n    to: _objectSpread({\n      pathname\n    }, to)\n  }, aElemProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), children);\n};\nconst object = PropTypes.object,\n      string = PropTypes.string,\n      shape = PropTypes.shape,\n      any = PropTypes.any;\nNamedLinkComponent.defaultProps = {\n  params: {},\n  to: {},\n  children: null,\n  className: '',\n  style: {},\n  activeClassName: 'NamedLink_active',\n  title: null,\n  match: {}\n}; // This ensures a nice display name in snapshots etc.\n\nNamedLinkComponent.displayName = 'NamedLink';\nNamedLinkComponent.propTypes = {\n  // name of the route in routeConfiguration\n  name: string.isRequired,\n  // params object for the named route\n  params: object,\n  // Link component props\n  to: shape({\n    search: string,\n    hash: string,\n    state: object\n  }),\n  children: any,\n  // generic props for the underlying <a> element\n  className: string,\n  style: object,\n  activeClassName: string,\n  title: string,\n  // from withRouter\n  match: object\n};\nconst NamedLink = withRouter(NamedLinkComponent);\nNamedLink.displayName = 'NamedLink';\nexport default NamedLink;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/NamedLink/NamedLink.js"],"names":["React","PropTypes","Link","withRouter","classNames","routeConfiguration","pathByRouteName","NamedLinkComponent","props","name","params","title","to","children","pathname","match","active","url","className","style","activeClassName","aElemProps","object","string","shape","any","defaultProps","displayName","propTypes","isRequired","search","hash","state","NamedLink"],"mappings":"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","sourcesContent":["/**\n * This component wraps React-Router's Link by providing name-based routing.\n *\n * The `name` prop should match a route in the flattened\n * routeConfiguration passed in context by the RoutesProvider\n * component. The `params` props is the route params for the route\n * path of the given route name.\n *\n * The `to` prop is an object with the same shape as Link requires,\n * but without `pathname` that will be generated from the given route\n * name.\n *\n * Some additional props can be passed for the <a> element like\n * `className` and `style`.\n *\n * The component can also be given the `activeClassName` prop that\n * will be added to the element className if the current URL matches\n * the one in the generated pathname of the link.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport routeConfiguration from '../../routeConfiguration';\nimport { pathByRouteName } from '../../util/routes';\n\nexport const NamedLinkComponent = props => {\n  const { name, params, title } = props;\n\n  // Link props\n  const { to, children } = props;\n  const pathname = pathByRouteName(name, routeConfiguration(), params);\n  const { match } = props;\n  const active = match.url && match.url === pathname;\n\n  // <a> element props\n  const { className, style, activeClassName } = props;\n  const aElemProps = {\n    className: classNames(className, { [activeClassName]: active }),\n    style,\n    title,\n  };\n\n  return (\n    <Link to={{ pathname, ...to }} {...aElemProps}>\n      {children}\n    </Link>\n  );\n};\n\nconst { object, string, shape, any } = PropTypes;\n\nNamedLinkComponent.defaultProps = {\n  params: {},\n  to: {},\n  children: null,\n  className: '',\n  style: {},\n  activeClassName: 'NamedLink_active',\n  title: null,\n  match: {},\n};\n\n// This ensures a nice display name in snapshots etc.\nNamedLinkComponent.displayName = 'NamedLink';\n\nNamedLinkComponent.propTypes = {\n  // name of the route in routeConfiguration\n  name: string.isRequired,\n  // params object for the named route\n  params: object,\n  // Link component props\n  to: shape({ search: string, hash: string, state: object }),\n  children: any,\n\n  // generic props for the underlying <a> element\n  className: string,\n  style: object,\n  activeClassName: string,\n  title: string,\n\n  // from withRouter\n  match: object,\n};\n\nconst NamedLink = withRouter(NamedLinkComponent);\nNamedLink.displayName = 'NamedLink';\n\nexport default NamedLink;\n"]},"metadata":{},"sourceType":"module"}