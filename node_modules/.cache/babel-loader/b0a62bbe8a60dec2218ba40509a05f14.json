{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/BookingBreakdown/LineItemRefundMaybe.js\";\nimport React from 'react';\nimport { FormattedMessage, intlShape } from 'react-intl';\nimport Decimal from 'decimal.js';\nimport { formatMoney } from '../../util/currency';\nimport { types as sdkTypes } from '../../util/sdkLoader';\nimport config from '../../config';\nimport { propTypes, LINE_ITEM_CUSTOMER_COMMISSION, LINE_ITEM_PROVIDER_COMMISSION } from '../../util/types';\nimport css from './BookingBreakdown.css';\nconst Money = sdkTypes.Money;\n/**\n * Calculates the total price in sub units for multiple line items.\n */\n\nconst lineItemsTotal = lineItems => {\n  const amount = lineItems.reduce((total, item) => {\n    return total.plus(item.lineTotal.amount);\n  }, new Decimal(0));\n  return new Money(amount, config.currency);\n};\n/**\n * Checks if line item represents commission\n */\n\n\nconst isCommission = lineItem => {\n  return lineItem.code === LINE_ITEM_PROVIDER_COMMISSION || lineItem.code === LINE_ITEM_CUSTOMER_COMMISSION;\n};\n/**\n * Returns non-commission, reversal line items\n */\n\n\nconst nonCommissionReversalLineItems = transaction => {\n  return transaction.attributes.lineItems.filter(item => !isCommission(item) && item.reversal);\n};\n\nconst LineItemRefundMaybe = props => {\n  const transaction = props.transaction,\n        intl = props.intl; // all non-commission, reversal line items\n\n  const refundLineItems = nonCommissionReversalLineItems(transaction);\n  const refund = lineItemsTotal(refundLineItems);\n  const formattedRefund = refundLineItems.length > 0 ? formatMoney(intl, refund) : null;\n  return formattedRefund ? React.createElement(\"div\", {\n    className: css.lineItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: css.itemLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"BookingBreakdown.refund\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    className: css.itemValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, formattedRefund)) : null;\n};\n\nLineItemRefundMaybe.propTypes = {\n  transaction: propTypes.transaction.isRequired,\n  intl: intlShape.isRequired\n};\nexport default LineItemRefundMaybe;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/BookingBreakdown/LineItemRefundMaybe.js"],"names":["React","FormattedMessage","intlShape","Decimal","formatMoney","types","sdkTypes","config","propTypes","LINE_ITEM_CUSTOMER_COMMISSION","LINE_ITEM_PROVIDER_COMMISSION","css","Money","lineItemsTotal","lineItems","amount","reduce","total","item","plus","lineTotal","currency","isCommission","lineItem","code","nonCommissionReversalLineItems","transaction","attributes","filter","reversal","LineItemRefundMaybe","props","intl","refundLineItems","refund","formattedRefund","length","itemLabel","itemValue","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,SAA3B,QAA4C,YAA5C;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,KAAK,IAAIC,QAAlB,QAAkC,sBAAlC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SACEC,SADF,EAEEC,6BAFF,EAGEC,6BAHF,QAIO,kBAJP;AAMA,OAAOC,GAAP,MAAgB,wBAAhB;MAEQC,K,GAAUN,Q,CAAVM,K;AAER;;;;AAGA,MAAMC,cAAc,GAAGC,SAAS,IAAI;AAClC,QAAMC,MAAM,GAAGD,SAAS,CAACE,MAAV,CAAiB,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC/C,WAAOD,KAAK,CAACE,IAAN,CAAWD,IAAI,CAACE,SAAL,CAAeL,MAA1B,CAAP;AACD,GAFc,EAEZ,IAAIZ,OAAJ,CAAY,CAAZ,CAFY,CAAf;AAGA,SAAO,IAAIS,KAAJ,CAAUG,MAAV,EAAkBR,MAAM,CAACc,QAAzB,CAAP;AACD,CALD;AAOA;;;;;AAGA,MAAMC,YAAY,GAAGC,QAAQ,IAAI;AAC/B,SACEA,QAAQ,CAACC,IAAT,KAAkBd,6BAAlB,IACAa,QAAQ,CAACC,IAAT,KAAkBf,6BAFpB;AAID,CALD;AAOA;;;;;AAGA,MAAMgB,8BAA8B,GAAGC,WAAW,IAAI;AACpD,SAAOA,WAAW,CAACC,UAAZ,CAAuBb,SAAvB,CAAiCc,MAAjC,CAAwCV,IAAI,IAAI,CAACI,YAAY,CAACJ,IAAD,CAAb,IAAuBA,IAAI,CAACW,QAA5E,CAAP;AACD,CAFD;;AAIA,MAAMC,mBAAmB,GAAGC,KAAK,IAAI;AAAA,QAC3BL,WAD2B,GACLK,KADK,CAC3BL,WAD2B;AAAA,QACdM,IADc,GACLD,KADK,CACdC,IADc,EAGnC;;AACA,QAAMC,eAAe,GAAGR,8BAA8B,CAACC,WAAD,CAAtD;AAEA,QAAMQ,MAAM,GAAGrB,cAAc,CAACoB,eAAD,CAA7B;AAEA,QAAME,eAAe,GAAGF,eAAe,CAACG,MAAhB,GAAyB,CAAzB,GAA6BhC,WAAW,CAAC4B,IAAD,EAAOE,MAAP,CAAxC,GAAyD,IAAjF;AAEA,SAAOC,eAAe,GACpB;AAAK,IAAA,SAAS,EAAExB,GAAG,CAACY,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAEZ,GAAG,CAAC0B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,yBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAM,IAAA,SAAS,EAAE1B,GAAG,CAAC2B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCH,eAAjC,CAJF,CADoB,GAOlB,IAPJ;AAQD,CAlBD;;AAoBAL,mBAAmB,CAACtB,SAApB,GAAgC;AAC9BkB,EAAAA,WAAW,EAAElB,SAAS,CAACkB,WAAV,CAAsBa,UADL;AAE9BP,EAAAA,IAAI,EAAE9B,SAAS,CAACqC;AAFc,CAAhC;AAKA,eAAeT,mBAAf","sourcesContent":["import React from 'react';\nimport { FormattedMessage, intlShape } from 'react-intl';\nimport Decimal from 'decimal.js';\nimport { formatMoney } from '../../util/currency';\nimport { types as sdkTypes } from '../../util/sdkLoader';\nimport config from '../../config';\nimport {\n  propTypes,\n  LINE_ITEM_CUSTOMER_COMMISSION,\n  LINE_ITEM_PROVIDER_COMMISSION,\n} from '../../util/types';\n\nimport css from './BookingBreakdown.css';\n\nconst { Money } = sdkTypes;\n\n/**\n * Calculates the total price in sub units for multiple line items.\n */\nconst lineItemsTotal = lineItems => {\n  const amount = lineItems.reduce((total, item) => {\n    return total.plus(item.lineTotal.amount);\n  }, new Decimal(0));\n  return new Money(amount, config.currency);\n};\n\n/**\n * Checks if line item represents commission\n */\nconst isCommission = lineItem => {\n  return (\n    lineItem.code === LINE_ITEM_PROVIDER_COMMISSION ||\n    lineItem.code === LINE_ITEM_CUSTOMER_COMMISSION\n  );\n};\n\n/**\n * Returns non-commission, reversal line items\n */\nconst nonCommissionReversalLineItems = transaction => {\n  return transaction.attributes.lineItems.filter(item => !isCommission(item) && item.reversal);\n};\n\nconst LineItemRefundMaybe = props => {\n  const { transaction, intl } = props;\n\n  // all non-commission, reversal line items\n  const refundLineItems = nonCommissionReversalLineItems(transaction);\n\n  const refund = lineItemsTotal(refundLineItems);\n\n  const formattedRefund = refundLineItems.length > 0 ? formatMoney(intl, refund) : null;\n\n  return formattedRefund ? (\n    <div className={css.lineItem}>\n      <span className={css.itemLabel}>\n        <FormattedMessage id=\"BookingBreakdown.refund\" />\n      </span>\n      <span className={css.itemValue}>{formattedRefund}</span>\n    </div>\n  ) : null;\n};\n\nLineItemRefundMaybe.propTypes = {\n  transaction: propTypes.transaction.isRequired,\n  intl: intlShape.isRequired,\n};\n\nexport default LineItemRefundMaybe;\n"]},"metadata":{},"sourceType":"module"}