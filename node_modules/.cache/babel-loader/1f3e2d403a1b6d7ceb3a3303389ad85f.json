{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/Page/Page.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { withRouter } from 'react-router-dom';\nimport { injectIntl, intlShape } from 'react-intl';\nimport classNames from 'classnames';\nimport routeConfiguration from '../../routeConfiguration';\nimport config from '../../config';\nimport { metaTagProps } from '../../util/seo';\nimport { canonicalRoutePath } from '../../util/routes';\nimport { CookieConsent } from '../../components';\nimport facebookImage from '../../assets/saunatimeFacebook-1200x630.jpg';\nimport twitterImage from '../../assets/saunatimeTwitter-600x314.jpg';\nimport css from './Page.css';\n\nconst preventDefault = e => {\n  e.preventDefault();\n};\n\nconst twitterPageURL = siteTwitterHandle => {\n  if (siteTwitterHandle && siteTwitterHandle.charAt(0) === '@') {\n    return \"https://twitter.com/\".concat(siteTwitterHandle.substring(1));\n  } else if (siteTwitterHandle) {\n    return \"https://twitter.com/\".concat(siteTwitterHandle);\n  }\n\n  return null;\n};\n\nclass PageComponent extends Component {\n  constructor(props) {\n    super(props); // Keeping scrollPosition out of state reduces rendering cycles (and no bad states rendered)\n\n    this.scrollPosition = 0;\n    this.contentDiv = null;\n  }\n\n  componentDidMount() {\n    // By default a dropped file is loaded in the browser window as a\n    // file URL. We want to prevent this since it might loose a lot of\n    // data the user has typed but not yet saved. Preventing requires\n    // handling both dragover and drop events.\n    document.addEventListener('dragover', preventDefault);\n    document.addEventListener('drop', preventDefault);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('dragover', preventDefault);\n    document.removeEventListener('drop', preventDefault);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const scrollingDisabled = nextProps.scrollingDisabled;\n    const scrollingDisabledHasChanged = scrollingDisabled !== this.props.scrollingDisabled;\n\n    if (scrollingDisabled && scrollingDisabledHasChanged) {\n      // Update current scroll position, if scrolling is disabled (e.g. modal is open)\n      this.scrollPosition = window.pageYOffset || document.documentElement.scrollTop;\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          className = _this$props.className,\n          rootClassName = _this$props.rootClassName,\n          children = _this$props.children,\n          location = _this$props.location,\n          intl = _this$props.intl,\n          scrollingDisabled = _this$props.scrollingDisabled,\n          referrer = _this$props.referrer,\n          author = _this$props.author,\n          contentType = _this$props.contentType,\n          description = _this$props.description,\n          facebookImages = _this$props.facebookImages,\n          published = _this$props.published,\n          schema = _this$props.schema,\n          tags = _this$props.tags,\n          title = _this$props.title,\n          twitterHandle = _this$props.twitterHandle,\n          twitterImages = _this$props.twitterImages,\n          updated = _this$props.updated;\n    const classes = classNames(rootClassName || css.root, className, {\n      [css.scrollingDisabled]: scrollingDisabled\n    });\n    const referrerMeta = referrer ? React.createElement(\"meta\", {\n      name: \"referrer\",\n      content: referrer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }) : null;\n    const canonicalRootURL = config.canonicalRootURL;\n    const shouldReturnPathOnly = referrer && referrer !== 'unsafe-url';\n    const canonicalPath = canonicalRoutePath(routeConfiguration(), location, shouldReturnPathOnly);\n    const canonicalUrl = \"\".concat(canonicalRootURL).concat(canonicalPath);\n    const siteTitle = config.siteTitle;\n    const schemaTitle = intl.formatMessage({\n      id: 'Page.schemaTitle'\n    }, {\n      siteTitle\n    });\n    const schemaDescription = intl.formatMessage({\n      id: 'Page.schemaDescription'\n    });\n    const metaTitle = title || schemaTitle;\n    const metaDescription = description || schemaDescription;\n    const facebookImgs = facebookImages || [{\n      name: 'facebook',\n      url: \"\".concat(canonicalRootURL).concat(facebookImage),\n      width: 1200,\n      height: 630\n    }];\n    const twitterImgs = twitterImages || [{\n      name: 'twitter',\n      url: \"\".concat(canonicalRootURL).concat(twitterImage),\n      width: 600,\n      height: 314\n    }];\n    const metaToHead = metaTagProps({\n      author,\n      contentType,\n      description: metaDescription,\n      facebookImages: facebookImgs,\n      twitterImages: twitterImgs,\n      published,\n      tags,\n      title: metaTitle,\n      twitterHandle,\n      updated,\n      url: canonicalUrl,\n      locale: intl.locale\n    }); // eslint-disable-next-line react/no-array-index-key\n\n    const metaTags = metaToHead.map((metaProps, i) => React.createElement(\"meta\", Object.assign({\n      key: i\n    }, metaProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })));\n    const facebookPage = config.siteFacebookPage;\n    const twitterPage = twitterPageURL(config.siteTwitterHandle);\n    const instagramPage = config.siteInstagramPage;\n    const sameOrganizationAs = [facebookPage, twitterPage, instagramPage].filter(v => v != null); // Schema for search engines (helps them to understand what this page is about)\n    // http://schema.org\n    // We are using JSON-LD format\n    // Schema attribute can be either single schema object or an array of objects\n    // This makes it possible to include several different items from the same page.\n    // E.g. Product, Place, Video\n\n    const schemaFromProps = Array.isArray(schema) ? schema : [schema];\n    const schemaArrayJSONString = JSON.stringify([...schemaFromProps, {\n      '@context': 'http://schema.org',\n      '@type': 'Organization',\n      '@id': \"\".concat(canonicalRootURL, \"#organization\"),\n      url: canonicalRootURL,\n      name: siteTitle,\n      sameAs: sameOrganizationAs,\n      logo: \"\".concat(canonicalRootURL, \"/static/webapp-icon-192x192.png\"),\n      address: config.address\n    }, {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      url: canonicalRootURL,\n      description: schemaDescription,\n      name: schemaTitle,\n      publisher: {\n        '@id': \"\".concat(canonicalRootURL, \"#organization\")\n      }\n    }]);\n    const scrollPositionStyles = scrollingDisabled ? {\n      marginTop: \"\".concat(-1 * this.scrollPosition, \"px\")\n    } : {}; // If scrolling is not disabled, but content element has still scrollPosition set\n    // in style attribute, we scrollTo scrollPosition.\n\n    const hasMarginTopStyle = this.contentDiv && this.contentDiv.style.marginTop;\n\n    if (!scrollingDisabled && hasMarginTopStyle) {\n      window.requestAnimationFrame(() => {\n        window.scrollTo(0, this.scrollPosition);\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: classes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Helmet, {\n      htmlAttributes: {\n        lang: intl.locale\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, title), referrerMeta, React.createElement(\"link\", {\n      rel: \"canonical\",\n      href: canonicalUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(\"meta\", {\n      httpEquiv: \"Content-Type\",\n      content: \"text/html; charset=UTF-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(\"meta\", {\n      httpEquiv: \"Content-Language\",\n      content: intl.locale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), metaTags, React.createElement(\"script\", {\n      type: \"application/ld+json\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, schemaArrayJSONString)), React.createElement(CookieConsent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: css.content,\n      style: scrollPositionStyles,\n      ref: c => {\n        this.contentDiv = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, children));\n  }\n\n}\n\nconst any = PropTypes.any,\n      array = PropTypes.array,\n      arrayOf = PropTypes.arrayOf,\n      bool = PropTypes.bool,\n      func = PropTypes.func,\n      number = PropTypes.number,\n      object = PropTypes.object,\n      oneOfType = PropTypes.oneOfType,\n      shape = PropTypes.shape,\n      string = PropTypes.string;\nPageComponent.defaultProps = {\n  className: null,\n  rootClassName: null,\n  children: null,\n  author: null,\n  contentType: 'website',\n  description: null,\n  facebookImages: null,\n  twitterImages: null,\n  published: null,\n  referrer: null,\n  schema: null,\n  tags: null,\n  twitterHandle: null,\n  updated: null\n};\nPageComponent.propTypes = {\n  className: string,\n  rootClassName: string,\n  children: any,\n  scrollingDisabled: bool.isRequired,\n  // Handle referrer policy\n  referrer: string,\n  // SEO related props\n  author: string,\n  contentType: string,\n  // og:type\n  description: string,\n  // page description\n  facebookImages: arrayOf(shape({\n    width: number.isRequired,\n    height: number.isRequired,\n    url: string.isRequired\n  })),\n  twitterImages: arrayOf(shape({\n    width: number.isRequired,\n    height: number.isRequired,\n    url: string.isRequired\n  })),\n  published: string,\n  // article:published_time\n  schema: oneOfType([object, array]),\n  // http://schema.org\n  tags: string,\n  // article:tag\n  title: string.isRequired,\n  // page title\n  twitterHandle: string,\n  // twitter handle\n  updated: string,\n  // article:modified_time\n  // from withRouter\n  history: shape({\n    listen: func.isRequired\n  }).isRequired,\n  location: object.isRequired,\n  // from injectIntl\n  intl: intlShape.isRequired\n};\nconst Page = injectIntl(withRouter(PageComponent));\nPage.displayName = 'Page';\nexport default Page;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/Page/Page.js"],"names":["React","Component","PropTypes","Helmet","withRouter","injectIntl","intlShape","classNames","routeConfiguration","config","metaTagProps","canonicalRoutePath","CookieConsent","facebookImage","twitterImage","css","preventDefault","e","twitterPageURL","siteTwitterHandle","charAt","substring","PageComponent","constructor","props","scrollPosition","contentDiv","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","componentWillReceiveProps","nextProps","scrollingDisabled","scrollingDisabledHasChanged","window","pageYOffset","documentElement","scrollTop","render","className","rootClassName","children","location","intl","referrer","author","contentType","description","facebookImages","published","schema","tags","title","twitterHandle","twitterImages","updated","classes","root","referrerMeta","canonicalRootURL","shouldReturnPathOnly","canonicalPath","canonicalUrl","siteTitle","schemaTitle","formatMessage","id","schemaDescription","metaTitle","metaDescription","facebookImgs","name","url","width","height","twitterImgs","metaToHead","locale","metaTags","map","metaProps","i","facebookPage","siteFacebookPage","twitterPage","instagramPage","siteInstagramPage","sameOrganizationAs","filter","v","schemaFromProps","Array","isArray","schemaArrayJSONString","JSON","stringify","sameAs","logo","address","publisher","scrollPositionStyles","marginTop","hasMarginTopStyle","style","requestAnimationFrame","scrollTo","lang","content","c","any","array","arrayOf","bool","func","number","object","oneOfType","shape","string","defaultProps","propTypes","isRequired","history","listen","Page","displayName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { withRouter } from 'react-router-dom';\nimport { injectIntl, intlShape } from 'react-intl';\nimport classNames from 'classnames';\nimport routeConfiguration from '../../routeConfiguration';\nimport config from '../../config';\nimport { metaTagProps } from '../../util/seo';\nimport { canonicalRoutePath } from '../../util/routes';\nimport { CookieConsent } from '../../components';\n\nimport facebookImage from '../../assets/saunatimeFacebook-1200x630.jpg';\nimport twitterImage from '../../assets/saunatimeTwitter-600x314.jpg';\nimport css from './Page.css';\n\nconst preventDefault = e => {\n  e.preventDefault();\n};\n\nconst twitterPageURL = siteTwitterHandle => {\n  if (siteTwitterHandle && siteTwitterHandle.charAt(0) === '@') {\n    return `https://twitter.com/${siteTwitterHandle.substring(1)}`;\n  } else if (siteTwitterHandle) {\n    return `https://twitter.com/${siteTwitterHandle}`;\n  }\n  return null;\n};\n\nclass PageComponent extends Component {\n  constructor(props) {\n    super(props);\n    // Keeping scrollPosition out of state reduces rendering cycles (and no bad states rendered)\n    this.scrollPosition = 0;\n    this.contentDiv = null;\n  }\n\n  componentDidMount() {\n    // By default a dropped file is loaded in the browser window as a\n    // file URL. We want to prevent this since it might loose a lot of\n    // data the user has typed but not yet saved. Preventing requires\n    // handling both dragover and drop events.\n    document.addEventListener('dragover', preventDefault);\n    document.addEventListener('drop', preventDefault);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('dragover', preventDefault);\n    document.removeEventListener('drop', preventDefault);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const scrollingDisabled = nextProps.scrollingDisabled;\n    const scrollingDisabledHasChanged = scrollingDisabled !== this.props.scrollingDisabled;\n\n    if (scrollingDisabled && scrollingDisabledHasChanged) {\n      // Update current scroll position, if scrolling is disabled (e.g. modal is open)\n      this.scrollPosition = window.pageYOffset || document.documentElement.scrollTop;\n    }\n  }\n\n  render() {\n    const {\n      className,\n      rootClassName,\n      children,\n      location,\n      intl,\n      scrollingDisabled,\n      referrer,\n      author,\n      contentType,\n      description,\n      facebookImages,\n      published,\n      schema,\n      tags,\n      title,\n      twitterHandle,\n      twitterImages,\n      updated,\n    } = this.props;\n\n    const classes = classNames(rootClassName || css.root, className, {\n      [css.scrollingDisabled]: scrollingDisabled,\n    });\n\n    const referrerMeta = referrer ? <meta name=\"referrer\" content={referrer} /> : null;\n\n    const canonicalRootURL = config.canonicalRootURL;\n    const shouldReturnPathOnly = referrer && referrer !== 'unsafe-url';\n    const canonicalPath = canonicalRoutePath(routeConfiguration(), location, shouldReturnPathOnly);\n    const canonicalUrl = `${canonicalRootURL}${canonicalPath}`;\n\n    const siteTitle = config.siteTitle;\n    const schemaTitle = intl.formatMessage({ id: 'Page.schemaTitle' }, { siteTitle });\n    const schemaDescription = intl.formatMessage({ id: 'Page.schemaDescription' });\n    const metaTitle = title || schemaTitle;\n    const metaDescription = description || schemaDescription;\n    const facebookImgs = facebookImages || [\n      {\n        name: 'facebook',\n        url: `${canonicalRootURL}${facebookImage}`,\n        width: 1200,\n        height: 630,\n      },\n    ];\n    const twitterImgs = twitterImages || [\n      {\n        name: 'twitter',\n        url: `${canonicalRootURL}${twitterImage}`,\n        width: 600,\n        height: 314,\n      },\n    ];\n\n    const metaToHead = metaTagProps({\n      author,\n      contentType,\n      description: metaDescription,\n      facebookImages: facebookImgs,\n      twitterImages: twitterImgs,\n      published,\n      tags,\n      title: metaTitle,\n      twitterHandle,\n      updated,\n      url: canonicalUrl,\n      locale: intl.locale,\n    });\n\n    // eslint-disable-next-line react/no-array-index-key\n    const metaTags = metaToHead.map((metaProps, i) => <meta key={i} {...metaProps} />);\n\n    const facebookPage = config.siteFacebookPage;\n    const twitterPage = twitterPageURL(config.siteTwitterHandle);\n    const instagramPage = config.siteInstagramPage;\n    const sameOrganizationAs = [facebookPage, twitterPage, instagramPage].filter(v => v != null);\n\n    // Schema for search engines (helps them to understand what this page is about)\n    // http://schema.org\n    // We are using JSON-LD format\n\n    // Schema attribute can be either single schema object or an array of objects\n    // This makes it possible to include several different items from the same page.\n    // E.g. Product, Place, Video\n    const schemaFromProps = Array.isArray(schema) ? schema : [schema];\n    const schemaArrayJSONString = JSON.stringify([\n      ...schemaFromProps,\n      {\n        '@context': 'http://schema.org',\n        '@type': 'Organization',\n        '@id': `${canonicalRootURL}#organization`,\n        url: canonicalRootURL,\n        name: siteTitle,\n        sameAs: sameOrganizationAs,\n        logo: `${canonicalRootURL}/static/webapp-icon-192x192.png`,\n        address: config.address,\n      },\n      {\n        '@context': 'http://schema.org',\n        '@type': 'WebSite',\n        url: canonicalRootURL,\n        description: schemaDescription,\n        name: schemaTitle,\n        publisher: {\n          '@id': `${canonicalRootURL}#organization`,\n        },\n      },\n    ]);\n\n    const scrollPositionStyles = scrollingDisabled\n      ? { marginTop: `${-1 * this.scrollPosition}px` }\n      : {};\n\n    // If scrolling is not disabled, but content element has still scrollPosition set\n    // in style attribute, we scrollTo scrollPosition.\n    const hasMarginTopStyle = this.contentDiv && this.contentDiv.style.marginTop;\n    if (!scrollingDisabled && hasMarginTopStyle) {\n      window.requestAnimationFrame(() => {\n        window.scrollTo(0, this.scrollPosition);\n      });\n    }\n\n    return (\n      <div className={classes}>\n        <Helmet\n          htmlAttributes={{\n            lang: intl.locale,\n          }}\n        >\n          <title>{title}</title>\n          {referrerMeta}\n          <link rel=\"canonical\" href={canonicalUrl} />\n          <meta httpEquiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n          <meta httpEquiv=\"Content-Language\" content={intl.locale} />\n          {metaTags}\n          <script type=\"application/ld+json\">{schemaArrayJSONString}</script>\n        </Helmet>\n        <CookieConsent />\n        <div\n          className={css.content}\n          style={scrollPositionStyles}\n          ref={c => {\n            this.contentDiv = c;\n          }}\n        >\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst { any, array, arrayOf, bool, func, number, object, oneOfType, shape, string } = PropTypes;\n\nPageComponent.defaultProps = {\n  className: null,\n  rootClassName: null,\n  children: null,\n  author: null,\n  contentType: 'website',\n  description: null,\n  facebookImages: null,\n  twitterImages: null,\n  published: null,\n  referrer: null,\n  schema: null,\n  tags: null,\n  twitterHandle: null,\n  updated: null,\n};\n\nPageComponent.propTypes = {\n  className: string,\n  rootClassName: string,\n  children: any,\n  scrollingDisabled: bool.isRequired,\n\n  // Handle referrer policy\n  referrer: string,\n\n  // SEO related props\n  author: string,\n  contentType: string, // og:type\n  description: string, // page description\n  facebookImages: arrayOf(\n    shape({\n      width: number.isRequired,\n      height: number.isRequired,\n      url: string.isRequired,\n    })\n  ),\n  twitterImages: arrayOf(\n    shape({\n      width: number.isRequired,\n      height: number.isRequired,\n      url: string.isRequired,\n    })\n  ),\n  published: string, // article:published_time\n  schema: oneOfType([object, array]), // http://schema.org\n  tags: string, // article:tag\n  title: string.isRequired, // page title\n  twitterHandle: string, // twitter handle\n  updated: string, // article:modified_time\n\n  // from withRouter\n  history: shape({\n    listen: func.isRequired,\n  }).isRequired,\n  location: object.isRequired,\n\n  // from injectIntl\n  intl: intlShape.isRequired,\n};\n\nconst Page = injectIntl(withRouter(PageComponent));\nPage.displayName = 'Page';\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}