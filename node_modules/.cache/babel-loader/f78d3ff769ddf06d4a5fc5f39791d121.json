{"ast":null,"code":"import _objectWithoutProperties from \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/containers/TopbarContainer/TopbarContainer.js\";\nimport React from 'react';\nimport { bool, func, number, object, shape, string } from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { propTypes } from '../../util/types';\nimport { sendVerificationEmail, hasCurrentUserErrors } from '../../ducks/user.duck';\nimport { logout, authenticationInProgress } from '../../ducks/Auth.duck';\nimport { manageDisableScrolling } from '../../ducks/UI.duck';\nimport { Topbar } from '../../components';\nexport const TopbarContainerComponent = props => {\n  const authInProgress = props.authInProgress,\n        currentPage = props.currentPage,\n        currentSearchParams = props.currentSearchParams,\n        currentUser = props.currentUser,\n        currentUserHasListings = props.currentUserHasListings,\n        currentUserHasOrders = props.currentUserHasOrders,\n        history = props.history,\n        isAuthenticated = props.isAuthenticated,\n        hasGenericError = props.hasGenericError,\n        location = props.location,\n        notificationCount = props.notificationCount,\n        onLogout = props.onLogout,\n        onManageDisableScrolling = props.onManageDisableScrolling,\n        sendVerificationEmailInProgress = props.sendVerificationEmailInProgress,\n        sendVerificationEmailError = props.sendVerificationEmailError,\n        onResendVerificationEmail = props.onResendVerificationEmail,\n        rest = _objectWithoutProperties(props, [\"authInProgress\", \"currentPage\", \"currentSearchParams\", \"currentUser\", \"currentUserHasListings\", \"currentUserHasOrders\", \"history\", \"isAuthenticated\", \"hasGenericError\", \"location\", \"notificationCount\", \"onLogout\", \"onManageDisableScrolling\", \"sendVerificationEmailInProgress\", \"sendVerificationEmailError\", \"onResendVerificationEmail\"]);\n\n  return React.createElement(Topbar, Object.assign({\n    authInProgress: authInProgress,\n    currentPage: currentPage,\n    currentSearchParams: currentSearchParams,\n    currentUser: currentUser,\n    currentUserHasListings: currentUserHasListings,\n    currentUserHasOrders: currentUserHasOrders,\n    history: history,\n    isAuthenticated: isAuthenticated,\n    location: location,\n    notificationCount: notificationCount,\n    onLogout: onLogout,\n    onManageDisableScrolling: onManageDisableScrolling,\n    onResendVerificationEmail: onResendVerificationEmail,\n    sendVerificationEmailInProgress: sendVerificationEmailInProgress,\n    sendVerificationEmailError: sendVerificationEmailError,\n    showGenericError: hasGenericError\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n};\nTopbarContainerComponent.defaultProps = {\n  currentPage: null,\n  currentSearchParams: null,\n  currentUser: null,\n  currentUserHasOrders: null,\n  notificationCount: 0,\n  sendVerificationEmailError: null\n};\nTopbarContainerComponent.propTypes = {\n  authInProgress: bool.isRequired,\n  currentPage: string,\n  currentSearchParams: object,\n  currentUser: propTypes.currentUser,\n  currentUserHasListings: bool.isRequired,\n  currentUserHasOrders: bool,\n  isAuthenticated: bool.isRequired,\n  notificationCount: number,\n  onLogout: func.isRequired,\n  onManageDisableScrolling: func.isRequired,\n  sendVerificationEmailInProgress: bool.isRequired,\n  sendVerificationEmailError: propTypes.error,\n  onResendVerificationEmail: func.isRequired,\n  hasGenericError: bool.isRequired,\n  // from withRouter\n  history: shape({\n    push: func.isRequired\n  }).isRequired,\n  location: shape({\n    state: object\n  }).isRequired\n};\n\nconst mapStateToProps = state => {\n  // Topbar needs isAuthenticated\n  const _state$Auth = state.Auth,\n        isAuthenticated = _state$Auth.isAuthenticated,\n        logoutError = _state$Auth.logoutError; // Topbar needs user info.\n\n  const _state$user = state.user,\n        currentUser = _state$user.currentUser,\n        currentUserHasListings = _state$user.currentUserHasListings,\n        currentUserHasOrders = _state$user.currentUserHasOrders,\n        notificationCount = _state$user.currentUserNotificationCount,\n        sendVerificationEmailInProgress = _state$user.sendVerificationEmailInProgress,\n        sendVerificationEmailError = _state$user.sendVerificationEmailError;\n  const hasGenericError = !!(logoutError || hasCurrentUserErrors(state));\n  return {\n    authInProgress: authenticationInProgress(state),\n    currentUser,\n    currentUserHasListings,\n    currentUserHasOrders,\n    notificationCount,\n    isAuthenticated,\n    sendVerificationEmailInProgress,\n    sendVerificationEmailError,\n    hasGenericError\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onLogout: historyPush => dispatch(logout(historyPush)),\n  onManageDisableScrolling: (componentId, disableScrolling) => dispatch(manageDisableScrolling(componentId, disableScrolling)),\n  onResendVerificationEmail: () => dispatch(sendVerificationEmail())\n}); // Note: it is important that the withRouter HOC is **outside** the\n// connect HOC, otherwise React Router won't rerender any Route\n// components since connect implements a shouldComponentUpdate\n// lifecycle hook.\n//\n// See: https://github.com/ReactTraining/react-router/issues/4671\n\n\nconst TopbarContainer = compose(withRouter, connect(mapStateToProps, mapDispatchToProps))(TopbarContainerComponent);\nexport default TopbarContainer;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/containers/TopbarContainer/TopbarContainer.js"],"names":["React","bool","func","number","object","shape","string","compose","connect","withRouter","propTypes","sendVerificationEmail","hasCurrentUserErrors","logout","authenticationInProgress","manageDisableScrolling","Topbar","TopbarContainerComponent","props","authInProgress","currentPage","currentSearchParams","currentUser","currentUserHasListings","currentUserHasOrders","history","isAuthenticated","hasGenericError","location","notificationCount","onLogout","onManageDisableScrolling","sendVerificationEmailInProgress","sendVerificationEmailError","onResendVerificationEmail","rest","defaultProps","isRequired","error","push","state","mapStateToProps","Auth","logoutError","user","currentUserNotificationCount","mapDispatchToProps","dispatch","historyPush","componentId","disableScrolling","TopbarContainer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { bool, func, number, object, shape, string } from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { propTypes } from '../../util/types';\nimport { sendVerificationEmail, hasCurrentUserErrors } from '../../ducks/user.duck';\nimport { logout, authenticationInProgress } from '../../ducks/Auth.duck';\nimport { manageDisableScrolling } from '../../ducks/UI.duck';\nimport { Topbar } from '../../components';\n\nexport const TopbarContainerComponent = props => {\n  const {\n    authInProgress,\n    currentPage,\n    currentSearchParams,\n    currentUser,\n    currentUserHasListings,\n    currentUserHasOrders,\n    history,\n    isAuthenticated,\n    hasGenericError,\n    location,\n    notificationCount,\n    onLogout,\n    onManageDisableScrolling,\n    sendVerificationEmailInProgress,\n    sendVerificationEmailError,\n    onResendVerificationEmail,\n    ...rest\n  } = props;\n\n  return (\n    <Topbar\n      authInProgress={authInProgress}\n      currentPage={currentPage}\n      currentSearchParams={currentSearchParams}\n      currentUser={currentUser}\n      currentUserHasListings={currentUserHasListings}\n      currentUserHasOrders={currentUserHasOrders}\n      history={history}\n      isAuthenticated={isAuthenticated}\n      location={location}\n      notificationCount={notificationCount}\n      onLogout={onLogout}\n      onManageDisableScrolling={onManageDisableScrolling}\n      onResendVerificationEmail={onResendVerificationEmail}\n      sendVerificationEmailInProgress={sendVerificationEmailInProgress}\n      sendVerificationEmailError={sendVerificationEmailError}\n      showGenericError={hasGenericError}\n      {...rest}\n    />\n  );\n};\n\nTopbarContainerComponent.defaultProps = {\n  currentPage: null,\n  currentSearchParams: null,\n  currentUser: null,\n  currentUserHasOrders: null,\n  notificationCount: 0,\n  sendVerificationEmailError: null,\n};\n\nTopbarContainerComponent.propTypes = {\n  authInProgress: bool.isRequired,\n  currentPage: string,\n  currentSearchParams: object,\n  currentUser: propTypes.currentUser,\n  currentUserHasListings: bool.isRequired,\n  currentUserHasOrders: bool,\n  isAuthenticated: bool.isRequired,\n  notificationCount: number,\n  onLogout: func.isRequired,\n  onManageDisableScrolling: func.isRequired,\n  sendVerificationEmailInProgress: bool.isRequired,\n  sendVerificationEmailError: propTypes.error,\n  onResendVerificationEmail: func.isRequired,\n  hasGenericError: bool.isRequired,\n\n  // from withRouter\n  history: shape({\n    push: func.isRequired,\n  }).isRequired,\n  location: shape({ state: object }).isRequired,\n};\n\nconst mapStateToProps = state => {\n  // Topbar needs isAuthenticated\n  const { isAuthenticated, logoutError } = state.Auth;\n  // Topbar needs user info.\n  const {\n    currentUser,\n    currentUserHasListings,\n    currentUserHasOrders,\n    currentUserNotificationCount: notificationCount,\n    sendVerificationEmailInProgress,\n    sendVerificationEmailError,\n  } = state.user;\n  const hasGenericError = !!(logoutError || hasCurrentUserErrors(state));\n  return {\n    authInProgress: authenticationInProgress(state),\n    currentUser,\n    currentUserHasListings,\n    currentUserHasOrders,\n    notificationCount,\n    isAuthenticated,\n    sendVerificationEmailInProgress,\n    sendVerificationEmailError,\n    hasGenericError,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onLogout: historyPush => dispatch(logout(historyPush)),\n  onManageDisableScrolling: (componentId, disableScrolling) =>\n    dispatch(manageDisableScrolling(componentId, disableScrolling)),\n  onResendVerificationEmail: () => dispatch(sendVerificationEmail()),\n});\n\n// Note: it is important that the withRouter HOC is **outside** the\n// connect HOC, otherwise React Router won't rerender any Route\n// components since connect implements a shouldComponentUpdate\n// lifecycle hook.\n//\n// See: https://github.com/ReactTraining/react-router/issues/4671\nconst TopbarContainer = compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(TopbarContainerComponent);\n\nexport default TopbarContainer;\n"]},"metadata":{},"sourceType":"module"}