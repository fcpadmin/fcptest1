{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/containers/PasswordChangePage/PasswordChangePage.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { injectIntl, intlShape, FormattedMessage } from 'react-intl';\nimport { propTypes } from '../../util/types';\nimport { isScrollingDisabled } from '../../ducks/UI.duck';\nimport { LayoutSideNavigation, LayoutWrapperMain, LayoutWrapperSideNav, LayoutWrapperTopbar, LayoutWrapperFooter, Footer, Page, UserNav } from '../../components';\nimport { PasswordChangeForm } from '../../forms';\nimport { TopbarContainer } from '../../containers';\nimport { changePassword, changePasswordClear } from './PasswordChangePage.duck';\nimport css from './PasswordChangePage.css';\nexport const PasswordChangePageComponent = props => {\n  const changePasswordError = props.changePasswordError,\n        changePasswordInProgress = props.changePasswordInProgress,\n        currentUser = props.currentUser,\n        onChange = props.onChange,\n        onSubmitChangePassword = props.onSubmitChangePassword,\n        passwordChanged = props.passwordChanged,\n        scrollingDisabled = props.scrollingDisabled,\n        intl = props.intl;\n  const tabs = [{\n    text: React.createElement(FormattedMessage, {\n      id: \"PasswordChangePage.contactDetailsTabTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }),\n    selected: false,\n    linkProps: {\n      name: 'ContactDetailsPage'\n    }\n  }, {\n    text: React.createElement(FormattedMessage, {\n      id: \"PasswordChangePage.passwordTabTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }),\n    selected: true,\n    linkProps: {\n      name: 'PasswordChangePage'\n    }\n  }, {\n    text: React.createElement(FormattedMessage, {\n      id: \"PasswordChangePage.paymentsTabTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }),\n    selected: false,\n    linkProps: {\n      name: 'PayoutPreferencesPage'\n    }\n  }];\n  const changePasswordForm = currentUser && currentUser.id ? React.createElement(PasswordChangeForm, {\n    className: css.form,\n    changePasswordError: changePasswordError,\n    currentUser: currentUser,\n    onSubmit: onSubmitChangePassword,\n    onChange: onChange,\n    inProgress: changePasswordInProgress,\n    ready: passwordChanged,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }) : null;\n  const title = intl.formatMessage({\n    id: 'PasswordChangePage.title'\n  });\n  return React.createElement(Page, {\n    title: title,\n    scrollingDisabled: scrollingDisabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(LayoutSideNavigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(LayoutWrapperTopbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(TopbarContainer, {\n    currentPage: \"PasswordChangePage\",\n    desktopClassName: css.desktopTopbar,\n    mobileClassName: css.mobileTopbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(UserNav, {\n    selectedPageName: \"PasswordChangePage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(LayoutWrapperSideNav, {\n    tabs: tabs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(LayoutWrapperMain, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: css.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"PasswordChangePage.heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), changePasswordForm)), React.createElement(LayoutWrapperFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }))));\n};\nPasswordChangePageComponent.defaultProps = {\n  changePasswordError: null,\n  currentUser: null\n};\nconst bool = PropTypes.bool,\n      func = PropTypes.func;\nPasswordChangePageComponent.propTypes = {\n  changePasswordError: propTypes.error,\n  changePasswordInProgress: bool.isRequired,\n  currentUser: propTypes.currentUser,\n  onChange: func.isRequired,\n  onSubmitChangePassword: func.isRequired,\n  passwordChanged: bool.isRequired,\n  scrollingDisabled: bool.isRequired,\n  // from injectIntl\n  intl: intlShape.isRequired\n};\n\nconst mapStateToProps = state => {\n  // Topbar needs user info.\n  const _state$PasswordChange = state.PasswordChangePage,\n        changePasswordError = _state$PasswordChange.changePasswordError,\n        changePasswordInProgress = _state$PasswordChange.changePasswordInProgress,\n        passwordChanged = _state$PasswordChange.passwordChanged;\n  const currentUser = state.user.currentUser;\n  return {\n    changePasswordError,\n    changePasswordInProgress,\n    currentUser,\n    passwordChanged,\n    scrollingDisabled: isScrollingDisabled(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: () => dispatch(changePasswordClear()),\n  onSubmitChangePassword: values => dispatch(changePassword(values))\n});\n\nconst PasswordChangePage = compose(connect(mapStateToProps, mapDispatchToProps), injectIntl)(PasswordChangePageComponent);\nexport default PasswordChangePage;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/containers/PasswordChangePage/PasswordChangePage.js"],"names":["React","PropTypes","compose","connect","injectIntl","intlShape","FormattedMessage","propTypes","isScrollingDisabled","LayoutSideNavigation","LayoutWrapperMain","LayoutWrapperSideNav","LayoutWrapperTopbar","LayoutWrapperFooter","Footer","Page","UserNav","PasswordChangeForm","TopbarContainer","changePassword","changePasswordClear","css","PasswordChangePageComponent","props","changePasswordError","changePasswordInProgress","currentUser","onChange","onSubmitChangePassword","passwordChanged","scrollingDisabled","intl","tabs","text","selected","linkProps","name","changePasswordForm","id","form","title","formatMessage","desktopTopbar","mobileTopbar","content","defaultProps","bool","func","error","isRequired","mapStateToProps","state","PasswordChangePage","user","mapDispatchToProps","dispatch","values"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { injectIntl, intlShape, FormattedMessage } from 'react-intl';\nimport { propTypes } from '../../util/types';\nimport { isScrollingDisabled } from '../../ducks/UI.duck';\nimport {\n  LayoutSideNavigation,\n  LayoutWrapperMain,\n  LayoutWrapperSideNav,\n  LayoutWrapperTopbar,\n  LayoutWrapperFooter,\n  Footer,\n  Page,\n  UserNav,\n} from '../../components';\nimport { PasswordChangeForm } from '../../forms';\nimport { TopbarContainer } from '../../containers';\n\nimport { changePassword, changePasswordClear } from './PasswordChangePage.duck';\nimport css from './PasswordChangePage.css';\n\nexport const PasswordChangePageComponent = props => {\n  const {\n    changePasswordError,\n    changePasswordInProgress,\n    currentUser,\n    onChange,\n    onSubmitChangePassword,\n    passwordChanged,\n    scrollingDisabled,\n    intl,\n  } = props;\n\n  const tabs = [\n    {\n      text: <FormattedMessage id=\"PasswordChangePage.contactDetailsTabTitle\" />,\n      selected: false,\n      linkProps: {\n        name: 'ContactDetailsPage',\n      },\n    },\n    {\n      text: <FormattedMessage id=\"PasswordChangePage.passwordTabTitle\" />,\n      selected: true,\n      linkProps: {\n        name: 'PasswordChangePage',\n      },\n    },\n    {\n      text: <FormattedMessage id=\"PasswordChangePage.paymentsTabTitle\" />,\n      selected: false,\n      linkProps: {\n        name: 'PayoutPreferencesPage',\n      },\n    },\n  ];\n\n  const changePasswordForm =\n    currentUser && currentUser.id ? (\n      <PasswordChangeForm\n        className={css.form}\n        changePasswordError={changePasswordError}\n        currentUser={currentUser}\n        onSubmit={onSubmitChangePassword}\n        onChange={onChange}\n        inProgress={changePasswordInProgress}\n        ready={passwordChanged}\n      />\n    ) : null;\n\n  const title = intl.formatMessage({ id: 'PasswordChangePage.title' });\n\n  return (\n    <Page title={title} scrollingDisabled={scrollingDisabled}>\n      <LayoutSideNavigation>\n        <LayoutWrapperTopbar>\n          <TopbarContainer\n            currentPage=\"PasswordChangePage\"\n            desktopClassName={css.desktopTopbar}\n            mobileClassName={css.mobileTopbar}\n          />\n          <UserNav selectedPageName=\"PasswordChangePage\" />\n        </LayoutWrapperTopbar>\n        <LayoutWrapperSideNav tabs={tabs} />\n        <LayoutWrapperMain>\n          <div className={css.content}>\n            <h1 className={css.title}>\n              <FormattedMessage id=\"PasswordChangePage.heading\" />\n            </h1>\n            {changePasswordForm}\n          </div>\n        </LayoutWrapperMain>\n        <LayoutWrapperFooter>\n          <Footer />\n        </LayoutWrapperFooter>\n      </LayoutSideNavigation>\n    </Page>\n  );\n};\n\nPasswordChangePageComponent.defaultProps = {\n  changePasswordError: null,\n  currentUser: null,\n};\n\nconst { bool, func } = PropTypes;\n\nPasswordChangePageComponent.propTypes = {\n  changePasswordError: propTypes.error,\n  changePasswordInProgress: bool.isRequired,\n  currentUser: propTypes.currentUser,\n  onChange: func.isRequired,\n  onSubmitChangePassword: func.isRequired,\n  passwordChanged: bool.isRequired,\n  scrollingDisabled: bool.isRequired,\n\n  // from injectIntl\n  intl: intlShape.isRequired,\n};\n\nconst mapStateToProps = state => {\n  // Topbar needs user info.\n  const {\n    changePasswordError,\n    changePasswordInProgress,\n    passwordChanged,\n  } = state.PasswordChangePage;\n  const { currentUser } = state.user;\n  return {\n    changePasswordError,\n    changePasswordInProgress,\n    currentUser,\n    passwordChanged,\n    scrollingDisabled: isScrollingDisabled(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: () => dispatch(changePasswordClear()),\n  onSubmitChangePassword: values => dispatch(changePassword(values)),\n});\n\nconst PasswordChangePage = compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  injectIntl\n)(PasswordChangePageComponent);\n\nexport default PasswordChangePage;\n"]},"metadata":{},"sourceType":"module"}