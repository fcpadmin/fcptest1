{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/forms/PayoutDetailsForm/PayoutDetailsCompany.js\";\nimport React from 'react';\nimport { bool, string } from 'prop-types';\nimport { FormattedMessage, intlShape } from 'react-intl';\nimport * as validators from '../../util/validators';\nimport { FieldPhoneNumberInput, FieldTextInput } from '../../components';\nimport * as normalizePhoneNumberUS from './normalizePhoneNumberUS';\nimport PayoutDetailsBusinessProfile from './PayoutDetailsBusinessProfile';\nimport css from './PayoutDetailsForm.css';\n\nconst PayoutDetailsCompany = props => {\n  const fieldId = props.fieldId,\n        disabled = props.disabled,\n        intl = props.intl,\n        country = props.country,\n        showBusinessURLField = props.showBusinessURLField,\n        showMCCForUSField = props.showMCCForUSField,\n        showPhoneNumberField = props.showPhoneNumberField;\n  const companyNameLabel = intl.formatMessage({\n    id: 'PayoutDetailsForm.companyNameLabel'\n  });\n  const companyNamePlaceholder = intl.formatMessage({\n    id: 'PayoutDetailsForm.companyNamePlaceholder'\n  });\n  const companyNameRequired = validators.required(intl.formatMessage({\n    id: 'PayoutDetailsForm.companyNameRequired'\n  }));\n  const companyTaxIdLabel = intl.formatMessage({\n    id: \"PayoutDetailsForm.companyTaxIdLabel.\".concat(country)\n  });\n  const companyTaxIdPlaceholder = intl.formatMessage({\n    id: 'PayoutDetailsForm.companyTaxIdPlaceholder'\n  }, {\n    idName: companyTaxIdLabel\n  });\n  const companyTaxIdRequired = validators.required(intl.formatMessage({\n    id: 'PayoutDetailsForm.companyTaxIdRequired'\n  }, {\n    idName: companyTaxIdLabel\n  }));\n  const phoneLabel = intl.formatMessage({\n    id: 'PayoutDetailsForm.companyPhoneLabel'\n  });\n  const phonePlaceholder = intl.formatMessage({\n    id: 'PayoutDetailsForm.companyPhonePlaceholder'\n  });\n  const phoneNumberForUSRequired = validators.required(intl.formatMessage({\n    id: 'PayoutDetailsForm.companyPhoneRequired'\n  }));\n  return React.createElement(\"div\", {\n    className: css.sectionContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: css.subTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"PayoutDetailsForm.companyDetailsTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(FieldTextInput, {\n    id: \"\".concat(fieldId, \".name\"),\n    name: \"\".concat(fieldId, \".name\"),\n    className: css.textInputRow,\n    autoComplete: \"organization\",\n    disabled: disabled,\n    label: companyNameLabel,\n    placeholder: companyNamePlaceholder,\n    type: \"text\",\n    validate: companyNameRequired,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(FieldTextInput, {\n    id: \"\".concat(fieldId, \".taxId\"),\n    name: \"\".concat(fieldId, \".taxId\"),\n    className: css.textInputRow,\n    autoComplete: \"company-tax-id\",\n    disabled: disabled,\n    label: companyTaxIdLabel,\n    placeholder: companyTaxIdPlaceholder,\n    type: \"text\",\n    validate: companyTaxIdRequired,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(PayoutDetailsBusinessProfile, {\n    disabled: disabled,\n    fieldId: \"\".concat(fieldId, \".businessProfile\"),\n    showBusinessURLField: showBusinessURLField,\n    showMCCForUSField: showMCCForUSField,\n    intl: intl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), showPhoneNumberField ? React.createElement(FieldPhoneNumberInput, {\n    id: \"\".concat(fieldId, \".phone\"),\n    name: \"\".concat(fieldId, \".phone\"),\n    className: css.textInputRow,\n    autoComplete: \"tel-national\",\n    label: phoneLabel,\n    format: normalizePhoneNumberUS.format,\n    parse: normalizePhoneNumberUS.parse,\n    placeholder: phonePlaceholder,\n    type: \"text\",\n    validate: phoneNumberForUSRequired,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }) : null);\n};\n\nPayoutDetailsCompany.defaultProps = {\n  fieldId: null,\n  disabled: false,\n  showBusinessURLField: false,\n  showMCCForUSField: false,\n  showPhoneNumberField: false\n};\nPayoutDetailsCompany.propTypes = {\n  fieldId: string,\n  disabled: bool,\n  country: string.isRequired,\n  showBusinessURLField: bool,\n  showMCCForUSField: bool,\n  showPhoneNumberField: bool,\n  // from injectIntl\n  intl: intlShape.isRequired\n};\nexport default PayoutDetailsCompany;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/forms/PayoutDetailsForm/PayoutDetailsCompany.js"],"names":["React","bool","string","FormattedMessage","intlShape","validators","FieldPhoneNumberInput","FieldTextInput","normalizePhoneNumberUS","PayoutDetailsBusinessProfile","css","PayoutDetailsCompany","props","fieldId","disabled","intl","country","showBusinessURLField","showMCCForUSField","showPhoneNumberField","companyNameLabel","formatMessage","id","companyNamePlaceholder","companyNameRequired","required","companyTaxIdLabel","companyTaxIdPlaceholder","idName","companyTaxIdRequired","phoneLabel","phonePlaceholder","phoneNumberForUSRequired","sectionContainer","subTitle","textInputRow","format","parse","defaultProps","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { bool, string } from 'prop-types';\nimport { FormattedMessage, intlShape } from 'react-intl';\nimport * as validators from '../../util/validators';\nimport { FieldPhoneNumberInput, FieldTextInput } from '../../components';\n\nimport * as normalizePhoneNumberUS from './normalizePhoneNumberUS';\nimport PayoutDetailsBusinessProfile from './PayoutDetailsBusinessProfile';\nimport css from './PayoutDetailsForm.css';\n\nconst PayoutDetailsCompany = props => {\n  const {\n    fieldId,\n    disabled,\n    intl,\n    country,\n    showBusinessURLField,\n    showMCCForUSField,\n    showPhoneNumberField,\n  } = props;\n\n  const companyNameLabel = intl.formatMessage({ id: 'PayoutDetailsForm.companyNameLabel' });\n  const companyNamePlaceholder = intl.formatMessage({\n    id: 'PayoutDetailsForm.companyNamePlaceholder',\n  });\n  const companyNameRequired = validators.required(\n    intl.formatMessage({\n      id: 'PayoutDetailsForm.companyNameRequired',\n    })\n  );\n\n  const companyTaxIdLabel = intl.formatMessage({\n    id: `PayoutDetailsForm.companyTaxIdLabel.${country}`,\n  });\n  const companyTaxIdPlaceholder = intl.formatMessage(\n    {\n      id: 'PayoutDetailsForm.companyTaxIdPlaceholder',\n    },\n    {\n      idName: companyTaxIdLabel,\n    }\n  );\n  const companyTaxIdRequired = validators.required(\n    intl.formatMessage(\n      {\n        id: 'PayoutDetailsForm.companyTaxIdRequired',\n      },\n      {\n        idName: companyTaxIdLabel,\n      }\n    )\n  );\n\n  const phoneLabel = intl.formatMessage({ id: 'PayoutDetailsForm.companyPhoneLabel' });\n  const phonePlaceholder = intl.formatMessage({\n    id: 'PayoutDetailsForm.companyPhonePlaceholder',\n  });\n  const phoneNumberForUSRequired = validators.required(\n    intl.formatMessage({ id: 'PayoutDetailsForm.companyPhoneRequired' })\n  );\n\n  return (\n    <div className={css.sectionContainer}>\n      <h3 className={css.subTitle}>\n        <FormattedMessage id=\"PayoutDetailsForm.companyDetailsTitle\" />\n      </h3>\n      <FieldTextInput\n        id={`${fieldId}.name`}\n        name={`${fieldId}.name`}\n        className={css.textInputRow}\n        autoComplete=\"organization\"\n        disabled={disabled}\n        label={companyNameLabel}\n        placeholder={companyNamePlaceholder}\n        type=\"text\"\n        validate={companyNameRequired}\n      />\n\n      <FieldTextInput\n        id={`${fieldId}.taxId`}\n        name={`${fieldId}.taxId`}\n        className={css.textInputRow}\n        autoComplete=\"company-tax-id\"\n        disabled={disabled}\n        label={companyTaxIdLabel}\n        placeholder={companyTaxIdPlaceholder}\n        type=\"text\"\n        validate={companyTaxIdRequired}\n      />\n\n      <PayoutDetailsBusinessProfile\n        disabled={disabled}\n        fieldId={`${fieldId}.businessProfile`}\n        showBusinessURLField={showBusinessURLField}\n        showMCCForUSField={showMCCForUSField}\n        intl={intl}\n      />\n\n      {showPhoneNumberField ? (\n        <FieldPhoneNumberInput\n          id={`${fieldId}.phone`}\n          name={`${fieldId}.phone`}\n          className={css.textInputRow}\n          autoComplete=\"tel-national\"\n          label={phoneLabel}\n          format={normalizePhoneNumberUS.format}\n          parse={normalizePhoneNumberUS.parse}\n          placeholder={phonePlaceholder}\n          type=\"text\"\n          validate={phoneNumberForUSRequired}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nPayoutDetailsCompany.defaultProps = {\n  fieldId: null,\n  disabled: false,\n  showBusinessURLField: false,\n  showMCCForUSField: false,\n  showPhoneNumberField: false,\n};\n\nPayoutDetailsCompany.propTypes = {\n  fieldId: string,\n  disabled: bool,\n  country: string.isRequired,\n  showBusinessURLField: bool,\n  showMCCForUSField: bool,\n  showPhoneNumberField: bool,\n\n  // from injectIntl\n  intl: intlShape.isRequired,\n};\n\nexport default PayoutDetailsCompany;\n"]},"metadata":{},"sourceType":"module"}