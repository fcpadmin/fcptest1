{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/LocationAutocompleteInput/LocationAutocompleteInput.example.js\";\nimport React, { Component } from 'react';\nimport { Form as FinalForm, Field } from 'react-final-form';\nimport { propTypes } from '../../util/types';\nimport { Button } from '../../components';\nimport LocationAutocompleteInput from './LocationAutocompleteInput';\n\nconst Form = props => {\n  return React.createElement(FinalForm, Object.assign({}, props, {\n    render: ({\n      handleSubmit,\n      pristine\n    }) => {\n      return React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"location\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Select location:\"), React.createElement(Field, {\n        name: \"location\",\n        format: null,\n        component: LocationAutocompleteInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        style: {\n          marginTop: '24px'\n        },\n        disabled: pristine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Submit\"));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n};\n\nconst PlaceInfo = props => {\n  const place = props.place;\n  const address = place.address,\n        origin = place.origin,\n        bounds = place.bounds;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Submitted place:\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Address: \", address), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Coordinates: \", origin.lat, \", \", origin.lng), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Bounds?: \", bounds ? 'yes' : 'no')));\n};\n\nPlaceInfo.propTypes = {\n  place: propTypes.place.isRequired\n};\n\nclass FormContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: {}\n    };\n  }\n\n  render() {\n    const onSubmit = values => {\n      this.setState({\n        location: values.location\n      });\n    };\n\n    const place = this.state.location.selectedPlace;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Search for a place name or address, select on with mouse or keyboard, and submit the form.\"), React.createElement(Form, {\n      onSubmit: onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), place ? React.createElement(PlaceInfo, {\n      place: place,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport const Empty = {\n  component: FormContainer,\n  group: 'custom inputs'\n};","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/LocationAutocompleteInput/LocationAutocompleteInput.example.js"],"names":["React","Component","Form","FinalForm","Field","propTypes","Button","LocationAutocompleteInput","props","handleSubmit","pristine","marginTop","PlaceInfo","place","address","origin","bounds","lat","lng","isRequired","FormContainer","constructor","state","location","render","onSubmit","values","setState","selectedPlace","Empty","component","group"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form as FinalForm, Field } from 'react-final-form';\nimport { propTypes } from '../../util/types';\nimport { Button } from '../../components';\nimport LocationAutocompleteInput from './LocationAutocompleteInput';\n\nconst Form = props => {\n  return (\n    <FinalForm\n      {...props}\n      render={({ handleSubmit, pristine }) => {\n        return (\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"location\">Select location:</label>\n            <Field name=\"location\" format={null} component={LocationAutocompleteInput} />\n            <Button type=\"submit\" style={{ marginTop: '24px' }} disabled={pristine}>\n              Submit\n            </Button>\n          </form>\n        );\n      }}\n    />\n  );\n};\n\nconst PlaceInfo = props => {\n  const { place } = props;\n  const { address, origin, bounds } = place;\n  return (\n    <div>\n      <p>Submitted place:</p>\n      <ul>\n        <li>Address: {address}</li>\n        <li>\n          Coordinates: {origin.lat}, {origin.lng}\n        </li>\n        <li>Bounds?: {bounds ? 'yes' : 'no'}</li>\n      </ul>\n    </div>\n  );\n};\n\nPlaceInfo.propTypes = { place: propTypes.place.isRequired };\n\nclass FormContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { location: {} };\n  }\n  render() {\n    const onSubmit = values => {\n      this.setState({ location: values.location });\n    };\n    const place = this.state.location.selectedPlace;\n    return (\n      <div>\n        <p>\n          Search for a place name or address, select on with mouse or keyboard, and submit the form.\n        </p>\n        <Form onSubmit={onSubmit} />\n        {place ? <PlaceInfo place={place} /> : null}\n      </div>\n    );\n  }\n}\n\nexport const Empty = {\n  component: FormContainer,\n  group: 'custom inputs',\n};\n"]},"metadata":{},"sourceType":"module"}