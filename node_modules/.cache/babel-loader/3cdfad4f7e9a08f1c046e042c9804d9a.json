{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/TabNavHorizontal/TabNavHorizontal.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { InlineTextButton, NamedLink } from '../../components';\nimport css from './TabNavHorizontal.css';\nexport const LIGHT_SKIN = 'light';\nexport const DARK_SKIN = 'dark';\nconst arrayOf = PropTypes.arrayOf,\n      bool = PropTypes.bool,\n      func = PropTypes.func,\n      node = PropTypes.node,\n      object = PropTypes.object,\n      oneOf = PropTypes.oneOf,\n      string = PropTypes.string,\n      shape = PropTypes.shape;\n\nconst Tab = props => {\n  const className = props.className,\n        disabled = props.disabled,\n        text = props.text,\n        selected = props.selected,\n        onClick = props.onClick,\n        linkProps = props.linkProps,\n        isDark = props.isDark;\n  const darkSkinClasses = isDark ? classNames(css.tabContentDarkSkin, {\n    [css.selectedTabContentDarkSkin]: selected,\n    [css.disabledDarkSkin]: disabled\n  }) : null;\n  const linkClasses = classNames(css.tabContent, {\n    [css.selectedTabContent]: selected,\n    [css.disabled]: disabled\n  }, darkSkinClasses);\n  const buttonClasses = classNames(css.tabContent, css.button, {\n    [css.selectedTabContent]: selected,\n    [css.disabled]: disabled\n  }, darkSkinClasses);\n  const isButton = !!onClick;\n  return React.createElement(\"div\", {\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, isButton ? React.createElement(InlineTextButton, {\n    rootClassName: buttonClasses,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, text) : React.createElement(NamedLink, Object.assign({\n    className: linkClasses\n  }, linkProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), text));\n};\n\nTab.defaultProps = {\n  className: null,\n  disabled: false,\n  selected: false\n};\nTab.propTypes = {\n  className: string,\n  text: node.isRequired,\n  disabled: bool,\n  selected: bool,\n  onClick: func,\n  linkProps: object,\n  isDark: bool.isRequired\n};\n\nconst TabNavHorizontal = props => {\n  const className = props.className,\n        rootClassName = props.rootClassName,\n        tabRootClassName = props.tabRootClassName,\n        tabs = props.tabs,\n        skin = props.skin;\n  const isDark = skin === DARK_SKIN;\n  const classes = classNames(rootClassName || css.root, {\n    [css.darkSkin]: isDark\n  }, className);\n  const tabClasses = tabRootClassName || css.tab;\n  return React.createElement(\"nav\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, tabs.map((tab, index) => {\n    const key = typeof tab.text === 'string' ? tab.text : index;\n    return React.createElement(Tab, Object.assign({\n      key: key,\n      className: tabClasses\n    }, tab, {\n      isDark: isDark,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n  }));\n};\n/**\n * A tab navigation element with buttons. Requires onClick\n * function param for tab objects passed as parameter.\n */\n\n\nexport const ButtonTabNavHorizontal = props => React.createElement(TabNavHorizontal, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}));\nButtonTabNavHorizontal.defaultProps = {\n  className: null,\n  rootClassName: null,\n  tabRootClassName: null,\n  tabClassName: null,\n  skin: LIGHT_SKIN\n};\nButtonTabNavHorizontal.propTypes = {\n  className: string,\n  rootClassName: string,\n  tabRootClassName: string,\n  tabs: arrayOf(shape({\n    text: node.isRequired,\n    disabled: bool,\n    selected: bool,\n    onClick: func.isRequired\n  })).isRequired,\n  skin: oneOf([LIGHT_SKIN, DARK_SKIN])\n};\n/**\n * A tab navigation element with links. Requires linkProps\n * object param for tab objects passed as parameter.\n */\n\nexport const LinkTabNavHorizontal = props => React.createElement(TabNavHorizontal, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118\n  },\n  __self: this\n}));\nLinkTabNavHorizontal.defaultProps = {\n  className: null,\n  rootClassName: null,\n  tabRootClassName: null,\n  tabClassName: null,\n  skin: LIGHT_SKIN\n};\nLinkTabNavHorizontal.propTypes = {\n  className: string,\n  rootClassName: string,\n  tabRootClassName: string,\n  tabs: arrayOf(shape({\n    text: node.isRequired,\n    disabled: bool,\n    selected: bool,\n    linkProps: object.isRequired\n  })).isRequired,\n  skin: oneOf([LIGHT_SKIN, DARK_SKIN])\n};","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/TabNavHorizontal/TabNavHorizontal.js"],"names":["React","PropTypes","classNames","InlineTextButton","NamedLink","css","LIGHT_SKIN","DARK_SKIN","arrayOf","bool","func","node","object","oneOf","string","shape","Tab","props","className","disabled","text","selected","onClick","linkProps","isDark","darkSkinClasses","tabContentDarkSkin","selectedTabContentDarkSkin","disabledDarkSkin","linkClasses","tabContent","selectedTabContent","buttonClasses","button","isButton","defaultProps","propTypes","isRequired","TabNavHorizontal","rootClassName","tabRootClassName","tabs","skin","classes","root","darkSkin","tabClasses","tab","map","index","key","ButtonTabNavHorizontal","tabClassName","LinkTabNavHorizontal"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,gBAAT,EAA2BC,SAA3B,QAA4C,kBAA5C;AAEA,OAAOC,GAAP,MAAgB,wBAAhB;AAEA,OAAO,MAAMC,UAAU,GAAG,OAAnB;AACP,OAAO,MAAMC,SAAS,GAAG,MAAlB;MAECC,O,GAA4DP,S,CAA5DO,O;MAASC,I,GAAmDR,S,CAAnDQ,I;MAAMC,I,GAA6CT,S,CAA7CS,I;MAAMC,I,GAAuCV,S,CAAvCU,I;MAAMC,M,GAAiCX,S,CAAjCW,M;MAAQC,K,GAAyBZ,S,CAAzBY,K;MAAOC,M,GAAkBb,S,CAAlBa,M;MAAQC,K,GAAUd,S,CAAVc,K;;AAE1D,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAAA,QACXC,SADW,GACyDD,KADzD,CACXC,SADW;AAAA,QACAC,QADA,GACyDF,KADzD,CACAE,QADA;AAAA,QACUC,IADV,GACyDH,KADzD,CACUG,IADV;AAAA,QACgBC,QADhB,GACyDJ,KADzD,CACgBI,QADhB;AAAA,QAC0BC,OAD1B,GACyDL,KADzD,CAC0BK,OAD1B;AAAA,QACmCC,SADnC,GACyDN,KADzD,CACmCM,SADnC;AAAA,QAC8CC,MAD9C,GACyDP,KADzD,CAC8CO,MAD9C;AAEnB,QAAMC,eAAe,GAAGD,MAAM,GAC1BtB,UAAU,CAACG,GAAG,CAACqB,kBAAL,EAAyB;AACjC,KAACrB,GAAG,CAACsB,0BAAL,GAAkCN,QADD;AAEjC,KAAChB,GAAG,CAACuB,gBAAL,GAAwBT;AAFS,GAAzB,CADgB,GAK1B,IALJ;AAOA,QAAMU,WAAW,GAAG3B,UAAU,CAC5BG,GAAG,CAACyB,UADwB,EAE5B;AACE,KAACzB,GAAG,CAAC0B,kBAAL,GAA0BV,QAD5B;AAEE,KAAChB,GAAG,CAACc,QAAL,GAAgBA;AAFlB,GAF4B,EAM5BM,eAN4B,CAA9B;AASA,QAAMO,aAAa,GAAG9B,UAAU,CAC9BG,GAAG,CAACyB,UAD0B,EAE9BzB,GAAG,CAAC4B,MAF0B,EAG9B;AACE,KAAC5B,GAAG,CAAC0B,kBAAL,GAA0BV,QAD5B;AAEE,KAAChB,GAAG,CAACc,QAAL,GAAgBA;AAFlB,GAH8B,EAO9BM,eAP8B,CAAhC;AAUA,QAAMS,QAAQ,GAAG,CAAC,CAACZ,OAAnB;AAEA,SACE;AAAK,IAAA,SAAS,EAAEJ,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGgB,QAAQ,GACP,oBAAC,gBAAD;AAAkB,IAAA,aAAa,EAAEF,aAAjC;AAAgD,IAAA,OAAO,EAAEV,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IADH,CADO,GAKP,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAES;AAAtB,KAAuCN,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGH,IADH,CANJ,CADF;AAaD,CA3CD;;AA6CAJ,GAAG,CAACmB,YAAJ,GAAmB;AAAEjB,EAAAA,SAAS,EAAE,IAAb;AAAmBC,EAAAA,QAAQ,EAAE,KAA7B;AAAoCE,EAAAA,QAAQ,EAAE;AAA9C,CAAnB;AAEAL,GAAG,CAACoB,SAAJ,GAAgB;AACdlB,EAAAA,SAAS,EAAEJ,MADG;AAEdM,EAAAA,IAAI,EAAET,IAAI,CAAC0B,UAFG;AAGdlB,EAAAA,QAAQ,EAAEV,IAHI;AAIdY,EAAAA,QAAQ,EAAEZ,IAJI;AAKda,EAAAA,OAAO,EAAEZ,IALK;AAMda,EAAAA,SAAS,EAAEX,MANG;AAOdY,EAAAA,MAAM,EAAEf,IAAI,CAAC4B;AAPC,CAAhB;;AAUA,MAAMC,gBAAgB,GAAGrB,KAAK,IAAI;AAAA,QACxBC,SADwB,GACmCD,KADnC,CACxBC,SADwB;AAAA,QACbqB,aADa,GACmCtB,KADnC,CACbsB,aADa;AAAA,QACEC,gBADF,GACmCvB,KADnC,CACEuB,gBADF;AAAA,QACoBC,IADpB,GACmCxB,KADnC,CACoBwB,IADpB;AAAA,QAC0BC,IAD1B,GACmCzB,KADnC,CAC0ByB,IAD1B;AAEhC,QAAMlB,MAAM,GAAGkB,IAAI,KAAKnC,SAAxB;AACA,QAAMoC,OAAO,GAAGzC,UAAU,CAACqC,aAAa,IAAIlC,GAAG,CAACuC,IAAtB,EAA4B;AAAE,KAACvC,GAAG,CAACwC,QAAL,GAAgBrB;AAAlB,GAA5B,EAAwDN,SAAxD,CAA1B;AACA,QAAM4B,UAAU,GAAGN,gBAAgB,IAAInC,GAAG,CAAC0C,GAA3C;AACA,SACE;AAAK,IAAA,SAAS,EAAEJ,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACO,GAAL,CAAS,CAACD,GAAD,EAAME,KAAN,KAAgB;AACxB,UAAMC,GAAG,GAAG,OAAOH,GAAG,CAAC3B,IAAX,KAAoB,QAApB,GAA+B2B,GAAG,CAAC3B,IAAnC,GAA0C6B,KAAtD;AACA,WAAO,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEC,GAAV;AAAe,MAAA,SAAS,EAAEJ;AAA1B,OAA0CC,GAA1C;AAA+C,MAAA,MAAM,EAAEvB,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAHA,CADH,CADF;AAQD,CAbD;AAeA;;;;;;AAIA,OAAO,MAAM2B,sBAAsB,GAAGlC,KAAK,IAAI,oBAAC,gBAAD,oBAAsBA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxC;AAEPkC,sBAAsB,CAAChB,YAAvB,GAAsC;AACpCjB,EAAAA,SAAS,EAAE,IADyB;AAEpCqB,EAAAA,aAAa,EAAE,IAFqB;AAGpCC,EAAAA,gBAAgB,EAAE,IAHkB;AAIpCY,EAAAA,YAAY,EAAE,IAJsB;AAKpCV,EAAAA,IAAI,EAAEpC;AAL8B,CAAtC;AAQA6C,sBAAsB,CAACf,SAAvB,GAAmC;AACjClB,EAAAA,SAAS,EAAEJ,MADsB;AAEjCyB,EAAAA,aAAa,EAAEzB,MAFkB;AAGjC0B,EAAAA,gBAAgB,EAAE1B,MAHe;AAIjC2B,EAAAA,IAAI,EAAEjC,OAAO,CACXO,KAAK,CAAC;AACJK,IAAAA,IAAI,EAAET,IAAI,CAAC0B,UADP;AAEJlB,IAAAA,QAAQ,EAAEV,IAFN;AAGJY,IAAAA,QAAQ,EAAEZ,IAHN;AAIJa,IAAAA,OAAO,EAAEZ,IAAI,CAAC2B;AAJV,GAAD,CADM,CAAP,CAOJA,UAX+B;AAYjCK,EAAAA,IAAI,EAAE7B,KAAK,CAAC,CAACP,UAAD,EAAaC,SAAb,CAAD;AAZsB,CAAnC;AAeA;;;;;AAIA,OAAO,MAAM8C,oBAAoB,GAAGpC,KAAK,IAAI,oBAAC,gBAAD,oBAAsBA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC;AAEPoC,oBAAoB,CAAClB,YAArB,GAAoC;AAClCjB,EAAAA,SAAS,EAAE,IADuB;AAElCqB,EAAAA,aAAa,EAAE,IAFmB;AAGlCC,EAAAA,gBAAgB,EAAE,IAHgB;AAIlCY,EAAAA,YAAY,EAAE,IAJoB;AAKlCV,EAAAA,IAAI,EAAEpC;AAL4B,CAApC;AAQA+C,oBAAoB,CAACjB,SAArB,GAAiC;AAC/BlB,EAAAA,SAAS,EAAEJ,MADoB;AAE/ByB,EAAAA,aAAa,EAAEzB,MAFgB;AAG/B0B,EAAAA,gBAAgB,EAAE1B,MAHa;AAI/B2B,EAAAA,IAAI,EAAEjC,OAAO,CACXO,KAAK,CAAC;AACJK,IAAAA,IAAI,EAAET,IAAI,CAAC0B,UADP;AAEJlB,IAAAA,QAAQ,EAAEV,IAFN;AAGJY,IAAAA,QAAQ,EAAEZ,IAHN;AAIJc,IAAAA,SAAS,EAAEX,MAAM,CAACyB;AAJd,GAAD,CADM,CAAP,CAOJA,UAX6B;AAY/BK,EAAAA,IAAI,EAAE7B,KAAK,CAAC,CAACP,UAAD,EAAaC,SAAb,CAAD;AAZoB,CAAjC","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { InlineTextButton, NamedLink } from '../../components';\n\nimport css from './TabNavHorizontal.css';\n\nexport const LIGHT_SKIN = 'light';\nexport const DARK_SKIN = 'dark';\n\nconst { arrayOf, bool, func, node, object, oneOf, string, shape } = PropTypes;\n\nconst Tab = props => {\n  const { className, disabled, text, selected, onClick, linkProps, isDark } = props;\n  const darkSkinClasses = isDark\n    ? classNames(css.tabContentDarkSkin, {\n        [css.selectedTabContentDarkSkin]: selected,\n        [css.disabledDarkSkin]: disabled,\n      })\n    : null;\n\n  const linkClasses = classNames(\n    css.tabContent,\n    {\n      [css.selectedTabContent]: selected,\n      [css.disabled]: disabled,\n    },\n    darkSkinClasses\n  );\n\n  const buttonClasses = classNames(\n    css.tabContent,\n    css.button,\n    {\n      [css.selectedTabContent]: selected,\n      [css.disabled]: disabled,\n    },\n    darkSkinClasses\n  );\n\n  const isButton = !!onClick;\n\n  return (\n    <div className={className}>\n      {isButton ? (\n        <InlineTextButton rootClassName={buttonClasses} onClick={onClick}>\n          {text}\n        </InlineTextButton>\n      ) : (\n        <NamedLink className={linkClasses} {...linkProps}>\n          {text}\n        </NamedLink>\n      )}\n    </div>\n  );\n};\n\nTab.defaultProps = { className: null, disabled: false, selected: false };\n\nTab.propTypes = {\n  className: string,\n  text: node.isRequired,\n  disabled: bool,\n  selected: bool,\n  onClick: func,\n  linkProps: object,\n  isDark: bool.isRequired,\n};\n\nconst TabNavHorizontal = props => {\n  const { className, rootClassName, tabRootClassName, tabs, skin } = props;\n  const isDark = skin === DARK_SKIN;\n  const classes = classNames(rootClassName || css.root, { [css.darkSkin]: isDark }, className);\n  const tabClasses = tabRootClassName || css.tab;\n  return (\n    <nav className={classes}>\n      {tabs.map((tab, index) => {\n        const key = typeof tab.text === 'string' ? tab.text : index;\n        return <Tab key={key} className={tabClasses} {...tab} isDark={isDark} />;\n      })}\n    </nav>\n  );\n};\n\n/**\n * A tab navigation element with buttons. Requires onClick\n * function param for tab objects passed as parameter.\n */\nexport const ButtonTabNavHorizontal = props => <TabNavHorizontal {...props} />;\n\nButtonTabNavHorizontal.defaultProps = {\n  className: null,\n  rootClassName: null,\n  tabRootClassName: null,\n  tabClassName: null,\n  skin: LIGHT_SKIN,\n};\n\nButtonTabNavHorizontal.propTypes = {\n  className: string,\n  rootClassName: string,\n  tabRootClassName: string,\n  tabs: arrayOf(\n    shape({\n      text: node.isRequired,\n      disabled: bool,\n      selected: bool,\n      onClick: func.isRequired,\n    })\n  ).isRequired,\n  skin: oneOf([LIGHT_SKIN, DARK_SKIN]),\n};\n\n/**\n * A tab navigation element with links. Requires linkProps\n * object param for tab objects passed as parameter.\n */\nexport const LinkTabNavHorizontal = props => <TabNavHorizontal {...props} />;\n\nLinkTabNavHorizontal.defaultProps = {\n  className: null,\n  rootClassName: null,\n  tabRootClassName: null,\n  tabClassName: null,\n  skin: LIGHT_SKIN,\n};\n\nLinkTabNavHorizontal.propTypes = {\n  className: string,\n  rootClassName: string,\n  tabRootClassName: string,\n  tabs: arrayOf(\n    shape({\n      text: node.isRequired,\n      disabled: bool,\n      selected: bool,\n      linkProps: object.isRequired,\n    })\n  ).isRequired,\n  skin: oneOf([LIGHT_SKIN, DARK_SKIN]),\n};\n"]},"metadata":{},"sourceType":"module"}