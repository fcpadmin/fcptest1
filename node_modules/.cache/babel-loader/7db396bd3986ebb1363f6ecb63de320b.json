{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/TransactionPanel/FeedSection.js\";\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport { ActivityFeed } from '../../components';\nimport css from './TransactionPanel.css'; // Functional component as a helper to build ActivityFeed section\n\nconst FeedSection = props => {\n  const className = props.className,\n        rootClassName = props.rootClassName,\n        currentTransaction = props.currentTransaction,\n        currentUser = props.currentUser,\n        fetchMessagesError = props.fetchMessagesError,\n        fetchMessagesInProgress = props.fetchMessagesInProgress,\n        initialMessageFailed = props.initialMessageFailed,\n        messages = props.messages,\n        oldestMessagePageFetched = props.oldestMessagePageFetched,\n        onShowMoreMessages = props.onShowMoreMessages,\n        onOpenReviewModal = props.onOpenReviewModal,\n        totalMessagePages = props.totalMessagePages;\n  const txTransitions = currentTransaction.attributes.transitions ? currentTransaction.attributes.transitions : [];\n  const hasOlderMessages = totalMessagePages > oldestMessagePageFetched;\n  const showFeed = messages.length > 0 || txTransitions.length > 0 || initialMessageFailed || fetchMessagesError;\n  const classes = classNames(rootClassName || css.feedContainer, className);\n  return showFeed ? React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: css.feedHeading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"TransactionPanel.activityHeading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), initialMessageFailed ? React.createElement(\"p\", {\n    className: css.messageError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"TransactionPanel.initialMessageFailed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })) : null, fetchMessagesError ? React.createElement(\"p\", {\n    className: css.messageError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"TransactionPanel.messageLoadingFailed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })) : null, React.createElement(ActivityFeed, {\n    className: css.feed,\n    messages: messages,\n    transaction: currentTransaction,\n    currentUser: currentUser,\n    hasOlderMessages: hasOlderMessages && !fetchMessagesInProgress,\n    onOpenReviewModal: onOpenReviewModal,\n    onShowOlderMessages: onShowMoreMessages,\n    fetchMessagesInProgress: fetchMessagesInProgress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })) : null;\n};\n\nexport default FeedSection;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/TransactionPanel/FeedSection.js"],"names":["React","FormattedMessage","classNames","ActivityFeed","css","FeedSection","props","className","rootClassName","currentTransaction","currentUser","fetchMessagesError","fetchMessagesInProgress","initialMessageFailed","messages","oldestMessagePageFetched","onShowMoreMessages","onOpenReviewModal","totalMessagePages","txTransitions","attributes","transitions","hasOlderMessages","showFeed","length","classes","feedContainer","feedHeading","messageError","feed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport { ActivityFeed } from '../../components';\n\nimport css from './TransactionPanel.css';\n\n// Functional component as a helper to build ActivityFeed section\nconst FeedSection = props => {\n  const {\n    className,\n    rootClassName,\n    currentTransaction,\n    currentUser,\n    fetchMessagesError,\n    fetchMessagesInProgress,\n    initialMessageFailed,\n    messages,\n    oldestMessagePageFetched,\n    onShowMoreMessages,\n    onOpenReviewModal,\n    totalMessagePages,\n  } = props;\n\n  const txTransitions = currentTransaction.attributes.transitions\n    ? currentTransaction.attributes.transitions\n    : [];\n  const hasOlderMessages = totalMessagePages > oldestMessagePageFetched;\n\n  const showFeed =\n    messages.length > 0 || txTransitions.length > 0 || initialMessageFailed || fetchMessagesError;\n\n  const classes = classNames(rootClassName || css.feedContainer, className);\n\n  return showFeed ? (\n    <div className={classes}>\n      <h3 className={css.feedHeading}>\n        <FormattedMessage id=\"TransactionPanel.activityHeading\" />\n      </h3>\n      {initialMessageFailed ? (\n        <p className={css.messageError}>\n          <FormattedMessage id=\"TransactionPanel.initialMessageFailed\" />\n        </p>\n      ) : null}\n      {fetchMessagesError ? (\n        <p className={css.messageError}>\n          <FormattedMessage id=\"TransactionPanel.messageLoadingFailed\" />\n        </p>\n      ) : null}\n      <ActivityFeed\n        className={css.feed}\n        messages={messages}\n        transaction={currentTransaction}\n        currentUser={currentUser}\n        hasOlderMessages={hasOlderMessages && !fetchMessagesInProgress}\n        onOpenReviewModal={onOpenReviewModal}\n        onShowOlderMessages={onShowMoreMessages}\n        fetchMessagesInProgress={fetchMessagesInProgress}\n      />\n    </div>\n  ) : null;\n};\n\nexport default FeedSection;\n"]},"metadata":{},"sourceType":"module"}