{"ast":null,"code":"import _objectSpread from \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/PriceFilter/PriceFilterPopup.js\";\nimport React, { Component } from 'react';\nimport { func, number, shape, string } from 'prop-types';\nimport classNames from 'classnames';\nimport { injectIntl, intlShape } from 'react-intl';\nimport { propTypes } from '../../util/types';\nimport { formatCurrencyMajorUnit } from '../../util/currency';\nimport config from '../../config';\nimport { PriceFilterForm } from '../../forms';\nimport css from './PriceFilterPopup.css';\nconst KEY_CODE_ESCAPE = 27;\n\nclass PriceFilterPopup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.filter = null;\n    this.filterContent = null;\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.toggleOpen = this.toggleOpen.bind(this);\n    this.positionStyleForContent = this.positionStyleForContent.bind(this);\n  }\n\n  handleSubmit(values) {\n    const _this$props = this.props,\n          onSubmit = _this$props.onSubmit,\n          urlParam = _this$props.urlParam;\n    this.setState({\n      isOpen: false\n    });\n    onSubmit(urlParam, values);\n  }\n\n  handleClear() {\n    const _this$props2 = this.props,\n          onSubmit = _this$props2.onSubmit,\n          urlParam = _this$props2.urlParam;\n    this.setState({\n      isOpen: false\n    });\n    onSubmit(urlParam, null);\n  }\n\n  handleCancel() {\n    const _this$props3 = this.props,\n          onSubmit = _this$props3.onSubmit,\n          initialValues = _this$props3.initialValues,\n          urlParam = _this$props3.urlParam;\n    this.setState({\n      isOpen: false\n    });\n    onSubmit(urlParam, initialValues);\n  }\n\n  handleBlur(event) {\n    // FocusEvent is fired faster than the link elements native click handler\n    // gets its own event. Therefore, we need to check the origin of this FocusEvent.\n    if (!this.filter.contains(event.relatedTarget)) {\n      this.setState({\n        isOpen: false\n      });\n    }\n  }\n\n  handleKeyDown(e) {\n    // Gather all escape presses to close menu\n    if (e.keyCode === KEY_CODE_ESCAPE) {\n      this.toggleOpen(false);\n    }\n  }\n\n  toggleOpen(enforcedState) {\n    if (enforcedState) {\n      this.setState({\n        isOpen: enforcedState\n      });\n    } else {\n      this.setState(prevState => ({\n        isOpen: !prevState.isOpen\n      }));\n    }\n  }\n\n  positionStyleForContent() {\n    if (this.filter && this.filterContent) {\n      // Render the filter content to the right from the menu\n      // unless there's no space in which case it is rendered\n      // to the left\n      const distanceToRight = window.innerWidth - this.filter.getBoundingClientRect().right;\n      const labelWidth = this.filter.offsetWidth;\n      const contentWidth = this.filterContent.offsetWidth;\n      const contentWidthBiggerThanLabel = contentWidth - labelWidth;\n      const renderToRight = distanceToRight > contentWidthBiggerThanLabel;\n      const contentPlacementOffset = this.props.contentPlacementOffset;\n      const offset = renderToRight ? {\n        left: contentPlacementOffset\n      } : {\n        right: contentPlacementOffset\n      }; // set a min-width if the content is narrower than the label\n\n      const minWidth = contentWidth < labelWidth ? {\n        minWidth: labelWidth\n      } : null;\n      return _objectSpread({}, offset, minWidth);\n    }\n\n    return {};\n  }\n\n  render() {\n    const _this$props4 = this.props,\n          rootClassName = _this$props4.rootClassName,\n          className = _this$props4.className,\n          id = _this$props4.id,\n          initialValues = _this$props4.initialValues,\n          min = _this$props4.min,\n          max = _this$props4.max,\n          step = _this$props4.step,\n          intl = _this$props4.intl,\n          currencyConfig = _this$props4.currencyConfig;\n    const classes = classNames(rootClassName || css.root, className);\n\n    const _ref = initialValues || {},\n          minPrice = _ref.minPrice,\n          maxPrice = _ref.maxPrice;\n\n    const hasValue = value => value != null;\n\n    const hasInitialValues = initialValues && hasValue(minPrice) && hasValue(maxPrice);\n    const label = hasInitialValues ? intl.formatMessage({\n      id: 'PriceFilter.labelSelectedButton'\n    }, {\n      minPrice: formatCurrencyMajorUnit(intl, currencyConfig.currency, minPrice),\n      maxPrice: formatCurrencyMajorUnit(intl, currencyConfig.currency, maxPrice)\n    }) : intl.formatMessage({\n      id: 'PriceFilter.label'\n    });\n    const labelStyles = hasInitialValues ? css.labelSelected : css.label;\n    const contentStyle = this.positionStyleForContent();\n    return React.createElement(\"div\", {\n      className: classes,\n      onBlur: this.handleBlur,\n      onKeyDown: this.handleKeyDown,\n      ref: node => {\n        this.filter = node;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: labelStyles,\n      onClick: () => this.toggleOpen(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, label), React.createElement(PriceFilterForm, {\n      id: id,\n      initialValues: hasInitialValues ? initialValues : {\n        minPrice: min,\n        maxPrice: max\n      },\n      onClear: this.handleClear,\n      onCancel: this.handleCancel,\n      onSubmit: this.handleSubmit,\n      intl: intl,\n      contentRef: node => {\n        this.filterContent = node;\n      },\n      style: contentStyle,\n      min: min,\n      max: max,\n      step: step,\n      showAsPopup: true,\n      isOpen: this.state.isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }));\n  }\n\n}\n\nPriceFilterPopup.defaultProps = {\n  rootClassName: null,\n  className: null,\n  initialValues: null,\n  contentPlacementOffset: 0,\n  liveEdit: false,\n  step: number,\n  currencyConfig: config.currencyConfig\n};\nPriceFilterPopup.propTypes = {\n  rootClassName: string,\n  className: string,\n  id: string.isRequired,\n  urlParam: string.isRequired,\n  onSubmit: func.isRequired,\n  initialValues: shape({\n    minPrice: number.isRequired,\n    maxPrice: number.isRequired\n  }),\n  contentPlacementOffset: number,\n  min: number.isRequired,\n  max: number.isRequired,\n  step: number,\n  currencyConfig: propTypes.currencyConfig,\n  // form injectIntl\n  intl: intlShape.isRequired\n};\nexport default injectIntl(PriceFilterPopup);","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/PriceFilter/PriceFilterPopup.js"],"names":["React","Component","func","number","shape","string","classNames","injectIntl","intlShape","propTypes","formatCurrencyMajorUnit","config","PriceFilterForm","css","KEY_CODE_ESCAPE","PriceFilterPopup","constructor","props","state","isOpen","filter","filterContent","handleSubmit","bind","handleClear","handleCancel","handleBlur","handleKeyDown","toggleOpen","positionStyleForContent","values","onSubmit","urlParam","setState","initialValues","event","contains","relatedTarget","e","keyCode","enforcedState","prevState","distanceToRight","window","innerWidth","getBoundingClientRect","right","labelWidth","offsetWidth","contentWidth","contentWidthBiggerThanLabel","renderToRight","contentPlacementOffset","offset","left","minWidth","render","rootClassName","className","id","min","max","step","intl","currencyConfig","classes","root","minPrice","maxPrice","hasValue","value","hasInitialValues","label","formatMessage","currency","labelStyles","labelSelected","contentStyle","node","defaultProps","liveEdit","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { func, number, shape, string } from 'prop-types';\nimport classNames from 'classnames';\nimport { injectIntl, intlShape } from 'react-intl';\nimport { propTypes } from '../../util/types';\nimport { formatCurrencyMajorUnit } from '../../util/currency';\nimport config from '../../config';\n\nimport { PriceFilterForm } from '../../forms';\nimport css from './PriceFilterPopup.css';\n\nconst KEY_CODE_ESCAPE = 27;\n\nclass PriceFilterPopup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { isOpen: false };\n    this.filter = null;\n    this.filterContent = null;\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.toggleOpen = this.toggleOpen.bind(this);\n    this.positionStyleForContent = this.positionStyleForContent.bind(this);\n  }\n\n  handleSubmit(values) {\n    const { onSubmit, urlParam } = this.props;\n    this.setState({ isOpen: false });\n    onSubmit(urlParam, values);\n  }\n\n  handleClear() {\n    const { onSubmit, urlParam } = this.props;\n    this.setState({ isOpen: false });\n    onSubmit(urlParam, null);\n  }\n\n  handleCancel() {\n    const { onSubmit, initialValues, urlParam } = this.props;\n    this.setState({ isOpen: false });\n    onSubmit(urlParam, initialValues);\n  }\n\n  handleBlur(event) {\n    // FocusEvent is fired faster than the link elements native click handler\n    // gets its own event. Therefore, we need to check the origin of this FocusEvent.\n    if (!this.filter.contains(event.relatedTarget)) {\n      this.setState({ isOpen: false });\n    }\n  }\n\n  handleKeyDown(e) {\n    // Gather all escape presses to close menu\n    if (e.keyCode === KEY_CODE_ESCAPE) {\n      this.toggleOpen(false);\n    }\n  }\n\n  toggleOpen(enforcedState) {\n    if (enforcedState) {\n      this.setState({ isOpen: enforcedState });\n    } else {\n      this.setState(prevState => ({ isOpen: !prevState.isOpen }));\n    }\n  }\n\n  positionStyleForContent() {\n    if (this.filter && this.filterContent) {\n      // Render the filter content to the right from the menu\n      // unless there's no space in which case it is rendered\n      // to the left\n      const distanceToRight = window.innerWidth - this.filter.getBoundingClientRect().right;\n      const labelWidth = this.filter.offsetWidth;\n      const contentWidth = this.filterContent.offsetWidth;\n      const contentWidthBiggerThanLabel = contentWidth - labelWidth;\n      const renderToRight = distanceToRight > contentWidthBiggerThanLabel;\n      const contentPlacementOffset = this.props.contentPlacementOffset;\n\n      const offset = renderToRight\n        ? { left: contentPlacementOffset }\n        : { right: contentPlacementOffset };\n      // set a min-width if the content is narrower than the label\n      const minWidth = contentWidth < labelWidth ? { minWidth: labelWidth } : null;\n\n      return { ...offset, ...minWidth };\n    }\n    return {};\n  }\n\n  render() {\n    const {\n      rootClassName,\n      className,\n      id,\n      initialValues,\n      min,\n      max,\n      step,\n      intl,\n      currencyConfig,\n    } = this.props;\n    const classes = classNames(rootClassName || css.root, className);\n    const { minPrice, maxPrice } = initialValues || {};\n\n    const hasValue = value => value != null;\n    const hasInitialValues = initialValues && hasValue(minPrice) && hasValue(maxPrice);\n\n    const label = hasInitialValues\n      ? intl.formatMessage(\n          { id: 'PriceFilter.labelSelectedButton' },\n          {\n            minPrice: formatCurrencyMajorUnit(intl, currencyConfig.currency, minPrice),\n            maxPrice: formatCurrencyMajorUnit(intl, currencyConfig.currency, maxPrice),\n          }\n        )\n      : intl.formatMessage({ id: 'PriceFilter.label' });\n\n    const labelStyles = hasInitialValues ? css.labelSelected : css.label;\n    const contentStyle = this.positionStyleForContent();\n\n    return (\n      <div\n        className={classes}\n        onBlur={this.handleBlur}\n        onKeyDown={this.handleKeyDown}\n        ref={node => {\n          this.filter = node;\n        }}\n      >\n        <button className={labelStyles} onClick={() => this.toggleOpen()}>\n          {label}\n        </button>\n        <PriceFilterForm\n          id={id}\n          initialValues={hasInitialValues ? initialValues : { minPrice: min, maxPrice: max }}\n          onClear={this.handleClear}\n          onCancel={this.handleCancel}\n          onSubmit={this.handleSubmit}\n          intl={intl}\n          contentRef={node => {\n            this.filterContent = node;\n          }}\n          style={contentStyle}\n          min={min}\n          max={max}\n          step={step}\n          showAsPopup\n          isOpen={this.state.isOpen}\n        />\n      </div>\n    );\n  }\n}\n\nPriceFilterPopup.defaultProps = {\n  rootClassName: null,\n  className: null,\n  initialValues: null,\n  contentPlacementOffset: 0,\n  liveEdit: false,\n  step: number,\n  currencyConfig: config.currencyConfig,\n};\n\nPriceFilterPopup.propTypes = {\n  rootClassName: string,\n  className: string,\n  id: string.isRequired,\n  urlParam: string.isRequired,\n  onSubmit: func.isRequired,\n  initialValues: shape({\n    minPrice: number.isRequired,\n    maxPrice: number.isRequired,\n  }),\n  contentPlacementOffset: number,\n  min: number.isRequired,\n  max: number.isRequired,\n  step: number,\n  currencyConfig: propTypes.currencyConfig,\n\n  // form injectIntl\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(PriceFilterPopup);\n"]},"metadata":{},"sourceType":"module"}