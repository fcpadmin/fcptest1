{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/FieldPhoneNumberInput/FieldPhoneNumberInput.example.js\";\nimport React from 'react';\nimport { Form as FinalForm, FormSpy } from 'react-final-form';\nimport * as validators from '../../util/validators';\nimport { Button } from '../../components';\nimport FieldPhoneNumberInput from './FieldPhoneNumberInput';\nconst formName = 'Styleguide.FieldPhoneNumberInput.Form';\n\nconst FormComponent = props => React.createElement(FinalForm, Object.assign({}, props, {\n  form: formName,\n  render: fieldRenderProps => {\n    const formId = fieldRenderProps.formId,\n          handleSubmit = fieldRenderProps.handleSubmit,\n          onChange = fieldRenderProps.onChange,\n          invalid = fieldRenderProps.invalid,\n          pristine = fieldRenderProps.pristine,\n          submitting = fieldRenderProps.submitting;\n    const required = validators.required('This field is required');\n    const submitDisabled = invalid || pristine || submitting;\n    return React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleSubmit(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(FormSpy, {\n      onChange: onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(FieldPhoneNumberInput, {\n      id: \"\".concat(formId, \".phoneNumber\"),\n      name: \"phoneNumber\",\n      label: \"Phone number\",\n      placeholder: \"Phone number\",\n      validate: required,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Button, {\n      style: {\n        marginTop: 24\n      },\n      type: \"submit\",\n      disabled: submitDisabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Submit\"));\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}));\n\nexport const PhoneNumber = {\n  component: FormComponent,\n  props: {\n    formId: 'PhoneNumberExample',\n    onChange: formState => {\n      if (formState.dirty) {\n        console.log('form values changed to:', formState.values);\n      }\n    },\n\n    onSubmit(values) {\n      console.log('onSubmit:', values);\n    }\n\n  },\n  group: 'inputs'\n};","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/FieldPhoneNumberInput/FieldPhoneNumberInput.example.js"],"names":["React","Form","FinalForm","FormSpy","validators","Button","FieldPhoneNumberInput","formName","FormComponent","props","fieldRenderProps","formId","handleSubmit","onChange","invalid","pristine","submitting","required","submitDisabled","e","preventDefault","marginTop","PhoneNumber","component","formState","dirty","console","log","values","onSubmit","group"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAI,IAAIC,SAAjB,EAA4BC,OAA5B,QAA2C,kBAA3C;AACA,OAAO,KAAKC,UAAZ,MAA4B,uBAA5B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AAEA,MAAMC,QAAQ,GAAG,uCAAjB;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IACzB,oBAAC,SAAD,oBACMA,KADN;AAEE,EAAA,IAAI,EAAEF,QAFR;AAGE,EAAA,MAAM,EAAEG,gBAAgB,IAAI;AAAA,UAClBC,MADkB,GACgDD,gBADhD,CAClBC,MADkB;AAAA,UACVC,YADU,GACgDF,gBADhD,CACVE,YADU;AAAA,UACIC,QADJ,GACgDH,gBADhD,CACIG,QADJ;AAAA,UACcC,OADd,GACgDJ,gBADhD,CACcI,OADd;AAAA,UACuBC,QADvB,GACgDL,gBADhD,CACuBK,QADvB;AAAA,UACiCC,UADjC,GACgDN,gBADhD,CACiCM,UADjC;AAE1B,UAAMC,QAAQ,GAAGb,UAAU,CAACa,QAAX,CAAoB,wBAApB,CAAjB;AACA,UAAMC,cAAc,GAAGJ,OAAO,IAAIC,QAAX,IAAuBC,UAA9C;AACA,WACE;AACE,MAAA,QAAQ,EAAEG,CAAC,IAAI;AACbA,QAAAA,CAAC,CAACC,cAAF;AACAR,QAAAA,YAAY,CAACO,CAAD,CAAZ;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAEN,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE,oBAAC,qBAAD;AACE,MAAA,EAAE,YAAKF,MAAL,iBADJ;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,KAAK,EAAC,cAHR;AAIE,MAAA,WAAW,EAAC,cAJd;AAKE,MAAA,QAAQ,EAAEM,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAcE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEI,QAAAA,SAAS,EAAE;AAAb,OAAf;AAAkC,MAAA,IAAI,EAAC,QAAvC;AAAgD,MAAA,QAAQ,EAAEH,cAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,CADF;AAoBD,GA3BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAgCA,OAAO,MAAMI,WAAW,GAAG;AACzBC,EAAAA,SAAS,EAAEf,aADc;AAEzBC,EAAAA,KAAK,EAAE;AACLE,IAAAA,MAAM,EAAE,oBADH;AAELE,IAAAA,QAAQ,EAAEW,SAAS,IAAI;AACrB,UAAIA,SAAS,CAACC,KAAd,EAAqB;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCH,SAAS,CAACI,MAAjD;AACD;AACF,KANI;;AAOLC,IAAAA,QAAQ,CAACD,MAAD,EAAS;AACfF,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBC,MAAzB;AACD;;AATI,GAFkB;AAazBE,EAAAA,KAAK,EAAE;AAbkB,CAApB","sourcesContent":["import React from 'react';\nimport { Form as FinalForm, FormSpy } from 'react-final-form';\nimport * as validators from '../../util/validators';\nimport { Button } from '../../components';\nimport FieldPhoneNumberInput from './FieldPhoneNumberInput';\n\nconst formName = 'Styleguide.FieldPhoneNumberInput.Form';\n\nconst FormComponent = props => (\n  <FinalForm\n    {...props}\n    form={formName}\n    render={fieldRenderProps => {\n      const { formId, handleSubmit, onChange, invalid, pristine, submitting } = fieldRenderProps;\n      const required = validators.required('This field is required');\n      const submitDisabled = invalid || pristine || submitting;\n      return (\n        <form\n          onSubmit={e => {\n            e.preventDefault();\n            handleSubmit(e);\n          }}\n        >\n          <FormSpy onChange={onChange} />\n          <FieldPhoneNumberInput\n            id={`${formId}.phoneNumber`}\n            name=\"phoneNumber\"\n            label=\"Phone number\"\n            placeholder=\"Phone number\"\n            validate={required}\n          />\n          <Button style={{ marginTop: 24 }} type=\"submit\" disabled={submitDisabled}>\n            Submit\n          </Button>\n        </form>\n      );\n    }}\n  />\n);\n\nexport const PhoneNumber = {\n  component: FormComponent,\n  props: {\n    formId: 'PhoneNumberExample',\n    onChange: formState => {\n      if (formState.dirty) {\n        console.log('form values changed to:', formState.values);\n      }\n    },\n    onSubmit(values) {\n      console.log('onSubmit:', values);\n    },\n  },\n  group: 'inputs',\n};\n"]},"metadata":{},"sourceType":"module"}