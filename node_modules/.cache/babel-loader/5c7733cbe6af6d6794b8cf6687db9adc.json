{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/BookingBreakdown/LineItemUnitsMaybe.js\";\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { LINE_ITEM_UNITS, propTypes } from '../../util/types';\nimport css from './BookingBreakdown.css';\n\nconst LineItemUnitsMaybe = props => {\n  const transaction = props.transaction,\n        unitType = props.unitType;\n\n  if (unitType !== LINE_ITEM_UNITS) {\n    return null;\n  }\n\n  const unitPurchase = transaction.attributes.lineItems.find(item => item.code === unitType && !item.reversal);\n\n  if (!unitPurchase) {\n    throw new Error(\"LineItemUnitsMaybe: lineItem (\".concat(unitType, \") missing\"));\n  }\n\n  const quantity = unitPurchase.quantity;\n  return React.createElement(\"div\", {\n    className: css.lineItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: css.itemLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"BookingBreakdown.quantityUnit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    className: css.itemValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"BookingBreakdown.quantity\",\n    values: {\n      quantity\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })));\n};\n\nLineItemUnitsMaybe.propTypes = {\n  transaction: propTypes.transaction.isRequired,\n  unitType: propTypes.bookingUnitType.isRequired\n};\nexport default LineItemUnitsMaybe;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/BookingBreakdown/LineItemUnitsMaybe.js"],"names":["React","FormattedMessage","LINE_ITEM_UNITS","propTypes","css","LineItemUnitsMaybe","props","transaction","unitType","unitPurchase","attributes","lineItems","find","item","code","reversal","Error","quantity","lineItem","itemLabel","itemValue","isRequired","bookingUnitType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,kBAA3C;AAEA,OAAOC,GAAP,MAAgB,wBAAhB;;AAEA,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAAA,QAC1BC,WAD0B,GACAD,KADA,CAC1BC,WAD0B;AAAA,QACbC,QADa,GACAF,KADA,CACbE,QADa;;AAGlC,MAAIA,QAAQ,KAAKN,eAAjB,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,QAAMO,YAAY,GAAGF,WAAW,CAACG,UAAZ,CAAuBC,SAAvB,CAAiCC,IAAjC,CACnBC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcN,QAAd,IAA0B,CAACK,IAAI,CAACE,QADrB,CAArB;;AAIA,MAAI,CAACN,YAAL,EAAmB;AACjB,UAAM,IAAIO,KAAJ,yCAA2CR,QAA3C,eAAN;AACD;;AAED,QAAMS,QAAQ,GAAGR,YAAY,CAACQ,QAA9B;AAEA,SACE;AAAK,IAAA,SAAS,EAAEb,GAAG,CAACc,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAEd,GAAG,CAACe,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,+BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAM,IAAA,SAAS,EAAEf,GAAG,CAACgB,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,2BAArB;AAAiD,IAAA,MAAM,EAAE;AAAEH,MAAAA;AAAF,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF;AAUD,CA3BD;;AA6BAZ,kBAAkB,CAACF,SAAnB,GAA+B;AAC7BI,EAAAA,WAAW,EAAEJ,SAAS,CAACI,WAAV,CAAsBc,UADN;AAE7Bb,EAAAA,QAAQ,EAAEL,SAAS,CAACmB,eAAV,CAA0BD;AAFP,CAA/B;AAKA,eAAehB,kBAAf","sourcesContent":["import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { LINE_ITEM_UNITS, propTypes } from '../../util/types';\n\nimport css from './BookingBreakdown.css';\n\nconst LineItemUnitsMaybe = props => {\n  const { transaction, unitType } = props;\n\n  if (unitType !== LINE_ITEM_UNITS) {\n    return null;\n  }\n\n  const unitPurchase = transaction.attributes.lineItems.find(\n    item => item.code === unitType && !item.reversal\n  );\n\n  if (!unitPurchase) {\n    throw new Error(`LineItemUnitsMaybe: lineItem (${unitType}) missing`);\n  }\n\n  const quantity = unitPurchase.quantity;\n\n  return (\n    <div className={css.lineItem}>\n      <span className={css.itemLabel}>\n        <FormattedMessage id=\"BookingBreakdown.quantityUnit\" />\n      </span>\n      <span className={css.itemValue}>\n        <FormattedMessage id=\"BookingBreakdown.quantity\" values={{ quantity }} />\n      </span>\n    </div>\n  );\n};\n\nLineItemUnitsMaybe.propTypes = {\n  transaction: propTypes.transaction.isRequired,\n  unitType: propTypes.bookingUnitType.isRequired,\n};\n\nexport default LineItemUnitsMaybe;\n"]},"metadata":{},"sourceType":"module"}