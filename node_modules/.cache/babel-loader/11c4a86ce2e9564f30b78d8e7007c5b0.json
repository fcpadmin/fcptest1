{"ast":null,"code":"import _objectSpread from \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { storableError } from '../../util/errors'; // ================ Action types ================ //\n\nexport const CHANGE_PASSWORD_REQUEST = 'app/PasswordChangePage/CHANGE_PASSWORD_REQUEST';\nexport const CHANGE_PASSWORD_SUCCESS = 'app/PasswordChangePage/CHANGE_PASSWORD_SUCCESS';\nexport const CHANGE_PASSWORD_ERROR = 'app/PasswordChangePage/CHANGE_PASSWORD_ERROR';\nexport const CHANGE_PASSWORD_CLEAR = 'app/PasswordChangePage/CHANGE_PASSWORD_CLEAR'; // ================ Reducer ================ //\n\nconst initialState = {\n  changePasswordError: null,\n  changePasswordInProgress: false,\n  passwordChanged: false\n};\nexport default function reducer(state = initialState, action = {}) {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case CHANGE_PASSWORD_REQUEST:\n      return _objectSpread({}, state, {\n        changePasswordInProgress: true,\n        changePasswordError: null,\n        passwordChanged: false\n      });\n\n    case CHANGE_PASSWORD_SUCCESS:\n      return _objectSpread({}, state, {\n        changePasswordInProgress: false,\n        passwordChanged: true\n      });\n\n    case CHANGE_PASSWORD_ERROR:\n      return _objectSpread({}, state, {\n        changePasswordInProgress: false,\n        changePasswordError: payload\n      });\n\n    case CHANGE_PASSWORD_CLEAR:\n      return _objectSpread({}, initialState);\n\n    default:\n      return state;\n  }\n} // ================ Action creators ================ //\n\nexport const changePasswordRequest = () => ({\n  type: CHANGE_PASSWORD_REQUEST\n});\nexport const changePasswordSuccess = () => ({\n  type: CHANGE_PASSWORD_SUCCESS\n});\nexport const changePasswordError = error => ({\n  type: CHANGE_PASSWORD_ERROR,\n  payload: error,\n  error: true\n});\nexport const changePasswordClear = () => ({\n  type: CHANGE_PASSWORD_CLEAR\n}); // ================ Thunks ================ //\n\nexport const changePassword = params => (dispatch, getState, sdk) => {\n  dispatch(changePasswordRequest());\n  const newPassword = params.newPassword,\n        currentPassword = params.currentPassword;\n  return sdk.currentUser.changePassword({\n    newPassword,\n    currentPassword\n  }).then(() => dispatch(changePasswordSuccess())).catch(e => {\n    dispatch(changePasswordError(storableError(storableError(e)))); // This is thrown so that form can be cleared\n    // after a timeout on changePassword submit handler\n\n    throw e;\n  });\n};","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/containers/PasswordChangePage/PasswordChangePage.duck.js"],"names":["storableError","CHANGE_PASSWORD_REQUEST","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_ERROR","CHANGE_PASSWORD_CLEAR","initialState","changePasswordError","changePasswordInProgress","passwordChanged","reducer","state","action","type","payload","changePasswordRequest","changePasswordSuccess","error","changePasswordClear","changePassword","params","dispatch","getState","sdk","newPassword","currentPassword","currentUser","then","catch","e"],"mappings":";AAAA,SAASA,aAAT,QAA8B,mBAA9B,C,CAEA;;AAEA,OAAO,MAAMC,uBAAuB,GAAG,gDAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,gDAAhC;AACP,OAAO,MAAMC,qBAAqB,GAAG,8CAA9B;AAEP,OAAO,MAAMC,qBAAqB,GAAG,8CAA9B,C,CAEP;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,mBAAmB,EAAE,IADF;AAEnBC,EAAAA,wBAAwB,EAAE,KAFP;AAGnBC,EAAAA,eAAe,EAAE;AAHE,CAArB;AAMA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAGL,YAAzB,EAAuCM,MAAM,GAAG,EAAhD,EAAoD;AAAA,QACzDC,IADyD,GACvCD,MADuC,CACzDC,IADyD;AAAA,QACnDC,OADmD,GACvCF,MADuC,CACnDE,OADmD;;AAEjE,UAAQD,IAAR;AACE,SAAKX,uBAAL;AACE,+BACKS,KADL;AAEEH,QAAAA,wBAAwB,EAAE,IAF5B;AAGED,QAAAA,mBAAmB,EAAE,IAHvB;AAIEE,QAAAA,eAAe,EAAE;AAJnB;;AAMF,SAAKN,uBAAL;AACE,+BAAYQ,KAAZ;AAAmBH,QAAAA,wBAAwB,EAAE,KAA7C;AAAoDC,QAAAA,eAAe,EAAE;AAArE;;AACF,SAAKL,qBAAL;AACE,+BAAYO,KAAZ;AAAmBH,QAAAA,wBAAwB,EAAE,KAA7C;AAAoDD,QAAAA,mBAAmB,EAAEO;AAAzE;;AAEF,SAAKT,qBAAL;AACE,+BAAYC,YAAZ;;AAEF;AACE,aAAOK,KAAP;AAjBJ;AAmBD,C,CAED;;AAEA,OAAO,MAAMI,qBAAqB,GAAG,OAAO;AAAEF,EAAAA,IAAI,EAAEX;AAAR,CAAP,CAA9B;AACP,OAAO,MAAMc,qBAAqB,GAAG,OAAO;AAAEH,EAAAA,IAAI,EAAEV;AAAR,CAAP,CAA9B;AACP,OAAO,MAAMI,mBAAmB,GAAGU,KAAK,KAAK;AAC3CJ,EAAAA,IAAI,EAAET,qBADqC;AAE3CU,EAAAA,OAAO,EAAEG,KAFkC;AAG3CA,EAAAA,KAAK,EAAE;AAHoC,CAAL,CAAjC;AAMP,OAAO,MAAMC,mBAAmB,GAAG,OAAO;AAAEL,EAAAA,IAAI,EAAER;AAAR,CAAP,CAA5B,C,CAEP;;AAEA,OAAO,MAAMc,cAAc,GAAGC,MAAM,IAAI,CAACC,QAAD,EAAWC,QAAX,EAAqBC,GAArB,KAA6B;AACnEF,EAAAA,QAAQ,CAACN,qBAAqB,EAAtB,CAAR;AADmE,QAE3DS,WAF2D,GAE1BJ,MAF0B,CAE3DI,WAF2D;AAAA,QAE9CC,eAF8C,GAE1BL,MAF0B,CAE9CK,eAF8C;AAInE,SAAOF,GAAG,CAACG,WAAJ,CACJP,cADI,CACW;AAAEK,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GADX,EAEJE,IAFI,CAEC,MAAMN,QAAQ,CAACL,qBAAqB,EAAtB,CAFf,EAGJY,KAHI,CAGEC,CAAC,IAAI;AACVR,IAAAA,QAAQ,CAACd,mBAAmB,CAACN,aAAa,CAACA,aAAa,CAAC4B,CAAD,CAAd,CAAd,CAApB,CAAR,CADU,CAEV;AACA;;AACA,UAAMA,CAAN;AACD,GARI,CAAP;AASD,CAbM","sourcesContent":["import { storableError } from '../../util/errors';\n\n// ================ Action types ================ //\n\nexport const CHANGE_PASSWORD_REQUEST = 'app/PasswordChangePage/CHANGE_PASSWORD_REQUEST';\nexport const CHANGE_PASSWORD_SUCCESS = 'app/PasswordChangePage/CHANGE_PASSWORD_SUCCESS';\nexport const CHANGE_PASSWORD_ERROR = 'app/PasswordChangePage/CHANGE_PASSWORD_ERROR';\n\nexport const CHANGE_PASSWORD_CLEAR = 'app/PasswordChangePage/CHANGE_PASSWORD_CLEAR';\n\n// ================ Reducer ================ //\n\nconst initialState = {\n  changePasswordError: null,\n  changePasswordInProgress: false,\n  passwordChanged: false,\n};\n\nexport default function reducer(state = initialState, action = {}) {\n  const { type, payload } = action;\n  switch (type) {\n    case CHANGE_PASSWORD_REQUEST:\n      return {\n        ...state,\n        changePasswordInProgress: true,\n        changePasswordError: null,\n        passwordChanged: false,\n      };\n    case CHANGE_PASSWORD_SUCCESS:\n      return { ...state, changePasswordInProgress: false, passwordChanged: true };\n    case CHANGE_PASSWORD_ERROR:\n      return { ...state, changePasswordInProgress: false, changePasswordError: payload };\n\n    case CHANGE_PASSWORD_CLEAR:\n      return { ...initialState };\n\n    default:\n      return state;\n  }\n}\n\n// ================ Action creators ================ //\n\nexport const changePasswordRequest = () => ({ type: CHANGE_PASSWORD_REQUEST });\nexport const changePasswordSuccess = () => ({ type: CHANGE_PASSWORD_SUCCESS });\nexport const changePasswordError = error => ({\n  type: CHANGE_PASSWORD_ERROR,\n  payload: error,\n  error: true,\n});\n\nexport const changePasswordClear = () => ({ type: CHANGE_PASSWORD_CLEAR });\n\n// ================ Thunks ================ //\n\nexport const changePassword = params => (dispatch, getState, sdk) => {\n  dispatch(changePasswordRequest());\n  const { newPassword, currentPassword } = params;\n\n  return sdk.currentUser\n    .changePassword({ newPassword, currentPassword })\n    .then(() => dispatch(changePasswordSuccess()))\n    .catch(e => {\n      dispatch(changePasswordError(storableError(storableError(e))));\n      // This is thrown so that form can be cleared\n      // after a timeout on changePassword submit handler\n      throw e;\n    });\n};\n"]},"metadata":{},"sourceType":"module"}