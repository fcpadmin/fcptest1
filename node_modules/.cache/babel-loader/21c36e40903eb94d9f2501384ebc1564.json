{"ast":null,"code":"import * as custom from './marketplace-custom-config.js';\nimport defaultLocationSearches from './default-location-searches';\nimport { stripePublishableKey, stripeSupportedCountries } from './stripe-config';\nimport { currencyConfiguration } from './currency-config';\nconst env = process.env.REACT_APP_ENV;\nconst dev = process.env.REACT_APP_ENV === 'development'; // If you want to change the language, remember to also change the\n// locale data and the messages in the app.js file.\n\nconst locale = 'en';\nconst i18n = {\n  /*\n    0: Sunday\n    1: Monday\n    ...\n    6: Saturday\n  */\n  firstDayOfWeek: 0\n}; // Should search results be ordered by distance to origin.\n// NOTE: If this is set to true add parameter 'origin' to every location in default-location-searches.js\n// Without the 'origin' parameter, search will not work correctly\n\nconst sortSearchByDistance = false; // API supports custom processes to be used in booking process.\n// We need to specify it when we are initiating a new order\n// (or fetching price information by calling 'initiateSpeculative' endpoint).\n//\n// In a way, 'processAlias' defines which transaction process (or processes)\n// this particular web application is able to handle.\n\nconst bookingProcessAlias = 'preauth-with-nightly-booking/release-1'; // The transaction line item code for the main unit type in bookings.\n//\n// Possible values: ['line-item/night', 'line-item/day', 'line-item/units';]\n//\n// Note: translations will use different translation keys for night, day or unit\n// depending on the value chosen.\n\nconst bookingUnitType = 'line-item/night'; // Should the application fetch available time slots (currently defined as\n// start and end dates) to be shown on listing page.\n\nconst enableAvailability = process.env.REACT_APP_AVAILABILITY_ENABLED === 'true'; // A maximum number of days forwards during which a booking can be made.\n// This is limited due to Stripe holding funds up to 90 days from the\n// moment they are charged. Also note that available time slots can only\n// be fetched for 180 days in the future.\n\nconst dayCountAvailableForBooking = 90; // To pass environment variables to the client app in the build\n// script, react-scripts (and the sharetribe-scripts fork of\n// react-scripts) require using the REACT_APP_ prefix to avoid\n// exposing server secrets to the client side.\n\nconst sdkClientId = process.env.REACT_APP_SHARETRIBE_SDK_CLIENT_ID;\nconst sdkBaseUrl = process.env.REACT_APP_SHARETRIBE_SDK_BASE_URL;\nconst sdkTransitVerbose = process.env.REACT_APP_SHARETRIBE_SDK_TRANSIT_VERBOSE === 'true';\nconst currency = process.env.REACT_APP_SHARETRIBE_MARKETPLACE_CURRENCY; // Currency formatting options.\n// See: https://github.com/yahoo/react-intl/wiki/API#formatnumber\n\nconst currencyConfig = currencyConfiguration(currency); // Listing minimum price in currency sub units, e.g. cents.\n// 0 means no restriction to the price\n\nconst listingMinimumPriceSubUnits = 0; // Sentry DSN (Data Source Name), a client key for authenticating calls to Sentry\n\nconst sentryDsn = process.env.REACT_APP_SENTRY_DSN; // If webapp is using SSL (i.e. it's behind 'https' protocol)\n\nconst usingSSL = process.env.REACT_APP_SHARETRIBE_USING_SSL === 'true'; // Address information is used in SEO schema for Organization (http://schema.org/PostalAddress)\n\nconst addressCountry = 'US';\nconst addressRegion = 'IL';\nconst postalCode = '60608';\nconst streetAddress = 'TBD'; // Canonical root url is needed in social media sharing and SEO optimization purposes.\n\nconst canonicalRootURL = process.env.REACT_APP_CANONICAL_ROOT_URL; // Site title is needed in meta tags (bots and social media sharing reads those)\n\nconst siteTitle = 'FCP'; // Twitter handle is needed in meta tags (twitter:site). Start it with '@' character\n\nconst siteTwitterHandle = '@sharetribe'; // Instagram page is used in SEO schema (http://schema.org/Organization)\n\nconst siteInstagramPage = null; // Facebook page is used in SEO schema (http://schema.org/Organization)\n\nconst siteFacebookPage = 'https://www.facebook.com/Sharetribe/'; // Facebook counts shares with app or page associated by this id\n// Currently it is unset, but you can read more about fb:app_id from\n// https://developers.facebook.com/docs/sharing/webmasters#basic\n// You should create one to track social sharing in Facebook\n\nconst facebookAppId = null;\nconst maps = {\n  mapboxAccessToken: process.env.REACT_APP_MAPBOX_ACCESS_TOKEN,\n  googleMapsAPIKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n  // The location search input can be configured to show default\n  // searches when the user focuses on the input and hasn't yet typed\n  // anything. This reduces typing and avoids too many Geolocation API\n  // calls for common searches.\n  search: {\n    // When enabled, the first suggestion is \"Current location\" that\n    // uses the browser Geolocation API to query the user's current\n    // location.\n    suggestCurrentLocation: process.env.REACT_APP_DEFAULT_SEARCHES_ENABLED === 'true',\n    // Distance in meters for calculating the bounding box around the\n    // current location.\n    currentLocationBoundsDistance: 1000,\n    // Example location can be edited in the\n    // `default-location-searches.js` file.\n    defaults: process.env.REACT_APP_DEFAULT_SEARCHES_ENABLED === 'true' ? defaultLocationSearches : [],\n    // Limit location autocomplete to a one or more countries\n    // using ISO 3166 alpha 2 country codes separated by commas.\n    // If you want to limit the autocomplete, uncomment this value:\n    countryLimit: ['US']\n  },\n  // When fuzzy locations are enabled, coordinates on maps are\n  // obfuscated randomly around the actual location.\n  //\n  // NOTE: This only hides the locations in the UI level, the actual\n  // coordinates are still accessible in the HTTP requests and the\n  // Redux store.\n  fuzzy: {\n    enabled: false,\n    // Amount of maximum offset in meters that is applied to obfuscate\n    // the original coordinates. The actual value is random, but the\n    // obfuscated coordinates are withing a circle that has the same\n    // radius as the offset.\n    offset: 500,\n    // Default zoom level when showing a single circle on a Map. Should\n    // be small enough so the whole circle fits in.\n    defaultZoomLevel: 13,\n    // Color of the circle on the Map component.\n    circleColor: '#c0392b'\n  },\n  // Custom marker image to use in the Map component.\n  //\n  // NOTE: Not used if fuzzy locations are enabled.\n  customMarker: {\n    enabled: false,\n    // Publicly accessible URL for the custom marker image.\n    //\n    // The easiest place is /public/static/icons/ folder, but then the\n    // marker image is not available while developing through\n    // localhost.\n    url: encodeURI(\"\".concat(canonicalRootURL, \"/static/icons/map-marker-32x32.png\")),\n    // Dimensions of the marker image.\n    width: 32,\n    height: 32,\n    // Position to anchor the image in relation to the coordinates,\n    // ignored when using Mapbox.\n    anchorX: 16,\n    anchorY: 32\n  }\n}; // NOTE: only expose configuration that should be visible in the\n// client side, don't add any server secrets in this file.\n\nconst config = {\n  env,\n  dev,\n  locale,\n  bookingProcessAlias,\n  bookingUnitType,\n  enableAvailability,\n  dayCountAvailableForBooking,\n  i18n,\n  sdk: {\n    clientId: sdkClientId,\n    baseUrl: sdkBaseUrl,\n    transitVerbose: sdkTransitVerbose\n  },\n  sortSearchByDistance,\n  currency,\n  currencyConfig,\n  listingMinimumPriceSubUnits,\n  stripe: {\n    publishableKey: stripePublishableKey,\n    supportedCountries: stripeSupportedCountries\n  },\n  canonicalRootURL,\n  address: {\n    addressCountry,\n    addressRegion,\n    postalCode,\n    streetAddress\n  },\n  siteTitle,\n  siteFacebookPage,\n  siteInstagramPage,\n  siteTwitterHandle,\n  facebookAppId,\n  sentryDsn,\n  usingSSL,\n  maps,\n  custom\n};\nexport default config;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/config.js"],"names":["custom","defaultLocationSearches","stripePublishableKey","stripeSupportedCountries","currencyConfiguration","env","process","REACT_APP_ENV","dev","locale","i18n","firstDayOfWeek","sortSearchByDistance","bookingProcessAlias","bookingUnitType","enableAvailability","REACT_APP_AVAILABILITY_ENABLED","dayCountAvailableForBooking","sdkClientId","REACT_APP_SHARETRIBE_SDK_CLIENT_ID","sdkBaseUrl","REACT_APP_SHARETRIBE_SDK_BASE_URL","sdkTransitVerbose","REACT_APP_SHARETRIBE_SDK_TRANSIT_VERBOSE","currency","REACT_APP_SHARETRIBE_MARKETPLACE_CURRENCY","currencyConfig","listingMinimumPriceSubUnits","sentryDsn","REACT_APP_SENTRY_DSN","usingSSL","REACT_APP_SHARETRIBE_USING_SSL","addressCountry","addressRegion","postalCode","streetAddress","canonicalRootURL","REACT_APP_CANONICAL_ROOT_URL","siteTitle","siteTwitterHandle","siteInstagramPage","siteFacebookPage","facebookAppId","maps","mapboxAccessToken","REACT_APP_MAPBOX_ACCESS_TOKEN","googleMapsAPIKey","REACT_APP_GOOGLE_MAPS_API_KEY","search","suggestCurrentLocation","REACT_APP_DEFAULT_SEARCHES_ENABLED","currentLocationBoundsDistance","defaults","countryLimit","fuzzy","enabled","offset","defaultZoomLevel","circleColor","customMarker","url","encodeURI","width","height","anchorX","anchorY","config","sdk","clientId","baseUrl","transitVerbose","stripe","publishableKey","supportedCountries","address"],"mappings":"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","sourcesContent":["import * as custom from './marketplace-custom-config.js';\nimport defaultLocationSearches from './default-location-searches';\nimport { stripePublishableKey, stripeSupportedCountries } from './stripe-config';\nimport { currencyConfiguration } from './currency-config';\n\nconst env = process.env.REACT_APP_ENV;\nconst dev = process.env.REACT_APP_ENV === 'development';\n\n// If you want to change the language, remember to also change the\n// locale data and the messages in the app.js file.\nconst locale = 'en';\nconst i18n = {\n  /*\n    0: Sunday\n    1: Monday\n    ...\n    6: Saturday\n  */\n  firstDayOfWeek: 0,\n};\n\n// Should search results be ordered by distance to origin.\n// NOTE: If this is set to true add parameter 'origin' to every location in default-location-searches.js\n// Without the 'origin' parameter, search will not work correctly\nconst sortSearchByDistance = false;\n\n// API supports custom processes to be used in booking process.\n// We need to specify it when we are initiating a new order\n// (or fetching price information by calling 'initiateSpeculative' endpoint).\n//\n// In a way, 'processAlias' defines which transaction process (or processes)\n// this particular web application is able to handle.\nconst bookingProcessAlias = 'preauth-with-nightly-booking/release-1';\n\n// The transaction line item code for the main unit type in bookings.\n//\n// Possible values: ['line-item/night', 'line-item/day', 'line-item/units';]\n//\n// Note: translations will use different translation keys for night, day or unit\n// depending on the value chosen.\nconst bookingUnitType = 'line-item/night';\n\n// Should the application fetch available time slots (currently defined as\n// start and end dates) to be shown on listing page.\nconst enableAvailability = process.env.REACT_APP_AVAILABILITY_ENABLED === 'true';\n\n// A maximum number of days forwards during which a booking can be made.\n// This is limited due to Stripe holding funds up to 90 days from the\n// moment they are charged. Also note that available time slots can only\n// be fetched for 180 days in the future.\nconst dayCountAvailableForBooking = 90;\n\n// To pass environment variables to the client app in the build\n// script, react-scripts (and the sharetribe-scripts fork of\n// react-scripts) require using the REACT_APP_ prefix to avoid\n// exposing server secrets to the client side.\nconst sdkClientId = process.env.REACT_APP_SHARETRIBE_SDK_CLIENT_ID;\nconst sdkBaseUrl = process.env.REACT_APP_SHARETRIBE_SDK_BASE_URL;\nconst sdkTransitVerbose = process.env.REACT_APP_SHARETRIBE_SDK_TRANSIT_VERBOSE === 'true';\n\nconst currency = process.env.REACT_APP_SHARETRIBE_MARKETPLACE_CURRENCY;\n\n// Currency formatting options.\n// See: https://github.com/yahoo/react-intl/wiki/API#formatnumber\nconst currencyConfig = currencyConfiguration(currency);\n\n// Listing minimum price in currency sub units, e.g. cents.\n// 0 means no restriction to the price\nconst listingMinimumPriceSubUnits = 0;\n\n// Sentry DSN (Data Source Name), a client key for authenticating calls to Sentry\nconst sentryDsn = process.env.REACT_APP_SENTRY_DSN;\n\n// If webapp is using SSL (i.e. it's behind 'https' protocol)\nconst usingSSL = process.env.REACT_APP_SHARETRIBE_USING_SSL === 'true';\n\n// Address information is used in SEO schema for Organization (http://schema.org/PostalAddress)\nconst addressCountry = 'US';\nconst addressRegion = 'IL';\nconst postalCode = '60608';\nconst streetAddress = 'TBD';\n\n// Canonical root url is needed in social media sharing and SEO optimization purposes.\nconst canonicalRootURL = process.env.REACT_APP_CANONICAL_ROOT_URL;\n\n// Site title is needed in meta tags (bots and social media sharing reads those)\nconst siteTitle = 'FCP';\n\n// Twitter handle is needed in meta tags (twitter:site). Start it with '@' character\nconst siteTwitterHandle = '@sharetribe';\n\n// Instagram page is used in SEO schema (http://schema.org/Organization)\nconst siteInstagramPage = null;\n\n// Facebook page is used in SEO schema (http://schema.org/Organization)\nconst siteFacebookPage = 'https://www.facebook.com/Sharetribe/';\n\n// Facebook counts shares with app or page associated by this id\n// Currently it is unset, but you can read more about fb:app_id from\n// https://developers.facebook.com/docs/sharing/webmasters#basic\n// You should create one to track social sharing in Facebook\nconst facebookAppId = null;\n\nconst maps = {\n  mapboxAccessToken: process.env.REACT_APP_MAPBOX_ACCESS_TOKEN,\n  googleMapsAPIKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n\n  // The location search input can be configured to show default\n  // searches when the user focuses on the input and hasn't yet typed\n  // anything. This reduces typing and avoids too many Geolocation API\n  // calls for common searches.\n  search: {\n    // When enabled, the first suggestion is \"Current location\" that\n    // uses the browser Geolocation API to query the user's current\n    // location.\n    suggestCurrentLocation: process.env.REACT_APP_DEFAULT_SEARCHES_ENABLED === 'true',\n\n    // Distance in meters for calculating the bounding box around the\n    // current location.\n    currentLocationBoundsDistance: 1000,\n\n    // Example location can be edited in the\n    // `default-location-searches.js` file.\n    defaults:\n      process.env.REACT_APP_DEFAULT_SEARCHES_ENABLED === 'true' ? defaultLocationSearches : [],\n\n    // Limit location autocomplete to a one or more countries\n    // using ISO 3166 alpha 2 country codes separated by commas.\n    // If you want to limit the autocomplete, uncomment this value:\n    countryLimit: ['US'],\n  },\n\n  // When fuzzy locations are enabled, coordinates on maps are\n  // obfuscated randomly around the actual location.\n  //\n  // NOTE: This only hides the locations in the UI level, the actual\n  // coordinates are still accessible in the HTTP requests and the\n  // Redux store.\n  fuzzy: {\n    enabled: false,\n\n    // Amount of maximum offset in meters that is applied to obfuscate\n    // the original coordinates. The actual value is random, but the\n    // obfuscated coordinates are withing a circle that has the same\n    // radius as the offset.\n    offset: 500,\n\n    // Default zoom level when showing a single circle on a Map. Should\n    // be small enough so the whole circle fits in.\n    defaultZoomLevel: 13,\n\n    // Color of the circle on the Map component.\n    circleColor: '#c0392b',\n  },\n\n  // Custom marker image to use in the Map component.\n  //\n  // NOTE: Not used if fuzzy locations are enabled.\n  customMarker: {\n    enabled: false,\n\n    // Publicly accessible URL for the custom marker image.\n    //\n    // The easiest place is /public/static/icons/ folder, but then the\n    // marker image is not available while developing through\n    // localhost.\n    url: encodeURI(`${canonicalRootURL}/static/icons/map-marker-32x32.png`),\n\n    // Dimensions of the marker image.\n    width: 32,\n    height: 32,\n\n    // Position to anchor the image in relation to the coordinates,\n    // ignored when using Mapbox.\n    anchorX: 16,\n    anchorY: 32,\n  },\n};\n\n// NOTE: only expose configuration that should be visible in the\n// client side, don't add any server secrets in this file.\nconst config = {\n  env,\n  dev,\n  locale,\n  bookingProcessAlias,\n  bookingUnitType,\n  enableAvailability,\n  dayCountAvailableForBooking,\n  i18n,\n  sdk: {\n    clientId: sdkClientId,\n    baseUrl: sdkBaseUrl,\n    transitVerbose: sdkTransitVerbose,\n  },\n  sortSearchByDistance,\n  currency,\n  currencyConfig,\n  listingMinimumPriceSubUnits,\n  stripe: {\n    publishableKey: stripePublishableKey,\n    supportedCountries: stripeSupportedCountries,\n  },\n  canonicalRootURL,\n  address: {\n    addressCountry,\n    addressRegion,\n    postalCode,\n    streetAddress,\n  },\n  siteTitle,\n  siteFacebookPage,\n  siteInstagramPage,\n  siteTwitterHandle,\n  facebookAppId,\n  sentryDsn,\n  usingSSL,\n  maps,\n  custom,\n};\n\nexport default config;\n"]},"metadata":{},"sourceType":"module"}