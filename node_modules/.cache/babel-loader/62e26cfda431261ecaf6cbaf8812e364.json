{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/forms/PayoutDetailsForm/PayoutDetailsBusinessProfile.js\";\nimport React from 'react';\nimport { bool, string } from 'prop-types';\nimport { intlShape } from 'react-intl';\nimport * as validators from '../../util/validators';\nimport { FieldSelect, FieldTextInput } from '../../components';\nimport merchantCategoryCodesUS from './merchantCategoryCodesUS';\nimport css from './PayoutDetailsForm.css';\n\nconst PayoutDetailsBusinessProfile = props => {\n  const fieldId = props.fieldId,\n        disabled = props.disabled,\n        intl = props.intl,\n        showBusinessURLField = props.showBusinessURLField,\n        showMCCForUSField = props.showMCCForUSField;\n  const isBusinessProfileNeeded = showBusinessURLField || showMCCForUSField;\n  const mccLabel = intl.formatMessage({\n    id: 'PayoutDetailsForm.businessMCCForUSLabel'\n  });\n  const mccPlaceholder = intl.formatMessage({\n    id: 'PayoutDetailsForm.businessMCCForUSPlaceholder'\n  });\n  const mccRequired = validators.required(intl.formatMessage({\n    id: 'PayoutDetailsForm.businessMCCForUSRequired'\n  }));\n  const businessUrlLabel = intl.formatMessage({\n    id: 'PayoutDetailsForm.businessURLLabel'\n  });\n  const businessUrlPlaceholder = intl.formatMessage({\n    id: 'PayoutDetailsForm.businessURLPlaceholder'\n  });\n  const businessUrlRequired = validators.validBusinessURL(intl.formatMessage({\n    id: 'PayoutDetailsForm.businessURLRequired'\n  }));\n  return isBusinessProfileNeeded ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, showMCCForUSField ? React.createElement(FieldSelect, {\n    id: \"\".concat(fieldId, \".mcc\"),\n    name: \"\".concat(fieldId, \".mcc\"),\n    className: css.selectMCC,\n    autoComplete: \"mcc\",\n    disabled: disabled,\n    label: mccLabel,\n    validate: mccRequired,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    disabled: true,\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, mccPlaceholder), merchantCategoryCodesUS.map(merchantCategory => React.createElement(\"option\", {\n    key: merchantCategory.category,\n    value: merchantCategory.mcc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, merchantCategory.label))) : null, showBusinessURLField ? React.createElement(FieldTextInput, {\n    id: \"\".concat(fieldId, \".url\"),\n    name: \"\".concat(fieldId, \".url\"),\n    className: css.textInputRow,\n    autoComplete: \"url\",\n    disabled: disabled,\n    label: businessUrlLabel,\n    placeholder: businessUrlPlaceholder,\n    type: \"text\",\n    validate: businessUrlRequired,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }) : null) : null;\n};\n\nPayoutDetailsBusinessProfile.defaultProps = {\n  fieldId: null,\n  disabled: false,\n  showBusinessURLField: false,\n  showMCCForUSField: false\n};\nPayoutDetailsBusinessProfile.propTypes = {\n  fieldId: string,\n  disabled: bool,\n  showBusinessURLField: bool,\n  showMCCForUSField: bool,\n  // from injectIntl\n  intl: intlShape.isRequired\n};\nexport default PayoutDetailsBusinessProfile;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/forms/PayoutDetailsForm/PayoutDetailsBusinessProfile.js"],"names":["React","bool","string","intlShape","validators","FieldSelect","FieldTextInput","merchantCategoryCodesUS","css","PayoutDetailsBusinessProfile","props","fieldId","disabled","intl","showBusinessURLField","showMCCForUSField","isBusinessProfileNeeded","mccLabel","formatMessage","id","mccPlaceholder","mccRequired","required","businessUrlLabel","businessUrlPlaceholder","businessUrlRequired","validBusinessURL","selectMCC","map","merchantCategory","category","mcc","label","textInputRow","defaultProps","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { bool, string } from 'prop-types';\nimport { intlShape } from 'react-intl';\nimport * as validators from '../../util/validators';\nimport { FieldSelect, FieldTextInput } from '../../components';\n\nimport merchantCategoryCodesUS from './merchantCategoryCodesUS';\nimport css from './PayoutDetailsForm.css';\n\nconst PayoutDetailsBusinessProfile = props => {\n  const { fieldId, disabled, intl, showBusinessURLField, showMCCForUSField } = props;\n\n  const isBusinessProfileNeeded = showBusinessURLField || showMCCForUSField;\n  const mccLabel = intl.formatMessage({ id: 'PayoutDetailsForm.businessMCCForUSLabel' });\n  const mccPlaceholder = intl.formatMessage({\n    id: 'PayoutDetailsForm.businessMCCForUSPlaceholder',\n  });\n  const mccRequired = validators.required(\n    intl.formatMessage({ id: 'PayoutDetailsForm.businessMCCForUSRequired' })\n  );\n\n  const businessUrlLabel = intl.formatMessage({ id: 'PayoutDetailsForm.businessURLLabel' });\n  const businessUrlPlaceholder = intl.formatMessage({\n    id: 'PayoutDetailsForm.businessURLPlaceholder',\n  });\n\n  const businessUrlRequired = validators.validBusinessURL(\n    intl.formatMessage({ id: 'PayoutDetailsForm.businessURLRequired' })\n  );\n\n  return isBusinessProfileNeeded ? (\n    <React.Fragment>\n      {showMCCForUSField ? (\n        <FieldSelect\n          id={`${fieldId}.mcc`}\n          name={`${fieldId}.mcc`}\n          className={css.selectMCC}\n          autoComplete=\"mcc\"\n          disabled={disabled}\n          label={mccLabel}\n          validate={mccRequired}\n        >\n          <option disabled value=\"\">\n            {mccPlaceholder}\n          </option>\n          {merchantCategoryCodesUS.map(merchantCategory => (\n            <option key={merchantCategory.category} value={merchantCategory.mcc}>\n              {merchantCategory.label}\n            </option>\n          ))}\n        </FieldSelect>\n      ) : null}\n\n      {showBusinessURLField ? (\n        <FieldTextInput\n          id={`${fieldId}.url`}\n          name={`${fieldId}.url`}\n          className={css.textInputRow}\n          autoComplete=\"url\"\n          disabled={disabled}\n          label={businessUrlLabel}\n          placeholder={businessUrlPlaceholder}\n          type=\"text\"\n          validate={businessUrlRequired}\n        />\n      ) : null}\n    </React.Fragment>\n  ) : null;\n};\n\nPayoutDetailsBusinessProfile.defaultProps = {\n  fieldId: null,\n  disabled: false,\n  showBusinessURLField: false,\n  showMCCForUSField: false,\n};\n\nPayoutDetailsBusinessProfile.propTypes = {\n  fieldId: string,\n  disabled: bool,\n  showBusinessURLField: bool,\n  showMCCForUSField: bool,\n\n  // from injectIntl\n  intl: intlShape.isRequired,\n};\n\nexport default PayoutDetailsBusinessProfile;\n"]},"metadata":{},"sourceType":"module"}