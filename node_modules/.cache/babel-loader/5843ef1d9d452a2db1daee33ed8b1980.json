{"ast":null,"code":"import _objectSpread from \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/forms/PriceFilterForm/PriceFilterForm.js\";\nimport React from 'react';\nimport { bool, func, number, object, string } from 'prop-types';\nimport classNames from 'classnames';\nimport debounce from 'lodash/debounce';\nimport { Field, Form as FinalForm, FormSpy } from 'react-final-form';\nimport { injectIntl, intlShape, FormattedMessage } from 'react-intl';\nimport { Form, RangeSlider } from '../../components';\nimport css from './PriceFilterForm.css';\nconst DEBOUNCE_WAIT_TIME = 400; // Helper function to parse value for min handle\n// Value needs to be between slider's minimum value and current maximum value\n\nconst parseMin = (min, currentMax) => value => {\n  if (isNaN(value)) {\n    return min;\n  }\n\n  const parsedValue = Number.parseInt(value, 10);\n  return parsedValue < min ? min : parsedValue > currentMax ? currentMax : parsedValue;\n}; // Helper function to parse value for max handle\n// Value needs to be between slider's max value and current minimum value\n\n\nconst parseMax = (max, currentMin) => value => {\n  if (isNaN(value)) {\n    return max;\n  }\n\n  const parsedValue = Number.parseInt(value, 10);\n  return parsedValue < currentMin ? currentMin : parsedValue > max ? max : parsedValue;\n}; // PriceFilterForm component\n\n\nconst PriceFilterFormComponent = props => {\n  const liveEdit = props.liveEdit,\n        onChange = props.onChange,\n        onSubmit = props.onSubmit,\n        onCancel = props.onCancel,\n        onClear = props.onClear,\n        rest = _objectWithoutProperties(props, [\"liveEdit\", \"onChange\", \"onSubmit\", \"onCancel\", \"onClear\"]);\n\n  if (liveEdit && !onChange) {\n    throw new Error('PriceFilterForm: if liveEdit is true you need to provide onChange function');\n  }\n\n  if (!liveEdit && !(onCancel && onClear && onSubmit)) {\n    throw new Error('PriceFilterForm: if liveEdit is false you need to provide onCancel, onClear, and onSubmit functions');\n  }\n\n  const handleChange = debounce(formState => {\n    if (formState.dirty) {\n      onChange(formState.values);\n    }\n  }, DEBOUNCE_WAIT_TIME, {\n    leading: false,\n    trailing: true\n  });\n  const formCallbacks = liveEdit ? {\n    onSubmit: () => null\n  } : {\n    onSubmit,\n    onCancel,\n    onClear\n  };\n  return React.createElement(FinalForm, Object.assign({}, rest, formCallbacks, {\n    render: formRenderProps => {\n      const form = formRenderProps.form,\n            handleSubmit = formRenderProps.handleSubmit,\n            id = formRenderProps.id,\n            showAsPopup = formRenderProps.showAsPopup,\n            onClear = formRenderProps.onClear,\n            onCancel = formRenderProps.onCancel,\n            isOpen = formRenderProps.isOpen,\n            contentRef = formRenderProps.contentRef,\n            style = formRenderProps.style,\n            intl = formRenderProps.intl,\n            values = formRenderProps.values,\n            min = formRenderProps.min,\n            max = formRenderProps.max,\n            step = formRenderProps.step;\n      const minPrice = values.minPrice,\n            maxPrice = values.maxPrice;\n\n      const handleCancel = () => {\n        // reset the final form to initialValues\n        form.reset();\n        onCancel();\n      };\n\n      const clear = intl.formatMessage({\n        id: 'PriceFilterForm.clear'\n      });\n      const cancel = intl.formatMessage({\n        id: 'PriceFilterForm.cancel'\n      });\n      const submit = intl.formatMessage({\n        id: 'PriceFilterForm.submit'\n      });\n      const classes = classNames(css.root, {\n        [css.popup]: showAsPopup,\n        [css.isOpenAsPopup]: showAsPopup && isOpen,\n        [css.plain]: !showAsPopup,\n        [css.isOpen]: !showAsPopup && isOpen\n      });\n      return React.createElement(Form, {\n        className: classes,\n        onSubmit: handleSubmit,\n        tabIndex: \"0\",\n        contentRef: contentRef,\n        style: _objectSpread({\n          minWidth: '300px'\n        }, style),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: css.contentWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: css.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"PriceFilterForm.label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: css.inputsWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Field, {\n        className: css.minPrice,\n        id: \"\".concat(id, \".minPrice\"),\n        name: \"minPrice\",\n        component: \"input\",\n        type: \"number\",\n        placeholder: min,\n        min: min,\n        max: max,\n        step: step,\n        parse: parseMin(min, maxPrice),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: css.priceSeparator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"-\"), React.createElement(Field, {\n        className: css.maxPrice,\n        id: \"\".concat(id, \".maxPrice\"),\n        name: \"maxPrice\",\n        component: \"input\",\n        type: \"number\",\n        placeholder: max,\n        min: min,\n        max: max,\n        step: step,\n        parse: parseMax(max, minPrice),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: css.sliderWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(RangeSlider, {\n        min: min,\n        max: max,\n        step: step,\n        handles: [minPrice, maxPrice],\n        onChange: handles => {\n          form.change('minPrice', handles[0]);\n          form.change('maxPrice', handles[1]);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })), liveEdit ? React.createElement(FormSpy, {\n        onChange: handleChange,\n        subscription: {\n          values: true,\n          dirty: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        className: css.buttonsWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: css.clearButton,\n        type: \"button\",\n        onClick: onClear,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, clear), React.createElement(\"button\", {\n        className: css.cancelButton,\n        type: \"button\",\n        onClick: handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, cancel), React.createElement(\"button\", {\n        className: css.submitButton,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, submit)));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n};\n\nPriceFilterFormComponent.defaultProps = {\n  liveEdit: false,\n  showAsPopup: false,\n  isOpen: false,\n  contentRef: null,\n  style: null,\n  min: 0,\n  step: 1,\n  onCancel: null,\n  onChange: null,\n  onClear: null,\n  onSubmit: null\n};\nPriceFilterFormComponent.propTypes = {\n  id: string.isRequired,\n  liveEdit: bool,\n  showAsPopup: bool,\n  onCancel: func,\n  onChange: func,\n  onClear: func,\n  onSubmit: func,\n  isOpen: bool,\n  contentRef: func,\n  style: object,\n  min: number.isRequired,\n  max: number.isRequired,\n  step: number,\n  // form injectIntl\n  intl: intlShape.isRequired\n};\nconst PriceFilterForm = injectIntl(PriceFilterFormComponent);\nexport default PriceFilterForm;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/forms/PriceFilterForm/PriceFilterForm.js"],"names":["React","bool","func","number","object","string","classNames","debounce","Field","Form","FinalForm","FormSpy","injectIntl","intlShape","FormattedMessage","RangeSlider","css","DEBOUNCE_WAIT_TIME","parseMin","min","currentMax","value","isNaN","parsedValue","Number","parseInt","parseMax","max","currentMin","PriceFilterFormComponent","props","liveEdit","onChange","onSubmit","onCancel","onClear","rest","Error","handleChange","formState","dirty","values","leading","trailing","formCallbacks","formRenderProps","form","handleSubmit","id","showAsPopup","isOpen","contentRef","style","intl","step","minPrice","maxPrice","handleCancel","reset","clear","formatMessage","cancel","submit","classes","root","popup","isOpenAsPopup","plain","minWidth","contentWrapper","label","inputsWrapper","priceSeparator","sliderWrapper","handles","change","buttonsWrapper","clearButton","cancelButton","submitButton","defaultProps","propTypes","isRequired","PriceFilterForm"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,MAA7B,EAAqCC,MAArC,QAAmD,YAAnD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,KAAT,EAAgBC,IAAI,IAAIC,SAAxB,EAAmCC,OAAnC,QAAkD,kBAAlD;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,gBAAhC,QAAwD,YAAxD;AAEA,SAASL,IAAT,EAAeM,WAAf,QAAkC,kBAAlC;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,MAAMC,kBAAkB,GAAG,GAA3B,C,CAEA;AACA;;AACA,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,UAAN,KAAqBC,KAAK,IAAI;AAC7C,MAAIC,KAAK,CAACD,KAAD,CAAT,EAAkB;AAChB,WAAOF,GAAP;AACD;;AACD,QAAMI,WAAW,GAAGC,MAAM,CAACC,QAAP,CAAgBJ,KAAhB,EAAuB,EAAvB,CAApB;AACA,SAAOE,WAAW,GAAGJ,GAAd,GAAoBA,GAApB,GAA0BI,WAAW,GAAGH,UAAd,GAA2BA,UAA3B,GAAwCG,WAAzE;AACD,CAND,C,CAQA;AACA;;;AACA,MAAMG,QAAQ,GAAG,CAACC,GAAD,EAAMC,UAAN,KAAqBP,KAAK,IAAI;AAC7C,MAAIC,KAAK,CAACD,KAAD,CAAT,EAAkB;AAChB,WAAOM,GAAP;AACD;;AACD,QAAMJ,WAAW,GAAGC,MAAM,CAACC,QAAP,CAAgBJ,KAAhB,EAAuB,EAAvB,CAApB;AACA,SAAOE,WAAW,GAAGK,UAAd,GAA2BA,UAA3B,GAAwCL,WAAW,GAAGI,GAAd,GAAoBA,GAApB,GAA0BJ,WAAzE;AACD,CAND,C,CAQA;;;AACA,MAAMM,wBAAwB,GAAGC,KAAK,IAAI;AAAA,QAChCC,QADgC,GAC6BD,KAD7B,CAChCC,QADgC;AAAA,QACtBC,QADsB,GAC6BF,KAD7B,CACtBE,QADsB;AAAA,QACZC,QADY,GAC6BH,KAD7B,CACZG,QADY;AAAA,QACFC,QADE,GAC6BJ,KAD7B,CACFI,QADE;AAAA,QACQC,OADR,GAC6BL,KAD7B,CACQK,OADR;AAAA,QACoBC,IADpB,4BAC6BN,KAD7B;;AAGxC,MAAIC,QAAQ,IAAI,CAACC,QAAjB,EAA2B;AACzB,UAAM,IAAIK,KAAJ,CAAU,4EAAV,CAAN;AACD;;AAED,MAAI,CAACN,QAAD,IAAa,EAAEG,QAAQ,IAAIC,OAAZ,IAAuBF,QAAzB,CAAjB,EAAqD;AACnD,UAAM,IAAII,KAAJ,CACJ,qGADI,CAAN;AAGD;;AAED,QAAMC,YAAY,GAAG/B,QAAQ,CAC3BgC,SAAS,IAAI;AACX,QAAIA,SAAS,CAACC,KAAd,EAAqB;AACnBR,MAAAA,QAAQ,CAACO,SAAS,CAACE,MAAX,CAAR;AACD;AACF,GAL0B,EAM3BxB,kBAN2B,EAO3B;AAAEyB,IAAAA,OAAO,EAAE,KAAX;AAAkBC,IAAAA,QAAQ,EAAE;AAA5B,GAP2B,CAA7B;AAUA,QAAMC,aAAa,GAAGb,QAAQ,GAAG;AAAEE,IAAAA,QAAQ,EAAE,MAAM;AAAlB,GAAH,GAA8B;AAAEA,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,GAA5D;AACA,SACE,oBAAC,SAAD,oBACMC,IADN,EAEMQ,aAFN;AAGE,IAAA,MAAM,EAAEC,eAAe,IAAI;AAAA,YAEvBC,IAFuB,GAgBrBD,eAhBqB,CAEvBC,IAFuB;AAAA,YAGvBC,YAHuB,GAgBrBF,eAhBqB,CAGvBE,YAHuB;AAAA,YAIvBC,EAJuB,GAgBrBH,eAhBqB,CAIvBG,EAJuB;AAAA,YAKvBC,WALuB,GAgBrBJ,eAhBqB,CAKvBI,WALuB;AAAA,YAMvBd,OANuB,GAgBrBU,eAhBqB,CAMvBV,OANuB;AAAA,YAOvBD,QAPuB,GAgBrBW,eAhBqB,CAOvBX,QAPuB;AAAA,YAQvBgB,MARuB,GAgBrBL,eAhBqB,CAQvBK,MARuB;AAAA,YASvBC,UATuB,GAgBrBN,eAhBqB,CASvBM,UATuB;AAAA,YAUvBC,KAVuB,GAgBrBP,eAhBqB,CAUvBO,KAVuB;AAAA,YAWvBC,IAXuB,GAgBrBR,eAhBqB,CAWvBQ,IAXuB;AAAA,YAYvBZ,MAZuB,GAgBrBI,eAhBqB,CAYvBJ,MAZuB;AAAA,YAavBtB,GAbuB,GAgBrB0B,eAhBqB,CAavB1B,GAbuB;AAAA,YAcvBQ,GAduB,GAgBrBkB,eAhBqB,CAcvBlB,GAduB;AAAA,YAevB2B,IAfuB,GAgBrBT,eAhBqB,CAevBS,IAfuB;AAAA,YAiBjBC,QAjBiB,GAiBMd,MAjBN,CAiBjBc,QAjBiB;AAAA,YAiBPC,QAjBO,GAiBMf,MAjBN,CAiBPe,QAjBO;;AAmBzB,YAAMC,YAAY,GAAG,MAAM;AACzB;AACAX,QAAAA,IAAI,CAACY,KAAL;AACAxB,QAAAA,QAAQ;AACT,OAJD;;AAMA,YAAMyB,KAAK,GAAGN,IAAI,CAACO,aAAL,CAAmB;AAAEZ,QAAAA,EAAE,EAAE;AAAN,OAAnB,CAAd;AACA,YAAMa,MAAM,GAAGR,IAAI,CAACO,aAAL,CAAmB;AAAEZ,QAAAA,EAAE,EAAE;AAAN,OAAnB,CAAf;AACA,YAAMc,MAAM,GAAGT,IAAI,CAACO,aAAL,CAAmB;AAAEZ,QAAAA,EAAE,EAAE;AAAN,OAAnB,CAAf;AAEA,YAAMe,OAAO,GAAGzD,UAAU,CAACU,GAAG,CAACgD,IAAL,EAAW;AACnC,SAAChD,GAAG,CAACiD,KAAL,GAAahB,WADsB;AAEnC,SAACjC,GAAG,CAACkD,aAAL,GAAqBjB,WAAW,IAAIC,MAFD;AAGnC,SAAClC,GAAG,CAACmD,KAAL,GAAa,CAAClB,WAHqB;AAInC,SAACjC,GAAG,CAACkC,MAAL,GAAc,CAACD,WAAD,IAAgBC;AAJK,OAAX,CAA1B;AAOA,aACE,oBAAC,IAAD;AACE,QAAA,SAAS,EAAEa,OADb;AAEE,QAAA,QAAQ,EAAEhB,YAFZ;AAGE,QAAA,QAAQ,EAAC,GAHX;AAIE,QAAA,UAAU,EAAEI,UAJd;AAKE,QAAA,KAAK;AAAIiB,UAAAA,QAAQ,EAAE;AAAd,WAA0BhB,KAA1B,CALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE;AAAK,QAAA,SAAS,EAAEpC,GAAG,CAACqD,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAErD,GAAG,CAACsD,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,uBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAEtD,GAAG,CAACuD,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAEvD,GAAG,CAACuC,QADjB;AAEE,QAAA,EAAE,YAAKP,EAAL,cAFJ;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,SAAS,EAAC,OAJZ;AAKE,QAAA,IAAI,EAAC,QALP;AAME,QAAA,WAAW,EAAE7B,GANf;AAOE,QAAA,GAAG,EAAEA,GAPP;AAQE,QAAA,GAAG,EAAEQ,GARP;AASE,QAAA,IAAI,EAAE2B,IATR;AAUE,QAAA,KAAK,EAAEpC,QAAQ,CAACC,GAAD,EAAMqC,QAAN,CAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAaE;AAAM,QAAA,SAAS,EAAExC,GAAG,CAACwD,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAbF,EAcE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAExD,GAAG,CAACwC,QADjB;AAEE,QAAA,EAAE,YAAKR,EAAL,cAFJ;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,SAAS,EAAC,OAJZ;AAKE,QAAA,IAAI,EAAC,QALP;AAME,QAAA,WAAW,EAAErB,GANf;AAOE,QAAA,GAAG,EAAER,GAPP;AAQE,QAAA,GAAG,EAAEQ,GARP;AASE,QAAA,IAAI,EAAE2B,IATR;AAUE,QAAA,KAAK,EAAE5B,QAAQ,CAACC,GAAD,EAAM4B,QAAN,CAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,CAJF,CAPF,EAwCE;AAAK,QAAA,SAAS,EAAEvC,GAAG,CAACyD,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AACE,QAAA,GAAG,EAAEtD,GADP;AAEE,QAAA,GAAG,EAAEQ,GAFP;AAGE,QAAA,IAAI,EAAE2B,IAHR;AAIE,QAAA,OAAO,EAAE,CAACC,QAAD,EAAWC,QAAX,CAJX;AAKE,QAAA,QAAQ,EAAEkB,OAAO,IAAI;AACnB5B,UAAAA,IAAI,CAAC6B,MAAL,CAAY,UAAZ,EAAwBD,OAAO,CAAC,CAAD,CAA/B;AACA5B,UAAAA,IAAI,CAAC6B,MAAL,CAAY,UAAZ,EAAwBD,OAAO,CAAC,CAAD,CAA/B;AACD,SARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAxCF,EAqDG3C,QAAQ,GACP,oBAAC,OAAD;AAAS,QAAA,QAAQ,EAAEO,YAAnB;AAAiC,QAAA,YAAY,EAAE;AAAEG,UAAAA,MAAM,EAAE,IAAV;AAAgBD,UAAAA,KAAK,EAAE;AAAvB,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADO,GAGP;AAAK,QAAA,SAAS,EAAExB,GAAG,CAAC4D,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAE5D,GAAG,CAAC6D,WAAvB;AAAoC,QAAA,IAAI,EAAC,QAAzC;AAAkD,QAAA,OAAO,EAAE1C,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGwB,KADH,CADF,EAIE;AAAQ,QAAA,SAAS,EAAE3C,GAAG,CAAC8D,YAAvB;AAAqC,QAAA,IAAI,EAAC,QAA1C;AAAmD,QAAA,OAAO,EAAErB,YAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGI,MADH,CAJF,EAOE;AAAQ,QAAA,SAAS,EAAE7C,GAAG,CAAC+D,YAAvB;AAAqC,QAAA,IAAI,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGjB,MADH,CAPF,CAxDJ,CADF;AAuED,KA9GH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAkHD,CA1ID;;AA4IAjC,wBAAwB,CAACmD,YAAzB,GAAwC;AACtCjD,EAAAA,QAAQ,EAAE,KAD4B;AAEtCkB,EAAAA,WAAW,EAAE,KAFyB;AAGtCC,EAAAA,MAAM,EAAE,KAH8B;AAItCC,EAAAA,UAAU,EAAE,IAJ0B;AAKtCC,EAAAA,KAAK,EAAE,IAL+B;AAMtCjC,EAAAA,GAAG,EAAE,CANiC;AAOtCmC,EAAAA,IAAI,EAAE,CAPgC;AAQtCpB,EAAAA,QAAQ,EAAE,IAR4B;AAStCF,EAAAA,QAAQ,EAAE,IAT4B;AAUtCG,EAAAA,OAAO,EAAE,IAV6B;AAWtCF,EAAAA,QAAQ,EAAE;AAX4B,CAAxC;AAcAJ,wBAAwB,CAACoD,SAAzB,GAAqC;AACnCjC,EAAAA,EAAE,EAAE3C,MAAM,CAAC6E,UADwB;AAEnCnD,EAAAA,QAAQ,EAAE9B,IAFyB;AAGnCgD,EAAAA,WAAW,EAAEhD,IAHsB;AAInCiC,EAAAA,QAAQ,EAAEhC,IAJyB;AAKnC8B,EAAAA,QAAQ,EAAE9B,IALyB;AAMnCiC,EAAAA,OAAO,EAAEjC,IAN0B;AAOnC+B,EAAAA,QAAQ,EAAE/B,IAPyB;AAQnCgD,EAAAA,MAAM,EAAEjD,IAR2B;AASnCkD,EAAAA,UAAU,EAAEjD,IATuB;AAUnCkD,EAAAA,KAAK,EAAEhD,MAV4B;AAWnCe,EAAAA,GAAG,EAAEhB,MAAM,CAAC+E,UAXuB;AAYnCvD,EAAAA,GAAG,EAAExB,MAAM,CAAC+E,UAZuB;AAanC5B,EAAAA,IAAI,EAAEnD,MAb6B;AAenC;AACAkD,EAAAA,IAAI,EAAExC,SAAS,CAACqE;AAhBmB,CAArC;AAmBA,MAAMC,eAAe,GAAGvE,UAAU,CAACiB,wBAAD,CAAlC;AAEA,eAAesD,eAAf","sourcesContent":["import React from 'react';\nimport { bool, func, number, object, string } from 'prop-types';\nimport classNames from 'classnames';\nimport debounce from 'lodash/debounce';\nimport { Field, Form as FinalForm, FormSpy } from 'react-final-form';\nimport { injectIntl, intlShape, FormattedMessage } from 'react-intl';\n\nimport { Form, RangeSlider } from '../../components';\nimport css from './PriceFilterForm.css';\n\nconst DEBOUNCE_WAIT_TIME = 400;\n\n// Helper function to parse value for min handle\n// Value needs to be between slider's minimum value and current maximum value\nconst parseMin = (min, currentMax) => value => {\n  if (isNaN(value)) {\n    return min;\n  }\n  const parsedValue = Number.parseInt(value, 10);\n  return parsedValue < min ? min : parsedValue > currentMax ? currentMax : parsedValue;\n};\n\n// Helper function to parse value for max handle\n// Value needs to be between slider's max value and current minimum value\nconst parseMax = (max, currentMin) => value => {\n  if (isNaN(value)) {\n    return max;\n  }\n  const parsedValue = Number.parseInt(value, 10);\n  return parsedValue < currentMin ? currentMin : parsedValue > max ? max : parsedValue;\n};\n\n// PriceFilterForm component\nconst PriceFilterFormComponent = props => {\n  const { liveEdit, onChange, onSubmit, onCancel, onClear, ...rest } = props;\n\n  if (liveEdit && !onChange) {\n    throw new Error('PriceFilterForm: if liveEdit is true you need to provide onChange function');\n  }\n\n  if (!liveEdit && !(onCancel && onClear && onSubmit)) {\n    throw new Error(\n      'PriceFilterForm: if liveEdit is false you need to provide onCancel, onClear, and onSubmit functions'\n    );\n  }\n\n  const handleChange = debounce(\n    formState => {\n      if (formState.dirty) {\n        onChange(formState.values);\n      }\n    },\n    DEBOUNCE_WAIT_TIME,\n    { leading: false, trailing: true }\n  );\n\n  const formCallbacks = liveEdit ? { onSubmit: () => null } : { onSubmit, onCancel, onClear };\n  return (\n    <FinalForm\n      {...rest}\n      {...formCallbacks}\n      render={formRenderProps => {\n        const {\n          form,\n          handleSubmit,\n          id,\n          showAsPopup,\n          onClear,\n          onCancel,\n          isOpen,\n          contentRef,\n          style,\n          intl,\n          values,\n          min,\n          max,\n          step,\n        } = formRenderProps;\n        const { minPrice, maxPrice } = values;\n\n        const handleCancel = () => {\n          // reset the final form to initialValues\n          form.reset();\n          onCancel();\n        };\n\n        const clear = intl.formatMessage({ id: 'PriceFilterForm.clear' });\n        const cancel = intl.formatMessage({ id: 'PriceFilterForm.cancel' });\n        const submit = intl.formatMessage({ id: 'PriceFilterForm.submit' });\n\n        const classes = classNames(css.root, {\n          [css.popup]: showAsPopup,\n          [css.isOpenAsPopup]: showAsPopup && isOpen,\n          [css.plain]: !showAsPopup,\n          [css.isOpen]: !showAsPopup && isOpen,\n        });\n\n        return (\n          <Form\n            className={classes}\n            onSubmit={handleSubmit}\n            tabIndex=\"0\"\n            contentRef={contentRef}\n            style={{ minWidth: '300px', ...style }}\n          >\n            <div className={css.contentWrapper}>\n              <span className={css.label}>\n                <FormattedMessage id=\"PriceFilterForm.label\" />\n              </span>\n              <div className={css.inputsWrapper}>\n                <Field\n                  className={css.minPrice}\n                  id={`${id}.minPrice`}\n                  name=\"minPrice\"\n                  component=\"input\"\n                  type=\"number\"\n                  placeholder={min}\n                  min={min}\n                  max={max}\n                  step={step}\n                  parse={parseMin(min, maxPrice)}\n                />\n                <span className={css.priceSeparator}>-</span>\n                <Field\n                  className={css.maxPrice}\n                  id={`${id}.maxPrice`}\n                  name=\"maxPrice\"\n                  component=\"input\"\n                  type=\"number\"\n                  placeholder={max}\n                  min={min}\n                  max={max}\n                  step={step}\n                  parse={parseMax(max, minPrice)}\n                />\n              </div>\n            </div>\n\n            <div className={css.sliderWrapper}>\n              <RangeSlider\n                min={min}\n                max={max}\n                step={step}\n                handles={[minPrice, maxPrice]}\n                onChange={handles => {\n                  form.change('minPrice', handles[0]);\n                  form.change('maxPrice', handles[1]);\n                }}\n              />\n            </div>\n\n            {liveEdit ? (\n              <FormSpy onChange={handleChange} subscription={{ values: true, dirty: true }} />\n            ) : (\n              <div className={css.buttonsWrapper}>\n                <button className={css.clearButton} type=\"button\" onClick={onClear}>\n                  {clear}\n                </button>\n                <button className={css.cancelButton} type=\"button\" onClick={handleCancel}>\n                  {cancel}\n                </button>\n                <button className={css.submitButton} type=\"submit\">\n                  {submit}\n                </button>\n              </div>\n            )}\n          </Form>\n        );\n      }}\n    />\n  );\n};\n\nPriceFilterFormComponent.defaultProps = {\n  liveEdit: false,\n  showAsPopup: false,\n  isOpen: false,\n  contentRef: null,\n  style: null,\n  min: 0,\n  step: 1,\n  onCancel: null,\n  onChange: null,\n  onClear: null,\n  onSubmit: null,\n};\n\nPriceFilterFormComponent.propTypes = {\n  id: string.isRequired,\n  liveEdit: bool,\n  showAsPopup: bool,\n  onCancel: func,\n  onChange: func,\n  onClear: func,\n  onSubmit: func,\n  isOpen: bool,\n  contentRef: func,\n  style: object,\n  min: number.isRequired,\n  max: number.isRequired,\n  step: number,\n\n  // form injectIntl\n  intl: intlShape.isRequired,\n};\n\nconst PriceFilterForm = injectIntl(PriceFilterFormComponent);\n\nexport default PriceFilterForm;\n"]},"metadata":{},"sourceType":"module"}