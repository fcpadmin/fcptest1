{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/Routes.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport { NotFoundPage } from './containers';\nimport { NamedRedirect } from './components';\nimport { locationChanged } from './ducks/Routing.duck';\nimport { propTypes } from './util/types';\nimport * as log from './util/log';\nimport { canonicalRoutePath } from './util/routes';\nimport routeConfiguration from './routeConfiguration';\nconst arrayOf = PropTypes.arrayOf,\n      bool = PropTypes.bool,\n      object = PropTypes.object,\n      func = PropTypes.func,\n      shape = PropTypes.shape,\n      string = PropTypes.string;\n\nconst canShowComponent = props => {\n  const isAuthenticated = props.isAuthenticated,\n        route = props.route;\n  const auth = route.auth;\n  return !auth || isAuthenticated;\n};\n\nconst callLoadData = props => {\n  const match = props.match,\n        location = props.location,\n        route = props.route,\n        dispatch = props.dispatch,\n        logoutInProgress = props.logoutInProgress;\n  const loadData = route.loadData,\n        name = route.name;\n  const shouldLoadData = typeof loadData === 'function' && canShowComponent(props) && !logoutInProgress;\n\n  if (shouldLoadData) {\n    dispatch(loadData(match.params, location.search)).then(() => {\n      // eslint-disable-next-line no-console\n      console.log(\"loadData success for \".concat(name, \" route\"));\n    }).catch(e => {\n      log.error(e, 'load-data-failed', {\n        routeName: name\n      });\n    });\n  }\n};\n\nconst setPageScrollPosition = location => {\n  if (!location.hash) {\n    // No hash, scroll to top\n    window.scroll({\n      top: 0,\n      left: 0\n    });\n  } else {\n    const el = document.querySelector(location.hash);\n\n    if (el) {\n      // Found element with the given fragment identifier, scrolling\n      // to that element.\n      //\n      // NOTE: This isn't foolproof. It works when navigating within\n      // the application between pages and within a single page. It\n      // also works with the initial page load. However, it doesn't\n      // seem work work properly when refreshing the page, at least\n      // not in Chrome.\n      //\n      // TODO: investigate why the scrolling fails on refresh\n      el.scrollIntoView({\n        block: 'start',\n        behavior: 'smooth'\n      });\n    }\n  }\n};\n\nconst handleLocationChanged = (dispatch, location) => {\n  setPageScrollPosition(location);\n  const url = canonicalRoutePath(routeConfiguration(), location);\n  dispatch(locationChanged(location, url));\n};\n\nclass RouteComponentRenderer extends Component {\n  componentDidMount() {\n    // Calling loadData on initial rendering (on client side).\n    callLoadData(this.props);\n    handleLocationChanged(this.props.dispatch, this.props.location);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // Calling loadData after initial rendering (on client side).\n    // This makes it possible to use loadData as default client side data loading technique.\n    // However it is better to fetch data before location change to avoid \"Loading data\" state.\n    callLoadData(nextProps);\n    handleLocationChanged(nextProps.dispatch, nextProps.location);\n  }\n\n  render() {\n    const _this$props = this.props,\n          route = _this$props.route,\n          match = _this$props.match,\n          location = _this$props.location,\n          staticContext = _this$props.staticContext;\n    const RouteComponent = route.component,\n          _route$authPage = route.authPage,\n          authPage = _route$authPage === void 0 ? 'SignupPage' : _route$authPage;\n    const canShow = canShowComponent(this.props);\n\n    if (!canShow) {\n      staticContext.unauthorized = true;\n    }\n\n    return canShow ? React.createElement(RouteComponent, {\n      params: match.params,\n      location: location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }) : React.createElement(NamedRedirect, {\n      name: authPage,\n      state: {\n        from: \"\".concat(location.pathname).concat(location.search).concat(location.hash)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    });\n  }\n\n}\n\nRouteComponentRenderer.propTypes = {\n  isAuthenticated: bool.isRequired,\n  // eslint-disable-line react/no-unused-prop-types\n  logoutInProgress: bool.isRequired,\n  // eslint-disable-line react/no-unused-prop-types\n  route: propTypes.route.isRequired,\n  match: shape({\n    params: object.isRequired,\n    url: string.isRequired\n  }).isRequired,\n  location: shape({\n    search: string.isRequired\n  }).isRequired,\n  staticContext: object.isRequired,\n  // eslint-disable-next-line react/no-unused-prop-types\n  dispatch: func.isRequired\n};\n\nconst Routes = (props, context) => {\n  const isAuthenticated = props.isAuthenticated,\n        logoutInProgress = props.logoutInProgress,\n        staticContext = props.staticContext,\n        dispatch = props.dispatch,\n        routes = props.routes;\n\n  const toRouteComponent = route => {\n    const renderProps = {\n      isAuthenticated,\n      logoutInProgress,\n      route,\n      staticContext,\n      dispatch\n    }; // By default, our routes are exact.\n    // https://reacttraining.com/react-router/web/api/Route/exact-bool\n\n    const isExact = route.exact != null ? route.exact : true;\n    return React.createElement(Route, {\n      key: route.name,\n      path: route.path,\n      exact: isExact,\n      render: matchProps => React.createElement(RouteComponentRenderer, Object.assign({}, renderProps, {\n        match: matchProps.match,\n        location: matchProps.location,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    });\n  }; // N.B. routes prop within React Router needs to stay the same,\n  // so that React is is not rerendering page component.\n  // That's why we pass-in props.routes instead of calling routeConfiguration here.\n\n\n  return React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, routes.map(toRouteComponent), React.createElement(Route, {\n    component: NotFoundPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }));\n};\n\nRoutes.defaultProps = {\n  staticContext: {}\n};\nRoutes.propTypes = {\n  isAuthenticated: bool.isRequired,\n  logoutInProgress: bool.isRequired,\n  routes: arrayOf(propTypes.route).isRequired,\n  // from withRouter\n  staticContext: object,\n  // from connect\n  dispatch: func.isRequired\n};\n\nconst mapStateToProps = state => {\n  const _state$Auth = state.Auth,\n        isAuthenticated = _state$Auth.isAuthenticated,\n        logoutInProgress = _state$Auth.logoutInProgress;\n  return {\n    isAuthenticated,\n    logoutInProgress\n  };\n}; // Note: it is important that the withRouter HOC is **outside** the\n// connect HOC, otherwise React Router won't rerender any Route\n// components since connect implements a shouldComponentUpdate\n// lifecycle hook.\n//\n// See: https://github.com/ReactTraining/react-router/issues/4671\n\n\nexport default compose(withRouter, connect(mapStateToProps))(Routes);","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/Routes.js"],"names":["React","Component","PropTypes","compose","connect","Switch","Route","withRouter","NotFoundPage","NamedRedirect","locationChanged","propTypes","log","canonicalRoutePath","routeConfiguration","arrayOf","bool","object","func","shape","string","canShowComponent","props","isAuthenticated","route","auth","callLoadData","match","location","dispatch","logoutInProgress","loadData","name","shouldLoadData","params","search","then","console","catch","e","error","routeName","setPageScrollPosition","hash","window","scroll","top","left","el","document","querySelector","scrollIntoView","block","behavior","handleLocationChanged","url","RouteComponentRenderer","componentDidMount","componentWillReceiveProps","nextProps","render","staticContext","RouteComponent","component","authPage","canShow","unauthorized","from","pathname","isRequired","Routes","context","routes","toRouteComponent","renderProps","isExact","exact","path","matchProps","map","defaultProps","mapStateToProps","state","Auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport { NotFoundPage } from './containers';\nimport { NamedRedirect } from './components';\nimport { locationChanged } from './ducks/Routing.duck';\nimport { propTypes } from './util/types';\nimport * as log from './util/log';\nimport { canonicalRoutePath } from './util/routes';\nimport routeConfiguration from './routeConfiguration';\n\nconst { arrayOf, bool, object, func, shape, string } = PropTypes;\n\nconst canShowComponent = props => {\n  const { isAuthenticated, route } = props;\n  const { auth } = route;\n  return !auth || isAuthenticated;\n};\n\nconst callLoadData = props => {\n  const { match, location, route, dispatch, logoutInProgress } = props;\n  const { loadData, name } = route;\n  const shouldLoadData =\n    typeof loadData === 'function' && canShowComponent(props) && !logoutInProgress;\n\n  if (shouldLoadData) {\n    dispatch(loadData(match.params, location.search))\n      .then(() => {\n        // eslint-disable-next-line no-console\n        console.log(`loadData success for ${name} route`);\n      })\n      .catch(e => {\n        log.error(e, 'load-data-failed', { routeName: name });\n      });\n  }\n};\n\nconst setPageScrollPosition = location => {\n  if (!location.hash) {\n    // No hash, scroll to top\n    window.scroll({\n      top: 0,\n      left: 0,\n    });\n  } else {\n    const el = document.querySelector(location.hash);\n    if (el) {\n      // Found element with the given fragment identifier, scrolling\n      // to that element.\n      //\n      // NOTE: This isn't foolproof. It works when navigating within\n      // the application between pages and within a single page. It\n      // also works with the initial page load. However, it doesn't\n      // seem work work properly when refreshing the page, at least\n      // not in Chrome.\n      //\n      // TODO: investigate why the scrolling fails on refresh\n      el.scrollIntoView({\n        block: 'start',\n        behavior: 'smooth',\n      });\n    }\n  }\n};\n\nconst handleLocationChanged = (dispatch, location) => {\n  setPageScrollPosition(location);\n  const url = canonicalRoutePath(routeConfiguration(), location);\n  dispatch(locationChanged(location, url));\n};\n\nclass RouteComponentRenderer extends Component {\n  componentDidMount() {\n    // Calling loadData on initial rendering (on client side).\n    callLoadData(this.props);\n    handleLocationChanged(this.props.dispatch, this.props.location);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // Calling loadData after initial rendering (on client side).\n    // This makes it possible to use loadData as default client side data loading technique.\n    // However it is better to fetch data before location change to avoid \"Loading data\" state.\n    callLoadData(nextProps);\n    handleLocationChanged(nextProps.dispatch, nextProps.location);\n  }\n\n  render() {\n    const { route, match, location, staticContext } = this.props;\n    const { component: RouteComponent, authPage = 'SignupPage' } = route;\n    const canShow = canShowComponent(this.props);\n    if (!canShow) {\n      staticContext.unauthorized = true;\n    }\n    return canShow ? (\n      <RouteComponent params={match.params} location={location} />\n    ) : (\n      <NamedRedirect\n        name={authPage}\n        state={{ from: `${location.pathname}${location.search}${location.hash}` }}\n      />\n    );\n  }\n}\n\nRouteComponentRenderer.propTypes = {\n  isAuthenticated: bool.isRequired, // eslint-disable-line react/no-unused-prop-types\n  logoutInProgress: bool.isRequired, // eslint-disable-line react/no-unused-prop-types\n  route: propTypes.route.isRequired,\n  match: shape({\n    params: object.isRequired,\n    url: string.isRequired,\n  }).isRequired,\n  location: shape({\n    search: string.isRequired,\n  }).isRequired,\n  staticContext: object.isRequired,\n  // eslint-disable-next-line react/no-unused-prop-types\n  dispatch: func.isRequired,\n};\n\nconst Routes = (props, context) => {\n  const { isAuthenticated, logoutInProgress, staticContext, dispatch, routes } = props;\n\n  const toRouteComponent = route => {\n    const renderProps = {\n      isAuthenticated,\n      logoutInProgress,\n      route,\n      staticContext,\n      dispatch,\n    };\n\n    // By default, our routes are exact.\n    // https://reacttraining.com/react-router/web/api/Route/exact-bool\n    const isExact = route.exact != null ? route.exact : true;\n    return (\n      <Route\n        key={route.name}\n        path={route.path}\n        exact={isExact}\n        render={matchProps => (\n          <RouteComponentRenderer\n            {...renderProps}\n            match={matchProps.match}\n            location={matchProps.location}\n          />\n        )}\n      />\n    );\n  };\n\n  // N.B. routes prop within React Router needs to stay the same,\n  // so that React is is not rerendering page component.\n  // That's why we pass-in props.routes instead of calling routeConfiguration here.\n  return (\n    <Switch>\n      {routes.map(toRouteComponent)}\n      <Route component={NotFoundPage} />\n    </Switch>\n  );\n};\n\nRoutes.defaultProps = { staticContext: {} };\n\nRoutes.propTypes = {\n  isAuthenticated: bool.isRequired,\n  logoutInProgress: bool.isRequired,\n  routes: arrayOf(propTypes.route).isRequired,\n\n  // from withRouter\n  staticContext: object,\n\n  // from connect\n  dispatch: func.isRequired,\n};\n\nconst mapStateToProps = state => {\n  const { isAuthenticated, logoutInProgress } = state.Auth;\n  return { isAuthenticated, logoutInProgress };\n};\n\n// Note: it is important that the withRouter HOC is **outside** the\n// connect HOC, otherwise React Router won't rerender any Route\n// components since connect implements a shouldComponentUpdate\n// lifecycle hook.\n//\n// See: https://github.com/ReactTraining/react-router/issues/4671\nexport default compose(\n  withRouter,\n  connect(mapStateToProps)\n)(Routes);\n"]},"metadata":{},"sourceType":"module"}