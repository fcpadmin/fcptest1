{"ast":null,"code":"import _objectSpread from \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/BookingPanel/BookingPanel.js\";\nimport React from 'react';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { intlShape, injectIntl } from 'react-intl';\nimport { arrayOf, bool, func, node, oneOfType, shape, string } from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport { propTypes, LISTING_STATE_CLOSED, LINE_ITEM_NIGHT, LINE_ITEM_DAY } from '../../util/types';\nimport { formatMoney } from '../../util/currency';\nimport { parse, stringify } from '../../util/urlHelpers';\nimport config from '../../config';\nimport { ModalInMobile, Button } from '../../components';\nimport { BookingDatesForm } from '../../forms';\nimport css from './BookingPanel.css'; // This defines when ModalInMobile shows content as Modal\n\nconst MODAL_BREAKPOINT = 1023;\n\nconst priceData = (price, intl) => {\n  if (price && price.currency === config.currency) {\n    const formattedPrice = formatMoney(intl, price);\n    return {\n      formattedPrice,\n      priceTitle: formattedPrice\n    };\n  } else if (price) {\n    return {\n      formattedPrice: \"(\".concat(price.currency, \")\"),\n      priceTitle: \"Unsupported currency (\".concat(price.currency, \")\")\n    };\n  }\n\n  return {};\n};\n\nconst openBookModal = (isOwnListing, isClosed, history, location) => {\n  if (isOwnListing || isClosed) {\n    window.scrollTo(0, 0);\n  } else {\n    const pathname = location.pathname,\n          search = location.search,\n          state = location.state;\n    const searchString = \"?\".concat(stringify(_objectSpread({}, parse(search), {\n      book: true\n    })));\n    history.push(\"\".concat(pathname).concat(searchString), state);\n  }\n};\n\nconst closeBookModal = (history, location) => {\n  const pathname = location.pathname,\n        search = location.search,\n        state = location.state;\n  const searchParams = omit(parse(search), 'book');\n  const searchString = \"?\".concat(stringify(searchParams));\n  history.push(\"\".concat(pathname).concat(searchString), state);\n};\n\nconst BookingPanel = props => {\n  const rootClassName = props.rootClassName,\n        className = props.className,\n        titleClassName = props.titleClassName,\n        listing = props.listing,\n        isOwnListing = props.isOwnListing,\n        unitType = props.unitType,\n        onSubmit = props.onSubmit,\n        title = props.title,\n        subTitle = props.subTitle,\n        authorDisplayName = props.authorDisplayName,\n        onManageDisableScrolling = props.onManageDisableScrolling,\n        timeSlots = props.timeSlots,\n        fetchTimeSlotsError = props.fetchTimeSlotsError,\n        history = props.history,\n        location = props.location,\n        intl = props.intl;\n  const price = listing.attributes.price;\n  const hasListingState = !!listing.attributes.state;\n  const isClosed = hasListingState && listing.attributes.state === LISTING_STATE_CLOSED;\n  const showBookingDatesForm = hasListingState && !isClosed;\n  const showClosedListingHelpText = listing.id && isClosed;\n\n  const _priceData = priceData(price, intl),\n        formattedPrice = _priceData.formattedPrice,\n        priceTitle = _priceData.priceTitle;\n\n  const isBook = !!parse(location.search).book;\n  const subTitleText = !!subTitle ? subTitle : showClosedListingHelpText ? intl.formatMessage({\n    id: 'BookingPanel.subTitleClosedListing'\n  }) : null;\n  const isNightly = unitType === LINE_ITEM_NIGHT;\n  const isDaily = unitType === LINE_ITEM_DAY;\n  const unitTranslationKey = isNightly ? 'BookingPanel.perNight' : isDaily ? 'BookingPanel.perDay' : 'BookingPanel.perUnit';\n  const classes = classNames(rootClassName || css.root, className);\n  const titleClasses = classNames(titleClassName || css.bookingTitle);\n  return React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(ModalInMobile, {\n    containerClassName: css.modalContainer,\n    id: \"BookingDatesFormInModal\",\n    isModalOpenOnMobile: isBook,\n    onClose: () => closeBookModal(history, location),\n    showAsModalMaxWidth: MODAL_BREAKPOINT,\n    onManageDisableScrolling: onManageDisableScrolling,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css.modalHeading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: css.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    className: css.author,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"BookingPanel.hostedBy\",\n    values: {\n      name: authorDisplayName\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: css.bookingHeading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: titleClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, title), subTitleText ? React.createElement(\"div\", {\n    className: css.bookingHelp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, subTitleText) : null), showBookingDatesForm ? React.createElement(BookingDatesForm, {\n    className: css.bookingForm,\n    submitButtonWrapperClassName: css.bookingDatesSubmitButtonWrapper,\n    unitType: unitType,\n    onSubmit: onSubmit,\n    price: price,\n    isOwnListing: isOwnListing,\n    timeSlots: timeSlots,\n    fetchTimeSlotsError: fetchTimeSlotsError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }) : null), React.createElement(\"div\", {\n    className: css.openBookingForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css.priceContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css.priceValue,\n    title: priceTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, formattedPrice), React.createElement(\"div\", {\n    className: css.perUnit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: unitTranslationKey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }))), showBookingDatesForm ? React.createElement(Button, {\n    rootClassName: css.bookButton,\n    onClick: () => openBookModal(isOwnListing, isClosed, history, location),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"BookingPanel.ctaButtonMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    className: css.closedListingButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"BookingPanel.closedListingButtonText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }))));\n};\n\nBookingPanel.defaultProps = {\n  rootClassName: null,\n  className: null,\n  titleClassName: null,\n  isOwnListing: false,\n  subTitle: null,\n  unitType: config.bookingUnitType,\n  timeSlots: null,\n  fetchTimeSlotsError: null\n};\nBookingPanel.propTypes = {\n  rootClassName: string,\n  className: string,\n  titleClassName: string,\n  listing: oneOfType([propTypes.listing, propTypes.ownListing]),\n  isOwnListing: bool,\n  unitType: propTypes.bookingUnitType,\n  onSubmit: func.isRequired,\n  title: oneOfType([node, string]).isRequired,\n  subTitle: oneOfType([node, string]),\n  authorDisplayName: string.isRequired,\n  onManageDisableScrolling: func.isRequired,\n  timeSlots: arrayOf(propTypes.timeSlot),\n  fetchTimeSlotsError: propTypes.error,\n  // from withRouter\n  history: shape({\n    push: func.isRequired\n  }).isRequired,\n  location: shape({\n    search: string\n  }).isRequired,\n  // from injectIntl\n  intl: intlShape.isRequired\n};\nexport default compose(withRouter, injectIntl)(BookingPanel);","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/BookingPanel/BookingPanel.js"],"names":["React","compose","withRouter","intlShape","injectIntl","arrayOf","bool","func","node","oneOfType","shape","string","FormattedMessage","classNames","omit","propTypes","LISTING_STATE_CLOSED","LINE_ITEM_NIGHT","LINE_ITEM_DAY","formatMoney","parse","stringify","config","ModalInMobile","Button","BookingDatesForm","css","MODAL_BREAKPOINT","priceData","price","intl","currency","formattedPrice","priceTitle","openBookModal","isOwnListing","isClosed","history","location","window","scrollTo","pathname","search","state","searchString","book","push","closeBookModal","searchParams","BookingPanel","props","rootClassName","className","titleClassName","listing","unitType","onSubmit","title","subTitle","authorDisplayName","onManageDisableScrolling","timeSlots","fetchTimeSlotsError","attributes","hasListingState","showBookingDatesForm","showClosedListingHelpText","id","isBook","subTitleText","formatMessage","isNightly","isDaily","unitTranslationKey","classes","root","titleClasses","bookingTitle","modalContainer","modalHeading","author","name","bookingHeading","bookingHelp","bookingForm","bookingDatesSubmitButtonWrapper","openBookingForm","priceContainer","priceValue","perUnit","bookButton","closedListingButton","defaultProps","bookingUnitType","ownListing","isRequired","timeSlot","error"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { intlShape, injectIntl } from 'react-intl';\nimport { arrayOf, bool, func, node, oneOfType, shape, string } from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport { propTypes, LISTING_STATE_CLOSED, LINE_ITEM_NIGHT, LINE_ITEM_DAY } from '../../util/types';\nimport { formatMoney } from '../../util/currency';\nimport { parse, stringify } from '../../util/urlHelpers';\nimport config from '../../config';\nimport { ModalInMobile, Button } from '../../components';\nimport { BookingDatesForm } from '../../forms';\n\nimport css from './BookingPanel.css';\n\n// This defines when ModalInMobile shows content as Modal\nconst MODAL_BREAKPOINT = 1023;\n\nconst priceData = (price, intl) => {\n  if (price && price.currency === config.currency) {\n    const formattedPrice = formatMoney(intl, price);\n    return { formattedPrice, priceTitle: formattedPrice };\n  } else if (price) {\n    return {\n      formattedPrice: `(${price.currency})`,\n      priceTitle: `Unsupported currency (${price.currency})`,\n    };\n  }\n  return {};\n};\n\nconst openBookModal = (isOwnListing, isClosed, history, location) => {\n  if (isOwnListing || isClosed) {\n    window.scrollTo(0, 0);\n  } else {\n    const { pathname, search, state } = location;\n    const searchString = `?${stringify({ ...parse(search), book: true })}`;\n    history.push(`${pathname}${searchString}`, state);\n  }\n};\n\nconst closeBookModal = (history, location) => {\n  const { pathname, search, state } = location;\n  const searchParams = omit(parse(search), 'book');\n  const searchString = `?${stringify(searchParams)}`;\n  history.push(`${pathname}${searchString}`, state);\n};\n\nconst BookingPanel = props => {\n  const {\n    rootClassName,\n    className,\n    titleClassName,\n    listing,\n    isOwnListing,\n    unitType,\n    onSubmit,\n    title,\n    subTitle,\n    authorDisplayName,\n    onManageDisableScrolling,\n    timeSlots,\n    fetchTimeSlotsError,\n    history,\n    location,\n    intl,\n  } = props;\n\n  const price = listing.attributes.price;\n  const hasListingState = !!listing.attributes.state;\n  const isClosed = hasListingState && listing.attributes.state === LISTING_STATE_CLOSED;\n  const showBookingDatesForm = hasListingState && !isClosed;\n  const showClosedListingHelpText = listing.id && isClosed;\n  const { formattedPrice, priceTitle } = priceData(price, intl);\n  const isBook = !!parse(location.search).book;\n\n  const subTitleText = !!subTitle\n    ? subTitle\n    : showClosedListingHelpText\n    ? intl.formatMessage({ id: 'BookingPanel.subTitleClosedListing' })\n    : null;\n\n  const isNightly = unitType === LINE_ITEM_NIGHT;\n  const isDaily = unitType === LINE_ITEM_DAY;\n\n  const unitTranslationKey = isNightly\n    ? 'BookingPanel.perNight'\n    : isDaily\n    ? 'BookingPanel.perDay'\n    : 'BookingPanel.perUnit';\n\n  const classes = classNames(rootClassName || css.root, className);\n  const titleClasses = classNames(titleClassName || css.bookingTitle);\n\n  return (\n    <div className={classes}>\n      <ModalInMobile\n        containerClassName={css.modalContainer}\n        id=\"BookingDatesFormInModal\"\n        isModalOpenOnMobile={isBook}\n        onClose={() => closeBookModal(history, location)}\n        showAsModalMaxWidth={MODAL_BREAKPOINT}\n        onManageDisableScrolling={onManageDisableScrolling}\n      >\n        <div className={css.modalHeading}>\n          <h1 className={css.title}>{title}</h1>\n          <div className={css.author}>\n            <FormattedMessage id=\"BookingPanel.hostedBy\" values={{ name: authorDisplayName }} />\n          </div>\n        </div>\n\n        <div className={css.bookingHeading}>\n          <h2 className={titleClasses}>{title}</h2>\n          {subTitleText ? <div className={css.bookingHelp}>{subTitleText}</div> : null}\n        </div>\n        {showBookingDatesForm ? (\n          <BookingDatesForm\n            className={css.bookingForm}\n            submitButtonWrapperClassName={css.bookingDatesSubmitButtonWrapper}\n            unitType={unitType}\n            onSubmit={onSubmit}\n            price={price}\n            isOwnListing={isOwnListing}\n            timeSlots={timeSlots}\n            fetchTimeSlotsError={fetchTimeSlotsError}\n          />\n        ) : null}\n      </ModalInMobile>\n      <div className={css.openBookingForm}>\n        <div className={css.priceContainer}>\n          <div className={css.priceValue} title={priceTitle}>\n            {formattedPrice}\n          </div>\n          <div className={css.perUnit}>\n            <FormattedMessage id={unitTranslationKey} />\n          </div>\n        </div>\n\n        {showBookingDatesForm ? (\n          <Button\n            rootClassName={css.bookButton}\n            onClick={() => openBookModal(isOwnListing, isClosed, history, location)}\n          >\n            <FormattedMessage id=\"BookingPanel.ctaButtonMessage\" />\n          </Button>\n        ) : (\n          <div className={css.closedListingButton}>\n            <FormattedMessage id=\"BookingPanel.closedListingButtonText\" />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nBookingPanel.defaultProps = {\n  rootClassName: null,\n  className: null,\n  titleClassName: null,\n  isOwnListing: false,\n  subTitle: null,\n  unitType: config.bookingUnitType,\n  timeSlots: null,\n  fetchTimeSlotsError: null,\n};\n\nBookingPanel.propTypes = {\n  rootClassName: string,\n  className: string,\n  titleClassName: string,\n  listing: oneOfType([propTypes.listing, propTypes.ownListing]),\n  isOwnListing: bool,\n  unitType: propTypes.bookingUnitType,\n  onSubmit: func.isRequired,\n  title: oneOfType([node, string]).isRequired,\n  subTitle: oneOfType([node, string]),\n  authorDisplayName: string.isRequired,\n  onManageDisableScrolling: func.isRequired,\n  timeSlots: arrayOf(propTypes.timeSlot),\n  fetchTimeSlotsError: propTypes.error,\n\n  // from withRouter\n  history: shape({\n    push: func.isRequired,\n  }).isRequired,\n  location: shape({\n    search: string,\n  }).isRequired,\n\n  // from injectIntl\n  intl: intlShape.isRequired,\n};\n\nexport default compose(\n  withRouter,\n  injectIntl\n)(BookingPanel);\n"]},"metadata":{},"sourceType":"module"}