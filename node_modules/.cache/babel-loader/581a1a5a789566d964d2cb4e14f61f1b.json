{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/TopbarDesktop/TopbarDesktop.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, intlShape } from 'react-intl';\nimport classNames from 'classnames';\nimport { ACCOUNT_SETTINGS_PAGES } from '../../routeConfiguration';\nimport { propTypes } from '../../util/types';\nimport { Avatar, InlineTextButton, Logo, Menu, MenuLabel, MenuContent, MenuItem, NamedLink } from '../../components';\nimport { TopbarSearchForm } from '../../forms';\nimport css from './TopbarDesktop.css';\n\nconst TopbarDesktop = props => {\n  const className = props.className,\n        currentUser = props.currentUser,\n        currentPage = props.currentPage,\n        rootClassName = props.rootClassName,\n        currentUserHasListings = props.currentUserHasListings,\n        notificationCount = props.notificationCount,\n        intl = props.intl,\n        isAuthenticated = props.isAuthenticated,\n        onLogout = props.onLogout,\n        onSearchSubmit = props.onSearchSubmit,\n        initialSearchFormValues = props.initialSearchFormValues;\n  const classes = classNames(rootClassName || css.root, className);\n  const search = React.createElement(TopbarSearchForm, {\n    className: css.searchLink,\n    desktopInputRoot: css.topbarSearchWithLeftPadding,\n    form: \"TopbarSearchFormDesktop\",\n    onSubmit: onSearchSubmit,\n    initialValues: initialSearchFormValues,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  });\n  const notificationDot = notificationCount > 0 ? React.createElement(\"div\", {\n    className: css.notificationDot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }) : null;\n  const inboxLink = isAuthenticated ? React.createElement(NamedLink, {\n    className: css.inboxLink,\n    name: \"InboxPage\",\n    params: {\n      tab: currentUserHasListings ? 'sales' : 'orders'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: css.inbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"TopbarDesktop.inbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), notificationDot)) : null;\n\n  const currentPageClass = page => {\n    const isAccountSettingsPage = page === 'AccountSettingsPage' && ACCOUNT_SETTINGS_PAGES.includes(currentPage);\n    return currentPage === page || isAccountSettingsPage ? css.currentPage : null;\n  };\n\n  const profileMenu = isAuthenticated ? React.createElement(Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(MenuLabel, {\n    className: css.profileMenuLabel,\n    isOpenClassName: css.profileMenuIsOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: css.avatar,\n    user: currentUser,\n    disableProfileLink: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(MenuContent, {\n    className: css.profileMenuContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    key: \"ManageListingsPage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(NamedLink, {\n    className: classNames(css.yourListingsLink, currentPageClass('ManageListingsPage')),\n    name: \"ManageListingsPage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: css.menuItemBorder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(FormattedMessage, {\n    id: \"TopbarDesktop.yourListingsLink\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }))), React.createElement(MenuItem, {\n    key: \"ProfileSettingsPage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(NamedLink, {\n    className: classNames(css.profileSettingsLink, currentPageClass('ProfileSettingsPage')),\n    name: \"ProfileSettingsPage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: css.menuItemBorder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(FormattedMessage, {\n    id: \"TopbarDesktop.profileSettingsLink\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }))), React.createElement(MenuItem, {\n    key: \"AccountSettingsPage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(NamedLink, {\n    className: classNames(css.yourListingsLink, currentPageClass('AccountSettingsPage')),\n    name: \"AccountSettingsPage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: css.menuItemBorder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(FormattedMessage, {\n    id: \"TopbarDesktop.accountSettingsLink\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }))), React.createElement(MenuItem, {\n    key: \"logout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(InlineTextButton, {\n    rootClassName: css.logoutButton,\n    onClick: onLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: css.menuItemBorder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(FormattedMessage, {\n    id: \"TopbarDesktop.logout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }))))) : null;\n  const signupLink = isAuthenticated ? null : React.createElement(NamedLink, {\n    name: \"SignupPage\",\n    className: css.signupLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: css.signup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"TopbarDesktop.signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })));\n  const loginLink = isAuthenticated ? null : React.createElement(NamedLink, {\n    name: \"LoginPage\",\n    className: css.loginLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: css.login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"TopbarDesktop.login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })));\n  return React.createElement(\"nav\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(NamedLink, {\n    className: css.logoLink,\n    name: \"LandingPage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Logo, {\n    format: \"desktop\",\n    className: css.logo,\n    alt: intl.formatMessage({\n      id: 'TopbarDesktop.logo'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })), search, React.createElement(NamedLink, {\n    className: css.createListingLink,\n    name: \"NewListingPage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: css.createListing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"TopbarDesktop.createListing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }))), inboxLink, profileMenu, signupLink, loginLink);\n};\n\nconst bool = PropTypes.bool,\n      func = PropTypes.func,\n      object = PropTypes.object,\n      number = PropTypes.number,\n      string = PropTypes.string;\nTopbarDesktop.defaultProps = {\n  rootClassName: null,\n  className: null,\n  currentUser: null,\n  currentPage: null,\n  notificationCount: 0,\n  initialSearchFormValues: {}\n};\nTopbarDesktop.propTypes = {\n  rootClassName: string,\n  className: string,\n  currentUserHasListings: bool.isRequired,\n  currentUser: propTypes.currentUser,\n  currentPage: string,\n  isAuthenticated: bool.isRequired,\n  onLogout: func.isRequired,\n  notificationCount: number,\n  onSearchSubmit: func.isRequired,\n  initialSearchFormValues: object,\n  intl: intlShape.isRequired\n};\nexport default TopbarDesktop;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/TopbarDesktop/TopbarDesktop.js"],"names":["React","PropTypes","FormattedMessage","intlShape","classNames","ACCOUNT_SETTINGS_PAGES","propTypes","Avatar","InlineTextButton","Logo","Menu","MenuLabel","MenuContent","MenuItem","NamedLink","TopbarSearchForm","css","TopbarDesktop","props","className","currentUser","currentPage","rootClassName","currentUserHasListings","notificationCount","intl","isAuthenticated","onLogout","onSearchSubmit","initialSearchFormValues","classes","root","search","searchLink","topbarSearchWithLeftPadding","notificationDot","inboxLink","tab","inbox","currentPageClass","page","isAccountSettingsPage","includes","profileMenu","profileMenuLabel","profileMenuIsOpen","avatar","profileMenuContent","yourListingsLink","menuItemBorder","profileSettingsLink","logoutButton","signupLink","signup","loginLink","login","logoLink","logo","formatMessage","id","createListingLink","createListing","bool","func","object","number","string","defaultProps","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, intlShape } from 'react-intl';\nimport classNames from 'classnames';\nimport { ACCOUNT_SETTINGS_PAGES } from '../../routeConfiguration';\nimport { propTypes } from '../../util/types';\nimport {\n  Avatar,\n  InlineTextButton,\n  Logo,\n  Menu,\n  MenuLabel,\n  MenuContent,\n  MenuItem,\n  NamedLink,\n} from '../../components';\nimport { TopbarSearchForm } from '../../forms';\n\nimport css from './TopbarDesktop.css';\n\nconst TopbarDesktop = props => {\n  const {\n    className,\n    currentUser,\n    currentPage,\n    rootClassName,\n    currentUserHasListings,\n    notificationCount,\n    intl,\n    isAuthenticated,\n    onLogout,\n    onSearchSubmit,\n    initialSearchFormValues,\n  } = props;\n\n  const classes = classNames(rootClassName || css.root, className);\n\n  const search = (\n    <TopbarSearchForm\n      className={css.searchLink}\n      desktopInputRoot={css.topbarSearchWithLeftPadding}\n      form=\"TopbarSearchFormDesktop\"\n      onSubmit={onSearchSubmit}\n      initialValues={initialSearchFormValues}\n    />\n  );\n\n  const notificationDot = notificationCount > 0 ? <div className={css.notificationDot} /> : null;\n\n  const inboxLink = isAuthenticated ? (\n    <NamedLink\n      className={css.inboxLink}\n      name=\"InboxPage\"\n      params={{ tab: currentUserHasListings ? 'sales' : 'orders' }}\n    >\n      <span className={css.inbox}>\n        <FormattedMessage id=\"TopbarDesktop.inbox\" />\n        {notificationDot}\n      </span>\n    </NamedLink>\n  ) : null;\n\n  const currentPageClass = page => {\n    const isAccountSettingsPage =\n      page === 'AccountSettingsPage' && ACCOUNT_SETTINGS_PAGES.includes(currentPage);\n    return currentPage === page || isAccountSettingsPage ? css.currentPage : null;\n  };\n\n  const profileMenu = isAuthenticated ? (\n    <Menu>\n      <MenuLabel className={css.profileMenuLabel} isOpenClassName={css.profileMenuIsOpen}>\n        <Avatar className={css.avatar} user={currentUser} disableProfileLink />\n      </MenuLabel>\n      <MenuContent className={css.profileMenuContent}>\n        <MenuItem key=\"ManageListingsPage\">\n          <NamedLink\n            className={classNames(css.yourListingsLink, currentPageClass('ManageListingsPage'))}\n            name=\"ManageListingsPage\"\n          >\n            <span className={css.menuItemBorder} />\n            <FormattedMessage id=\"TopbarDesktop.yourListingsLink\" />\n          </NamedLink>\n        </MenuItem>\n        <MenuItem key=\"ProfileSettingsPage\">\n          <NamedLink\n            className={classNames(css.profileSettingsLink, currentPageClass('ProfileSettingsPage'))}\n            name=\"ProfileSettingsPage\"\n          >\n            <span className={css.menuItemBorder} />\n            <FormattedMessage id=\"TopbarDesktop.profileSettingsLink\" />\n          </NamedLink>\n        </MenuItem>\n        <MenuItem key=\"AccountSettingsPage\">\n          <NamedLink\n            className={classNames(css.yourListingsLink, currentPageClass('AccountSettingsPage'))}\n            name=\"AccountSettingsPage\"\n          >\n            <span className={css.menuItemBorder} />\n            <FormattedMessage id=\"TopbarDesktop.accountSettingsLink\" />\n          </NamedLink>\n        </MenuItem>\n        <MenuItem key=\"logout\">\n          <InlineTextButton rootClassName={css.logoutButton} onClick={onLogout}>\n            <span className={css.menuItemBorder} />\n            <FormattedMessage id=\"TopbarDesktop.logout\" />\n          </InlineTextButton>\n        </MenuItem>\n      </MenuContent>\n    </Menu>\n  ) : null;\n\n  const signupLink = isAuthenticated ? null : (\n    <NamedLink name=\"SignupPage\" className={css.signupLink}>\n      <span className={css.signup}>\n        <FormattedMessage id=\"TopbarDesktop.signup\" />\n      </span>\n    </NamedLink>\n  );\n\n  const loginLink = isAuthenticated ? null : (\n    <NamedLink name=\"LoginPage\" className={css.loginLink}>\n      <span className={css.login}>\n        <FormattedMessage id=\"TopbarDesktop.login\" />\n      </span>\n    </NamedLink>\n  );\n\n  return (\n    <nav className={classes}>\n      <NamedLink className={css.logoLink} name=\"LandingPage\">\n        <Logo\n          format=\"desktop\"\n          className={css.logo}\n          alt={intl.formatMessage({ id: 'TopbarDesktop.logo' })}\n        />\n      </NamedLink>\n      {search}\n      <NamedLink className={css.createListingLink} name=\"NewListingPage\">\n        <span className={css.createListing}>\n          <FormattedMessage id=\"TopbarDesktop.createListing\" />\n        </span>\n      </NamedLink>\n      {inboxLink}\n      {profileMenu}\n      {signupLink}\n      {loginLink}\n    </nav>\n  );\n};\n\nconst { bool, func, object, number, string } = PropTypes;\n\nTopbarDesktop.defaultProps = {\n  rootClassName: null,\n  className: null,\n  currentUser: null,\n  currentPage: null,\n  notificationCount: 0,\n  initialSearchFormValues: {},\n};\n\nTopbarDesktop.propTypes = {\n  rootClassName: string,\n  className: string,\n  currentUserHasListings: bool.isRequired,\n  currentUser: propTypes.currentUser,\n  currentPage: string,\n  isAuthenticated: bool.isRequired,\n  onLogout: func.isRequired,\n  notificationCount: number,\n  onSearchSubmit: func.isRequired,\n  initialSearchFormValues: object,\n  intl: intlShape.isRequired,\n};\n\nexport default TopbarDesktop;\n"]},"metadata":{},"sourceType":"module"}