{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/ValidationError/ValidationError.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport css from './ValidationError.css';\n/**\n * This component can be used to show validation errors next to form\n * input fields. The component takes the final-form Field component\n * `meta` object as a prop and infers if an error message should be\n * shown.\n */\n\nconst ValidationError = props => {\n  const rootClassName = props.rootClassName,\n        className = props.className,\n        fieldMeta = props.fieldMeta;\n  const touched = fieldMeta.touched,\n        error = fieldMeta.error;\n  const classes = classNames(rootClassName || css.root, className);\n  return touched && error ? React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, error) : null;\n};\n\nValidationError.defaultProps = {\n  rootClassName: null,\n  className: null\n};\nconst shape = PropTypes.shape,\n      bool = PropTypes.bool,\n      string = PropTypes.string;\nValidationError.propTypes = {\n  rootClassName: string,\n  className: string,\n  fieldMeta: shape({\n    touched: bool.isRequired,\n    error: string\n  }).isRequired\n};\nexport default ValidationError;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/ValidationError/ValidationError.js"],"names":["React","PropTypes","classNames","css","ValidationError","props","rootClassName","className","fieldMeta","touched","error","classes","root","defaultProps","shape","bool","string","propTypes","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA;;;;;;;AAMA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAAA,QACvBC,aADuB,GACiBD,KADjB,CACvBC,aADuB;AAAA,QACRC,SADQ,GACiBF,KADjB,CACRE,SADQ;AAAA,QACGC,SADH,GACiBH,KADjB,CACGG,SADH;AAAA,QAEvBC,OAFuB,GAEJD,SAFI,CAEvBC,OAFuB;AAAA,QAEdC,KAFc,GAEJF,SAFI,CAEdE,KAFc;AAG/B,QAAMC,OAAO,GAAGT,UAAU,CAACI,aAAa,IAAIH,GAAG,CAACS,IAAtB,EAA4BL,SAA5B,CAA1B;AACA,SAAOE,OAAO,IAAIC,KAAX,GAAmB;AAAK,IAAA,SAAS,EAAEC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BD,KAA1B,CAAnB,GAA4D,IAAnE;AACD,CALD;;AAOAN,eAAe,CAACS,YAAhB,GAA+B;AAAEP,EAAAA,aAAa,EAAE,IAAjB;AAAuBC,EAAAA,SAAS,EAAE;AAAlC,CAA/B;MAEQO,K,GAAwBb,S,CAAxBa,K;MAAOC,I,GAAiBd,S,CAAjBc,I;MAAMC,M,GAAWf,S,CAAXe,M;AAErBZ,eAAe,CAACa,SAAhB,GAA4B;AAC1BX,EAAAA,aAAa,EAAEU,MADW;AAE1BT,EAAAA,SAAS,EAAES,MAFe;AAG1BR,EAAAA,SAAS,EAAEM,KAAK,CAAC;AACfL,IAAAA,OAAO,EAAEM,IAAI,CAACG,UADC;AAEfR,IAAAA,KAAK,EAAEM;AAFQ,GAAD,CAAL,CAGRE;AANuB,CAA5B;AASA,eAAed,eAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport css from './ValidationError.css';\n\n/**\n * This component can be used to show validation errors next to form\n * input fields. The component takes the final-form Field component\n * `meta` object as a prop and infers if an error message should be\n * shown.\n */\nconst ValidationError = props => {\n  const { rootClassName, className, fieldMeta } = props;\n  const { touched, error } = fieldMeta;\n  const classes = classNames(rootClassName || css.root, className);\n  return touched && error ? <div className={classes}>{error}</div> : null;\n};\n\nValidationError.defaultProps = { rootClassName: null, className: null };\n\nconst { shape, bool, string } = PropTypes;\n\nValidationError.propTypes = {\n  rootClassName: string,\n  className: string,\n  fieldMeta: shape({\n    touched: bool.isRequired,\n    error: string,\n  }).isRequired,\n};\n\nexport default ValidationError;\n"]},"metadata":{},"sourceType":"module"}