{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/forms/EnquiryForm/EnquiryForm.js\";\nimport React from 'react';\nimport { string, bool } from 'prop-types';\nimport { compose } from 'redux';\nimport { FormattedMessage, injectIntl, intlShape } from 'react-intl';\nimport { Form as FinalForm } from 'react-final-form';\nimport classNames from 'classnames';\nimport { Form, PrimaryButton, FieldTextInput, IconEnquiry } from '../../components';\nimport * as validators from '../../util/validators';\nimport { propTypes } from '../../util/types';\nimport css from './EnquiryForm.css';\n\nconst EnquiryFormComponent = props => React.createElement(FinalForm, Object.assign({}, props, {\n  render: fieldRenderProps => {\n    const rootClassName = fieldRenderProps.rootClassName,\n          className = fieldRenderProps.className,\n          submitButtonWrapperClassName = fieldRenderProps.submitButtonWrapperClassName,\n          formId = fieldRenderProps.formId,\n          handleSubmit = fieldRenderProps.handleSubmit,\n          inProgress = fieldRenderProps.inProgress,\n          intl = fieldRenderProps.intl,\n          listingTitle = fieldRenderProps.listingTitle,\n          authorDisplayName = fieldRenderProps.authorDisplayName,\n          sendEnquiryError = fieldRenderProps.sendEnquiryError;\n    const messageLabel = intl.formatMessage({\n      id: 'EnquiryForm.messageLabel'\n    }, {\n      authorDisplayName\n    });\n    const messagePlaceholder = intl.formatMessage({\n      id: 'EnquiryForm.messagePlaceholder'\n    }, {\n      authorDisplayName\n    });\n    const messageRequiredMessage = intl.formatMessage({\n      id: 'EnquiryForm.messageRequired'\n    });\n    const messageRequired = validators.requiredAndNonEmptyString(messageRequiredMessage);\n    const classes = classNames(rootClassName || css.root, className);\n    const submitInProgress = inProgress;\n    const submitDisabled = submitInProgress;\n    return React.createElement(Form, {\n      className: classes,\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(IconEnquiry, {\n      className: css.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: css.heading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"EnquiryForm.heading\",\n      values: {\n        listingTitle\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(FieldTextInput, {\n      className: css.field,\n      type: \"textarea\",\n      name: \"message\",\n      id: formId ? \"\".concat(formId, \".message\") : 'message',\n      label: messageLabel,\n      placeholder: messagePlaceholder,\n      validate: messageRequired,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: submitButtonWrapperClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, sendEnquiryError ? React.createElement(\"p\", {\n      className: css.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"EnquiryForm.sendEnquiryError\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })) : null, React.createElement(PrimaryButton, {\n      type: \"submit\",\n      inProgress: submitInProgress,\n      disabled: submitDisabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"EnquiryForm.submitButtonText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }))));\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}));\n\nEnquiryFormComponent.defaultProps = {\n  rootClassName: null,\n  className: null,\n  submitButtonWrapperClassName: null,\n  inProgress: false,\n  sendEnquiryError: null\n};\nEnquiryFormComponent.propTypes = {\n  rootClassName: string,\n  className: string,\n  submitButtonWrapperClassName: string,\n  inProgress: bool,\n  listingTitle: string.isRequired,\n  authorDisplayName: string.isRequired,\n  sendEnquiryError: propTypes.error,\n  // from injectIntl\n  intl: intlShape.isRequired\n};\nconst EnquiryForm = compose(injectIntl)(EnquiryFormComponent);\nEnquiryForm.displayName = 'EnquiryForm';\nexport default EnquiryForm;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/forms/EnquiryForm/EnquiryForm.js"],"names":["React","string","bool","compose","FormattedMessage","injectIntl","intlShape","Form","FinalForm","classNames","PrimaryButton","FieldTextInput","IconEnquiry","validators","propTypes","css","EnquiryFormComponent","props","fieldRenderProps","rootClassName","className","submitButtonWrapperClassName","formId","handleSubmit","inProgress","intl","listingTitle","authorDisplayName","sendEnquiryError","messageLabel","formatMessage","id","messagePlaceholder","messageRequiredMessage","messageRequired","requiredAndNonEmptyString","classes","root","submitInProgress","submitDisabled","icon","heading","field","error","defaultProps","isRequired","EnquiryForm","displayName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,YAA7B;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,EAAuCC,SAAvC,QAAwD,YAAxD;AACA,SAASC,IAAI,IAAIC,SAAjB,QAAkC,kBAAlC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASF,IAAT,EAAeG,aAAf,EAA8BC,cAA9B,EAA8CC,WAA9C,QAAiE,kBAAjE;AACA,OAAO,KAAKC,UAAZ,MAA4B,uBAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,MAAMC,oBAAoB,GAAGC,KAAK,IAChC,oBAAC,SAAD,oBACMA,KADN;AAEE,EAAA,MAAM,EAAEC,gBAAgB,IAAI;AAAA,UAExBC,aAFwB,GAYtBD,gBAZsB,CAExBC,aAFwB;AAAA,UAGxBC,SAHwB,GAYtBF,gBAZsB,CAGxBE,SAHwB;AAAA,UAIxBC,4BAJwB,GAYtBH,gBAZsB,CAIxBG,4BAJwB;AAAA,UAKxBC,MALwB,GAYtBJ,gBAZsB,CAKxBI,MALwB;AAAA,UAMxBC,YANwB,GAYtBL,gBAZsB,CAMxBK,YANwB;AAAA,UAOxBC,UAPwB,GAYtBN,gBAZsB,CAOxBM,UAPwB;AAAA,UAQxBC,IARwB,GAYtBP,gBAZsB,CAQxBO,IARwB;AAAA,UASxBC,YATwB,GAYtBR,gBAZsB,CASxBQ,YATwB;AAAA,UAUxBC,iBAVwB,GAYtBT,gBAZsB,CAUxBS,iBAVwB;AAAA,UAWxBC,gBAXwB,GAYtBV,gBAZsB,CAWxBU,gBAXwB;AAc1B,UAAMC,YAAY,GAAGJ,IAAI,CAACK,aAAL,CACnB;AACEC,MAAAA,EAAE,EAAE;AADN,KADmB,EAInB;AAAEJ,MAAAA;AAAF,KAJmB,CAArB;AAMA,UAAMK,kBAAkB,GAAGP,IAAI,CAACK,aAAL,CACzB;AACEC,MAAAA,EAAE,EAAE;AADN,KADyB,EAIzB;AAAEJ,MAAAA;AAAF,KAJyB,CAA3B;AAMA,UAAMM,sBAAsB,GAAGR,IAAI,CAACK,aAAL,CAAmB;AAChDC,MAAAA,EAAE,EAAE;AAD4C,KAAnB,CAA/B;AAGA,UAAMG,eAAe,GAAGrB,UAAU,CAACsB,yBAAX,CAAqCF,sBAArC,CAAxB;AAEA,UAAMG,OAAO,GAAG3B,UAAU,CAACU,aAAa,IAAIJ,GAAG,CAACsB,IAAtB,EAA4BjB,SAA5B,CAA1B;AACA,UAAMkB,gBAAgB,GAAGd,UAAzB;AACA,UAAMe,cAAc,GAAGD,gBAAvB;AAEA,WACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAEF,OAAjB;AAA0B,MAAA,QAAQ,EAAEb,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAER,GAAG,CAACyB,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAI,MAAA,SAAS,EAAEzB,GAAG,CAAC0B,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,qBAArB;AAA2C,MAAA,MAAM,EAAE;AAAEf,QAAAA;AAAF,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,EAKE,oBAAC,cAAD;AACE,MAAA,SAAS,EAAEX,GAAG,CAAC2B,KADjB;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,IAAI,EAAC,SAHP;AAIE,MAAA,EAAE,EAAEpB,MAAM,aAAMA,MAAN,gBAAyB,SAJrC;AAKE,MAAA,KAAK,EAAEO,YALT;AAME,MAAA,WAAW,EAAEG,kBANf;AAOE,MAAA,QAAQ,EAAEE,eAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAcE;AAAK,MAAA,SAAS,EAAEb,4BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGO,gBAAgB,GACf;AAAG,MAAA,SAAS,EAAEb,GAAG,CAAC4B,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,8BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADe,GAIb,IALN,EAME,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAC,QAApB;AAA6B,MAAA,UAAU,EAAEL,gBAAzC;AAA2D,MAAA,QAAQ,EAAEC,cAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,8BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,CAdF,CADF;AA2BD,GAhEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAqEAvB,oBAAoB,CAAC4B,YAArB,GAAoC;AAClCzB,EAAAA,aAAa,EAAE,IADmB;AAElCC,EAAAA,SAAS,EAAE,IAFuB;AAGlCC,EAAAA,4BAA4B,EAAE,IAHI;AAIlCG,EAAAA,UAAU,EAAE,KAJsB;AAKlCI,EAAAA,gBAAgB,EAAE;AALgB,CAApC;AAQAZ,oBAAoB,CAACF,SAArB,GAAiC;AAC/BK,EAAAA,aAAa,EAAElB,MADgB;AAE/BmB,EAAAA,SAAS,EAAEnB,MAFoB;AAG/BoB,EAAAA,4BAA4B,EAAEpB,MAHC;AAK/BuB,EAAAA,UAAU,EAAEtB,IALmB;AAO/BwB,EAAAA,YAAY,EAAEzB,MAAM,CAAC4C,UAPU;AAQ/BlB,EAAAA,iBAAiB,EAAE1B,MAAM,CAAC4C,UARK;AAS/BjB,EAAAA,gBAAgB,EAAEd,SAAS,CAAC6B,KATG;AAW/B;AACAlB,EAAAA,IAAI,EAAEnB,SAAS,CAACuC;AAZe,CAAjC;AAeA,MAAMC,WAAW,GAAG3C,OAAO,CAACE,UAAD,CAAP,CAAoBW,oBAApB,CAApB;AAEA8B,WAAW,CAACC,WAAZ,GAA0B,aAA1B;AAEA,eAAeD,WAAf","sourcesContent":["import React from 'react';\nimport { string, bool } from 'prop-types';\nimport { compose } from 'redux';\nimport { FormattedMessage, injectIntl, intlShape } from 'react-intl';\nimport { Form as FinalForm } from 'react-final-form';\nimport classNames from 'classnames';\nimport { Form, PrimaryButton, FieldTextInput, IconEnquiry } from '../../components';\nimport * as validators from '../../util/validators';\nimport { propTypes } from '../../util/types';\n\nimport css from './EnquiryForm.css';\n\nconst EnquiryFormComponent = props => (\n  <FinalForm\n    {...props}\n    render={fieldRenderProps => {\n      const {\n        rootClassName,\n        className,\n        submitButtonWrapperClassName,\n        formId,\n        handleSubmit,\n        inProgress,\n        intl,\n        listingTitle,\n        authorDisplayName,\n        sendEnquiryError,\n      } = fieldRenderProps;\n\n      const messageLabel = intl.formatMessage(\n        {\n          id: 'EnquiryForm.messageLabel',\n        },\n        { authorDisplayName }\n      );\n      const messagePlaceholder = intl.formatMessage(\n        {\n          id: 'EnquiryForm.messagePlaceholder',\n        },\n        { authorDisplayName }\n      );\n      const messageRequiredMessage = intl.formatMessage({\n        id: 'EnquiryForm.messageRequired',\n      });\n      const messageRequired = validators.requiredAndNonEmptyString(messageRequiredMessage);\n\n      const classes = classNames(rootClassName || css.root, className);\n      const submitInProgress = inProgress;\n      const submitDisabled = submitInProgress;\n\n      return (\n        <Form className={classes} onSubmit={handleSubmit}>\n          <IconEnquiry className={css.icon} />\n          <h2 className={css.heading}>\n            <FormattedMessage id=\"EnquiryForm.heading\" values={{ listingTitle }} />\n          </h2>\n          <FieldTextInput\n            className={css.field}\n            type=\"textarea\"\n            name=\"message\"\n            id={formId ? `${formId}.message` : 'message'}\n            label={messageLabel}\n            placeholder={messagePlaceholder}\n            validate={messageRequired}\n          />\n          <div className={submitButtonWrapperClassName}>\n            {sendEnquiryError ? (\n              <p className={css.error}>\n                <FormattedMessage id=\"EnquiryForm.sendEnquiryError\" />\n              </p>\n            ) : null}\n            <PrimaryButton type=\"submit\" inProgress={submitInProgress} disabled={submitDisabled}>\n              <FormattedMessage id=\"EnquiryForm.submitButtonText\" />\n            </PrimaryButton>\n          </div>\n        </Form>\n      );\n    }}\n  />\n);\n\nEnquiryFormComponent.defaultProps = {\n  rootClassName: null,\n  className: null,\n  submitButtonWrapperClassName: null,\n  inProgress: false,\n  sendEnquiryError: null,\n};\n\nEnquiryFormComponent.propTypes = {\n  rootClassName: string,\n  className: string,\n  submitButtonWrapperClassName: string,\n\n  inProgress: bool,\n\n  listingTitle: string.isRequired,\n  authorDisplayName: string.isRequired,\n  sendEnquiryError: propTypes.error,\n\n  // from injectIntl\n  intl: intlShape.isRequired,\n};\n\nconst EnquiryForm = compose(injectIntl)(EnquiryFormComponent);\n\nEnquiryForm.displayName = 'EnquiryForm';\n\nexport default EnquiryForm;\n"]},"metadata":{},"sourceType":"module"}