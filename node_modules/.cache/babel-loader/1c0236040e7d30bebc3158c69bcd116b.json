{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/TransactionPanel/TransactionPanel.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport classNames from 'classnames';\nimport { txIsAccepted, txIsCanceled, txIsDeclined, txIsEnquired, txIsRequested, txHasBeenDelivered } from '../../util/transaction';\nimport { LINE_ITEM_NIGHT, LINE_ITEM_DAY, propTypes } from '../../util/types';\nimport { ensureListing, ensureTransaction, ensureUser, userDisplayNameAsString } from '../../util/data';\nimport { isMobileSafari } from '../../util/userAgent';\nimport { formatMoney } from '../../util/currency';\nimport { AvatarLarge, BookingPanel, ReviewModal, UserDisplayName } from '../../components';\nimport { SendMessageForm } from '../../forms';\nimport config from '../../config'; // These are internal components that make this file more readable.\n\nimport AddressLinkMaybe from './AddressLinkMaybe';\nimport BreakdownMaybe from './BreakdownMaybe';\nimport DetailCardHeadingsMaybe from './DetailCardHeadingsMaybe';\nimport DetailCardImage from './DetailCardImage';\nimport FeedSection from './FeedSection';\nimport SaleActionButtonsMaybe from './SaleActionButtonsMaybe';\nimport PanelHeading, { HEADING_ENQUIRED, HEADING_REQUESTED, HEADING_ACCEPTED, HEADING_DECLINED, HEADING_CANCELED, HEADING_DELIVERED } from './PanelHeading';\nimport css from './TransactionPanel.css'; // Helper function to get display names for different roles\n\nconst displayNames = (currentUser, currentProvider, currentCustomer, intl) => {\n  const authorDisplayName = React.createElement(UserDisplayName, {\n    user: currentProvider,\n    intl: intl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  });\n  const customerDisplayName = React.createElement(UserDisplayName, {\n    user: currentCustomer,\n    intl: intl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  });\n  let otherUserDisplayName = '';\n  let otherUserDisplayNameString = '';\n  const currentUserIsCustomer = currentUser.id && currentCustomer.id && currentUser.id.uuid === currentCustomer.id.uuid;\n  const currentUserIsProvider = currentUser.id && currentProvider.id && currentUser.id.uuid === currentProvider.id.uuid;\n\n  if (currentUserIsCustomer) {\n    otherUserDisplayName = authorDisplayName;\n    otherUserDisplayNameString = userDisplayNameAsString(currentProvider, '');\n  } else if (currentUserIsProvider) {\n    otherUserDisplayName = customerDisplayName;\n    otherUserDisplayNameString = userDisplayNameAsString(currentCustomer, '');\n  }\n\n  return {\n    authorDisplayName,\n    customerDisplayName,\n    otherUserDisplayName,\n    otherUserDisplayNameString\n  };\n};\n\nexport class TransactionPanelComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sendMessageFormFocused: false,\n      isReviewModalOpen: false,\n      reviewSubmitted: false\n    };\n    this.isMobSaf = false;\n    this.sendMessageFormName = 'TransactionPanel.SendMessageForm';\n    this.onOpenReviewModal = this.onOpenReviewModal.bind(this);\n    this.onSubmitReview = this.onSubmitReview.bind(this);\n    this.onSendMessageFormFocus = this.onSendMessageFormFocus.bind(this);\n    this.onSendMessageFormBlur = this.onSendMessageFormBlur.bind(this);\n    this.onMessageSubmit = this.onMessageSubmit.bind(this);\n    this.scrollToMessage = this.scrollToMessage.bind(this);\n  }\n\n  componentWillMount() {\n    this.isMobSaf = isMobileSafari();\n  }\n\n  onOpenReviewModal() {\n    this.setState({\n      isReviewModalOpen: true\n    });\n  }\n\n  onSubmitReview(values) {\n    const _this$props = this.props,\n          onSendReview = _this$props.onSendReview,\n          transaction = _this$props.transaction,\n          transactionRole = _this$props.transactionRole;\n    const currentTransaction = ensureTransaction(transaction);\n    const reviewRating = values.reviewRating,\n          reviewContent = values.reviewContent;\n    const rating = Number.parseInt(reviewRating, 10);\n    onSendReview(transactionRole, currentTransaction, rating, reviewContent).then(r => this.setState({\n      isReviewModalOpen: false,\n      reviewSubmitted: true\n    })).catch(e => {// Do nothing.\n    });\n  }\n\n  onSendMessageFormFocus() {\n    this.setState({\n      sendMessageFormFocused: true\n    });\n\n    if (this.isMobSaf) {\n      // Scroll to bottom\n      window.scroll({\n        top: document.body.scrollHeight,\n        left: 0,\n        behavior: 'smooth'\n      });\n    }\n  }\n\n  onSendMessageFormBlur() {\n    this.setState({\n      sendMessageFormFocused: false\n    });\n  }\n\n  onMessageSubmit(values, form) {\n    const message = values.message ? values.message.trim() : null;\n    const _this$props2 = this.props,\n          transaction = _this$props2.transaction,\n          onSendMessage = _this$props2.onSendMessage;\n    const ensuredTransaction = ensureTransaction(transaction);\n\n    if (!message) {\n      return;\n    }\n\n    onSendMessage(ensuredTransaction.id, message).then(messageId => {\n      form.reset();\n      this.scrollToMessage(messageId);\n    }).catch(e => {// Ignore, Redux handles the error\n    });\n  }\n\n  scrollToMessage(messageId) {\n    const selector = \"#msg-\".concat(messageId.uuid);\n    const el = document.querySelector(selector);\n\n    if (el) {\n      el.scrollIntoView({\n        block: 'start',\n        behavior: 'smooth'\n      });\n    }\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          rootClassName = _this$props3.rootClassName,\n          className = _this$props3.className,\n          currentUser = _this$props3.currentUser,\n          transaction = _this$props3.transaction,\n          totalMessagePages = _this$props3.totalMessagePages,\n          oldestMessagePageFetched = _this$props3.oldestMessagePageFetched,\n          messages = _this$props3.messages,\n          initialMessageFailed = _this$props3.initialMessageFailed,\n          fetchMessagesInProgress = _this$props3.fetchMessagesInProgress,\n          fetchMessagesError = _this$props3.fetchMessagesError,\n          sendMessageInProgress = _this$props3.sendMessageInProgress,\n          sendMessageError = _this$props3.sendMessageError,\n          sendReviewInProgress = _this$props3.sendReviewInProgress,\n          sendReviewError = _this$props3.sendReviewError,\n          onManageDisableScrolling = _this$props3.onManageDisableScrolling,\n          onShowMoreMessages = _this$props3.onShowMoreMessages,\n          transactionRole = _this$props3.transactionRole,\n          intl = _this$props3.intl,\n          onAcceptSale = _this$props3.onAcceptSale,\n          onDeclineSale = _this$props3.onDeclineSale,\n          acceptInProgress = _this$props3.acceptInProgress,\n          declineInProgress = _this$props3.declineInProgress,\n          acceptSaleError = _this$props3.acceptSaleError,\n          declineSaleError = _this$props3.declineSaleError,\n          onSubmitBookingRequest = _this$props3.onSubmitBookingRequest,\n          timeSlots = _this$props3.timeSlots,\n          fetchTimeSlotsError = _this$props3.fetchTimeSlotsError;\n    const currentTransaction = ensureTransaction(transaction);\n    const currentListing = ensureListing(currentTransaction.listing);\n    const currentProvider = ensureUser(currentTransaction.provider);\n    const currentCustomer = ensureUser(currentTransaction.customer);\n    const isCustomer = transactionRole === 'customer';\n    const isProvider = transactionRole === 'provider';\n    const listingLoaded = !!currentListing.id;\n    const listingDeleted = listingLoaded && currentListing.attributes.deleted;\n    const iscustomerLoaded = !!currentCustomer.id;\n    const isCustomerBanned = iscustomerLoaded && currentCustomer.attributes.banned;\n    const isCustomerDeleted = iscustomerLoaded && currentCustomer.attributes.deleted;\n    const isProviderLoaded = !!currentProvider.id;\n    const isProviderBanned = isProviderLoaded && currentProvider.attributes.banned;\n    const isProviderDeleted = isProviderLoaded && currentProvider.attributes.deleted;\n\n    const stateDataFn = tx => {\n      if (txIsEnquired(tx)) {\n        return {\n          headingState: HEADING_ENQUIRED,\n          showBookingPanel: isCustomer && !isProviderBanned\n        };\n      } else if (txIsRequested(tx)) {\n        return {\n          headingState: HEADING_REQUESTED,\n          showDetailCardHeadings: isCustomer,\n          showSaleButtons: isProvider && !isCustomerBanned\n        };\n      } else if (txIsAccepted(tx)) {\n        return {\n          headingState: HEADING_ACCEPTED,\n          showDetailCardHeadings: isCustomer,\n          showAddress: isCustomer\n        };\n      } else if (txIsDeclined(tx)) {\n        return {\n          headingState: HEADING_DECLINED,\n          showDetailCardHeadings: isCustomer\n        };\n      } else if (txIsCanceled(tx)) {\n        return {\n          headingState: HEADING_CANCELED,\n          showDetailCardHeadings: isCustomer\n        };\n      } else if (txHasBeenDelivered(tx)) {\n        return {\n          headingState: HEADING_DELIVERED,\n          showDetailCardHeadings: isCustomer,\n          showAddress: isCustomer\n        };\n      } else {\n        return {\n          headingState: 'unknown'\n        };\n      }\n    };\n\n    const stateData = stateDataFn(currentTransaction);\n    const deletedListingTitle = intl.formatMessage({\n      id: 'TransactionPanel.deletedListingTitle'\n    });\n\n    const _displayNames = displayNames(currentUser, currentProvider, currentCustomer, intl),\n          authorDisplayName = _displayNames.authorDisplayName,\n          customerDisplayName = _displayNames.customerDisplayName,\n          otherUserDisplayName = _displayNames.otherUserDisplayName,\n          otherUserDisplayNameString = _displayNames.otherUserDisplayNameString;\n\n    const _currentListing$attri = currentListing.attributes,\n          publicData = _currentListing$attri.publicData,\n          geolocation = _currentListing$attri.geolocation;\n    const location = publicData && publicData.location ? publicData.location : {};\n    const listingTitle = currentListing.attributes.deleted ? deletedListingTitle : currentListing.attributes.title;\n    const unitType = config.bookingUnitType;\n    const isNightly = unitType === LINE_ITEM_NIGHT;\n    const isDaily = unitType === LINE_ITEM_DAY;\n    const unitTranslationKey = isNightly ? 'TransactionPanel.perNight' : isDaily ? 'TransactionPanel.perDay' : 'TransactionPanel.perUnit';\n    const price = currentListing.attributes.price;\n    const bookingSubTitle = price ? \"\".concat(formatMoney(intl, price), \" \").concat(intl.formatMessage({\n      id: unitTranslationKey\n    })) : '';\n    const firstImage = currentListing.images && currentListing.images.length > 0 ? currentListing.images[0] : null;\n    const saleButtons = React.createElement(SaleActionButtonsMaybe, {\n      showButtons: stateData.showSaleButtons,\n      acceptInProgress: acceptInProgress,\n      declineInProgress: declineInProgress,\n      acceptSaleError: acceptSaleError,\n      declineSaleError: declineSaleError,\n      onAcceptSale: () => onAcceptSale(currentTransaction.id),\n      onDeclineSale: () => onDeclineSale(currentTransaction.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    });\n    const showSendMessageForm = !isCustomerBanned && !isCustomerDeleted && !isProviderBanned && !isProviderDeleted;\n    const sendMessagePlaceholder = intl.formatMessage({\n      id: 'TransactionPanel.sendMessagePlaceholder'\n    }, {\n      name: otherUserDisplayNameString\n    });\n    const sendingMessageNotAllowed = intl.formatMessage({\n      id: 'TransactionPanel.sendingMessageNotAllowed'\n    });\n    const classes = classNames(rootClassName || css.root, className);\n    return React.createElement(\"div\", {\n      className: classes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: css.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: css.txInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(DetailCardImage, {\n      rootClassName: css.imageWrapperMobile,\n      avatarWrapperClassName: css.avatarWrapperMobile,\n      listingTitle: listingTitle,\n      image: firstImage,\n      provider: currentProvider,\n      isCustomer: isCustomer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }), isProvider ? React.createElement(\"div\", {\n      className: css.avatarWrapperProviderDesktop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(AvatarLarge, {\n      user: currentCustomer,\n      className: css.avatarDesktop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    })) : null, React.createElement(PanelHeading, {\n      panelHeadingState: stateData.headingState,\n      transactionRole: transactionRole,\n      providerName: authorDisplayName,\n      customerName: customerDisplayName,\n      isCustomerBanned: isCustomerBanned,\n      listingId: currentListing.id && currentListing.id.uuid,\n      listingTitle: listingTitle,\n      listingDeleted: listingDeleted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: css.bookingDetailsMobile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(AddressLinkMaybe, {\n      rootClassName: css.addressMobile,\n      location: location,\n      geolocation: geolocation,\n      showAddress: stateData.showAddress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }), React.createElement(BreakdownMaybe, {\n      transaction: currentTransaction,\n      transactionRole: transactionRole,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    })), React.createElement(FeedSection, {\n      rootClassName: css.feedContainer,\n      currentTransaction: currentTransaction,\n      currentUser: currentUser,\n      fetchMessagesError: fetchMessagesError,\n      fetchMessagesInProgress: fetchMessagesInProgress,\n      initialMessageFailed: initialMessageFailed,\n      messages: messages,\n      oldestMessagePageFetched: oldestMessagePageFetched,\n      onOpenReviewModal: this.onOpenReviewModal,\n      onShowMoreMessages: () => onShowMoreMessages(currentTransaction.id),\n      totalMessagePages: totalMessagePages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }), showSendMessageForm ? React.createElement(SendMessageForm, {\n      form: this.sendMessageFormName,\n      rootClassName: css.sendMessageForm,\n      messagePlaceholder: sendMessagePlaceholder,\n      inProgress: sendMessageInProgress,\n      sendMessageError: sendMessageError,\n      onFocus: this.onSendMessageFormFocus,\n      onBlur: this.onSendMessageFormBlur,\n      onSubmit: this.onMessageSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: css.sendingMessageNotAllowed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, sendingMessageNotAllowed), stateData.showSaleButtons ? React.createElement(\"div\", {\n      className: css.mobileActionButtons,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, saleButtons) : null), React.createElement(\"div\", {\n      className: css.asideDesktop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: css.detailCard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(DetailCardImage, {\n      avatarWrapperClassName: css.avatarWrapperDesktop,\n      listingTitle: listingTitle,\n      image: firstImage,\n      provider: currentProvider,\n      isCustomer: isCustomer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }), React.createElement(DetailCardHeadingsMaybe, {\n      showDetailCardHeadings: stateData.showDetailCardHeadings,\n      listingTitle: listingTitle,\n      subTitle: bookingSubTitle,\n      location: location,\n      geolocation: geolocation,\n      showAddress: stateData.showAddress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }), stateData.showBookingPanel ? React.createElement(BookingPanel, {\n      className: css.bookingPanel,\n      titleClassName: css.bookingTitle,\n      isOwnListing: false,\n      listing: currentListing,\n      title: listingTitle,\n      subTitle: bookingSubTitle,\n      authorDisplayName: authorDisplayName,\n      onSubmit: onSubmitBookingRequest,\n      onManageDisableScrolling: onManageDisableScrolling,\n      timeSlots: timeSlots,\n      fetchTimeSlotsError: fetchTimeSlotsError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }) : null, React.createElement(BreakdownMaybe, {\n      className: css.breakdownContainer,\n      transaction: currentTransaction,\n      transactionRole: transactionRole,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }), stateData.showSaleButtons ? React.createElement(\"div\", {\n      className: css.desktopActionButtons,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, saleButtons) : null))), React.createElement(ReviewModal, {\n      id: \"ReviewOrderModal\",\n      isOpen: this.state.isReviewModalOpen,\n      onCloseModal: () => this.setState({\n        isReviewModalOpen: false\n      }),\n      onManageDisableScrolling: onManageDisableScrolling,\n      onSubmitReview: this.onSubmitReview,\n      revieweeName: otherUserDisplayName,\n      reviewSent: this.state.reviewSubmitted,\n      sendReviewInProgress: sendReviewInProgress,\n      sendReviewError: sendReviewError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }));\n  }\n\n}\nTransactionPanelComponent.defaultProps = {\n  rootClassName: null,\n  className: null,\n  currentUser: null,\n  acceptSaleError: null,\n  declineSaleError: null,\n  fetchMessagesError: null,\n  initialMessageFailed: null,\n  sendMessageError: null,\n  sendReviewError: null,\n  timeSlots: null,\n  fetchTimeSlotsError: null\n};\nconst arrayOf = PropTypes.arrayOf,\n      bool = PropTypes.bool,\n      func = PropTypes.func,\n      number = PropTypes.number,\n      string = PropTypes.string;\nTransactionPanelComponent.propTypes = {\n  rootClassName: string,\n  className: string,\n  currentUser: propTypes.currentUser,\n  transaction: propTypes.transaction.isRequired,\n  totalMessagePages: number.isRequired,\n  oldestMessagePageFetched: number.isRequired,\n  messages: arrayOf(propTypes.message).isRequired,\n  initialMessageFailed: bool,\n  fetchMessagesInProgress: bool.isRequired,\n  fetchMessagesError: propTypes.error,\n  sendMessageInProgress: bool.isRequired,\n  sendMessageError: propTypes.error,\n  sendReviewInProgress: bool.isRequired,\n  sendReviewError: propTypes.error,\n  onManageDisableScrolling: func.isRequired,\n  onShowMoreMessages: func.isRequired,\n  onSendMessage: func.isRequired,\n  onSendReview: func.isRequired,\n  onSubmitBookingRequest: func.isRequired,\n  timeSlots: arrayOf(propTypes.timeSlot),\n  fetchTimeSlotsError: propTypes.error,\n  // Sale related props\n  onAcceptSale: func.isRequired,\n  onDeclineSale: func.isRequired,\n  acceptInProgress: bool.isRequired,\n  declineInProgress: bool.isRequired,\n  acceptSaleError: propTypes.error,\n  declineSaleError: propTypes.error,\n  // from injectIntl\n  intl: intlShape\n};\nconst TransactionPanel = injectIntl(TransactionPanelComponent);\nexport default TransactionPanel;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/TransactionPanel/TransactionPanel.js"],"names":["React","Component","PropTypes","injectIntl","intlShape","classNames","txIsAccepted","txIsCanceled","txIsDeclined","txIsEnquired","txIsRequested","txHasBeenDelivered","LINE_ITEM_NIGHT","LINE_ITEM_DAY","propTypes","ensureListing","ensureTransaction","ensureUser","userDisplayNameAsString","isMobileSafari","formatMoney","AvatarLarge","BookingPanel","ReviewModal","UserDisplayName","SendMessageForm","config","AddressLinkMaybe","BreakdownMaybe","DetailCardHeadingsMaybe","DetailCardImage","FeedSection","SaleActionButtonsMaybe","PanelHeading","HEADING_ENQUIRED","HEADING_REQUESTED","HEADING_ACCEPTED","HEADING_DECLINED","HEADING_CANCELED","HEADING_DELIVERED","css","displayNames","currentUser","currentProvider","currentCustomer","intl","authorDisplayName","customerDisplayName","otherUserDisplayName","otherUserDisplayNameString","currentUserIsCustomer","id","uuid","currentUserIsProvider","TransactionPanelComponent","constructor","props","state","sendMessageFormFocused","isReviewModalOpen","reviewSubmitted","isMobSaf","sendMessageFormName","onOpenReviewModal","bind","onSubmitReview","onSendMessageFormFocus","onSendMessageFormBlur","onMessageSubmit","scrollToMessage","componentWillMount","setState","values","onSendReview","transaction","transactionRole","currentTransaction","reviewRating","reviewContent","rating","Number","parseInt","then","r","catch","e","window","scroll","top","document","body","scrollHeight","left","behavior","form","message","trim","onSendMessage","ensuredTransaction","messageId","reset","selector","el","querySelector","scrollIntoView","block","render","rootClassName","className","totalMessagePages","oldestMessagePageFetched","messages","initialMessageFailed","fetchMessagesInProgress","fetchMessagesError","sendMessageInProgress","sendMessageError","sendReviewInProgress","sendReviewError","onManageDisableScrolling","onShowMoreMessages","onAcceptSale","onDeclineSale","acceptInProgress","declineInProgress","acceptSaleError","declineSaleError","onSubmitBookingRequest","timeSlots","fetchTimeSlotsError","currentListing","listing","provider","customer","isCustomer","isProvider","listingLoaded","listingDeleted","attributes","deleted","iscustomerLoaded","isCustomerBanned","banned","isCustomerDeleted","isProviderLoaded","isProviderBanned","isProviderDeleted","stateDataFn","tx","headingState","showBookingPanel","showDetailCardHeadings","showSaleButtons","showAddress","stateData","deletedListingTitle","formatMessage","publicData","geolocation","location","listingTitle","title","unitType","bookingUnitType","isNightly","isDaily","unitTranslationKey","price","bookingSubTitle","firstImage","images","length","saleButtons","showSendMessageForm","sendMessagePlaceholder","name","sendingMessageNotAllowed","classes","root","container","txInfo","imageWrapperMobile","avatarWrapperMobile","avatarWrapperProviderDesktop","avatarDesktop","bookingDetailsMobile","addressMobile","feedContainer","sendMessageForm","mobileActionButtons","asideDesktop","detailCard","avatarWrapperDesktop","bookingPanel","bookingTitle","breakdownContainer","desktopActionButtons","defaultProps","arrayOf","bool","func","number","string","isRequired","error","timeSlot","TransactionPanel"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport classNames from 'classnames';\nimport {\n  txIsAccepted,\n  txIsCanceled,\n  txIsDeclined,\n  txIsEnquired,\n  txIsRequested,\n  txHasBeenDelivered,\n} from '../../util/transaction';\nimport { LINE_ITEM_NIGHT, LINE_ITEM_DAY, propTypes } from '../../util/types';\nimport {\n  ensureListing,\n  ensureTransaction,\n  ensureUser,\n  userDisplayNameAsString,\n} from '../../util/data';\nimport { isMobileSafari } from '../../util/userAgent';\nimport { formatMoney } from '../../util/currency';\nimport { AvatarLarge, BookingPanel, ReviewModal, UserDisplayName } from '../../components';\nimport { SendMessageForm } from '../../forms';\nimport config from '../../config';\n\n// These are internal components that make this file more readable.\nimport AddressLinkMaybe from './AddressLinkMaybe';\nimport BreakdownMaybe from './BreakdownMaybe';\nimport DetailCardHeadingsMaybe from './DetailCardHeadingsMaybe';\nimport DetailCardImage from './DetailCardImage';\nimport FeedSection from './FeedSection';\nimport SaleActionButtonsMaybe from './SaleActionButtonsMaybe';\nimport PanelHeading, {\n  HEADING_ENQUIRED,\n  HEADING_REQUESTED,\n  HEADING_ACCEPTED,\n  HEADING_DECLINED,\n  HEADING_CANCELED,\n  HEADING_DELIVERED,\n} from './PanelHeading';\n\nimport css from './TransactionPanel.css';\n\n// Helper function to get display names for different roles\nconst displayNames = (currentUser, currentProvider, currentCustomer, intl) => {\n  const authorDisplayName = <UserDisplayName user={currentProvider} intl={intl} />;\n  const customerDisplayName = <UserDisplayName user={currentCustomer} intl={intl} />;\n\n  let otherUserDisplayName = '';\n  let otherUserDisplayNameString = '';\n  const currentUserIsCustomer =\n    currentUser.id && currentCustomer.id && currentUser.id.uuid === currentCustomer.id.uuid;\n  const currentUserIsProvider =\n    currentUser.id && currentProvider.id && currentUser.id.uuid === currentProvider.id.uuid;\n\n  if (currentUserIsCustomer) {\n    otherUserDisplayName = authorDisplayName;\n    otherUserDisplayNameString = userDisplayNameAsString(currentProvider, '');\n  } else if (currentUserIsProvider) {\n    otherUserDisplayName = customerDisplayName;\n    otherUserDisplayNameString = userDisplayNameAsString(currentCustomer, '');\n  }\n\n  return {\n    authorDisplayName,\n    customerDisplayName,\n    otherUserDisplayName,\n    otherUserDisplayNameString,\n  };\n};\n\nexport class TransactionPanelComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sendMessageFormFocused: false,\n      isReviewModalOpen: false,\n      reviewSubmitted: false,\n    };\n    this.isMobSaf = false;\n    this.sendMessageFormName = 'TransactionPanel.SendMessageForm';\n\n    this.onOpenReviewModal = this.onOpenReviewModal.bind(this);\n    this.onSubmitReview = this.onSubmitReview.bind(this);\n    this.onSendMessageFormFocus = this.onSendMessageFormFocus.bind(this);\n    this.onSendMessageFormBlur = this.onSendMessageFormBlur.bind(this);\n    this.onMessageSubmit = this.onMessageSubmit.bind(this);\n    this.scrollToMessage = this.scrollToMessage.bind(this);\n  }\n\n  componentWillMount() {\n    this.isMobSaf = isMobileSafari();\n  }\n\n  onOpenReviewModal() {\n    this.setState({ isReviewModalOpen: true });\n  }\n\n  onSubmitReview(values) {\n    const { onSendReview, transaction, transactionRole } = this.props;\n    const currentTransaction = ensureTransaction(transaction);\n    const { reviewRating, reviewContent } = values;\n    const rating = Number.parseInt(reviewRating, 10);\n    onSendReview(transactionRole, currentTransaction, rating, reviewContent)\n      .then(r => this.setState({ isReviewModalOpen: false, reviewSubmitted: true }))\n      .catch(e => {\n        // Do nothing.\n      });\n  }\n\n  onSendMessageFormFocus() {\n    this.setState({ sendMessageFormFocused: true });\n    if (this.isMobSaf) {\n      // Scroll to bottom\n      window.scroll({ top: document.body.scrollHeight, left: 0, behavior: 'smooth' });\n    }\n  }\n\n  onSendMessageFormBlur() {\n    this.setState({ sendMessageFormFocused: false });\n  }\n\n  onMessageSubmit(values, form) {\n    const message = values.message ? values.message.trim() : null;\n    const { transaction, onSendMessage } = this.props;\n    const ensuredTransaction = ensureTransaction(transaction);\n\n    if (!message) {\n      return;\n    }\n    onSendMessage(ensuredTransaction.id, message)\n      .then(messageId => {\n        form.reset();\n        this.scrollToMessage(messageId);\n      })\n      .catch(e => {\n        // Ignore, Redux handles the error\n      });\n  }\n\n  scrollToMessage(messageId) {\n    const selector = `#msg-${messageId.uuid}`;\n    const el = document.querySelector(selector);\n    if (el) {\n      el.scrollIntoView({\n        block: 'start',\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  render() {\n    const {\n      rootClassName,\n      className,\n      currentUser,\n      transaction,\n      totalMessagePages,\n      oldestMessagePageFetched,\n      messages,\n      initialMessageFailed,\n      fetchMessagesInProgress,\n      fetchMessagesError,\n      sendMessageInProgress,\n      sendMessageError,\n      sendReviewInProgress,\n      sendReviewError,\n      onManageDisableScrolling,\n      onShowMoreMessages,\n      transactionRole,\n      intl,\n      onAcceptSale,\n      onDeclineSale,\n      acceptInProgress,\n      declineInProgress,\n      acceptSaleError,\n      declineSaleError,\n      onSubmitBookingRequest,\n      timeSlots,\n      fetchTimeSlotsError,\n    } = this.props;\n\n    const currentTransaction = ensureTransaction(transaction);\n    const currentListing = ensureListing(currentTransaction.listing);\n    const currentProvider = ensureUser(currentTransaction.provider);\n    const currentCustomer = ensureUser(currentTransaction.customer);\n    const isCustomer = transactionRole === 'customer';\n    const isProvider = transactionRole === 'provider';\n\n    const listingLoaded = !!currentListing.id;\n    const listingDeleted = listingLoaded && currentListing.attributes.deleted;\n    const iscustomerLoaded = !!currentCustomer.id;\n    const isCustomerBanned = iscustomerLoaded && currentCustomer.attributes.banned;\n    const isCustomerDeleted = iscustomerLoaded && currentCustomer.attributes.deleted;\n    const isProviderLoaded = !!currentProvider.id;\n    const isProviderBanned = isProviderLoaded && currentProvider.attributes.banned;\n    const isProviderDeleted = isProviderLoaded && currentProvider.attributes.deleted;\n\n    const stateDataFn = tx => {\n      if (txIsEnquired(tx)) {\n        return {\n          headingState: HEADING_ENQUIRED,\n          showBookingPanel: isCustomer && !isProviderBanned,\n        };\n      } else if (txIsRequested(tx)) {\n        return {\n          headingState: HEADING_REQUESTED,\n          showDetailCardHeadings: isCustomer,\n          showSaleButtons: isProvider && !isCustomerBanned,\n        };\n      } else if (txIsAccepted(tx)) {\n        return {\n          headingState: HEADING_ACCEPTED,\n          showDetailCardHeadings: isCustomer,\n          showAddress: isCustomer,\n        };\n      } else if (txIsDeclined(tx)) {\n        return {\n          headingState: HEADING_DECLINED,\n          showDetailCardHeadings: isCustomer,\n        };\n      } else if (txIsCanceled(tx)) {\n        return {\n          headingState: HEADING_CANCELED,\n          showDetailCardHeadings: isCustomer,\n        };\n      } else if (txHasBeenDelivered(tx)) {\n        return {\n          headingState: HEADING_DELIVERED,\n          showDetailCardHeadings: isCustomer,\n          showAddress: isCustomer,\n        };\n      } else {\n        return { headingState: 'unknown' };\n      }\n    };\n    const stateData = stateDataFn(currentTransaction);\n\n    const deletedListingTitle = intl.formatMessage({\n      id: 'TransactionPanel.deletedListingTitle',\n    });\n\n    const {\n      authorDisplayName,\n      customerDisplayName,\n      otherUserDisplayName,\n      otherUserDisplayNameString,\n    } = displayNames(currentUser, currentProvider, currentCustomer, intl);\n\n    const { publicData, geolocation } = currentListing.attributes;\n    const location = publicData && publicData.location ? publicData.location : {};\n    const listingTitle = currentListing.attributes.deleted\n      ? deletedListingTitle\n      : currentListing.attributes.title;\n\n    const unitType = config.bookingUnitType;\n    const isNightly = unitType === LINE_ITEM_NIGHT;\n    const isDaily = unitType === LINE_ITEM_DAY;\n\n    const unitTranslationKey = isNightly\n      ? 'TransactionPanel.perNight'\n      : isDaily\n      ? 'TransactionPanel.perDay'\n      : 'TransactionPanel.perUnit';\n\n    const price = currentListing.attributes.price;\n    const bookingSubTitle = price\n      ? `${formatMoney(intl, price)} ${intl.formatMessage({ id: unitTranslationKey })}`\n      : '';\n\n    const firstImage =\n      currentListing.images && currentListing.images.length > 0 ? currentListing.images[0] : null;\n\n    const saleButtons = (\n      <SaleActionButtonsMaybe\n        showButtons={stateData.showSaleButtons}\n        acceptInProgress={acceptInProgress}\n        declineInProgress={declineInProgress}\n        acceptSaleError={acceptSaleError}\n        declineSaleError={declineSaleError}\n        onAcceptSale={() => onAcceptSale(currentTransaction.id)}\n        onDeclineSale={() => onDeclineSale(currentTransaction.id)}\n      />\n    );\n\n    const showSendMessageForm =\n      !isCustomerBanned && !isCustomerDeleted && !isProviderBanned && !isProviderDeleted;\n\n    const sendMessagePlaceholder = intl.formatMessage(\n      { id: 'TransactionPanel.sendMessagePlaceholder' },\n      { name: otherUserDisplayNameString }\n    );\n\n    const sendingMessageNotAllowed = intl.formatMessage({\n      id: 'TransactionPanel.sendingMessageNotAllowed',\n    });\n\n    const classes = classNames(rootClassName || css.root, className);\n\n    return (\n      <div className={classes}>\n        <div className={css.container}>\n          <div className={css.txInfo}>\n            <DetailCardImage\n              rootClassName={css.imageWrapperMobile}\n              avatarWrapperClassName={css.avatarWrapperMobile}\n              listingTitle={listingTitle}\n              image={firstImage}\n              provider={currentProvider}\n              isCustomer={isCustomer}\n            />\n            {isProvider ? (\n              <div className={css.avatarWrapperProviderDesktop}>\n                <AvatarLarge user={currentCustomer} className={css.avatarDesktop} />\n              </div>\n            ) : null}\n\n            <PanelHeading\n              panelHeadingState={stateData.headingState}\n              transactionRole={transactionRole}\n              providerName={authorDisplayName}\n              customerName={customerDisplayName}\n              isCustomerBanned={isCustomerBanned}\n              listingId={currentListing.id && currentListing.id.uuid}\n              listingTitle={listingTitle}\n              listingDeleted={listingDeleted}\n            />\n\n            <div className={css.bookingDetailsMobile}>\n              <AddressLinkMaybe\n                rootClassName={css.addressMobile}\n                location={location}\n                geolocation={geolocation}\n                showAddress={stateData.showAddress}\n              />\n              <BreakdownMaybe transaction={currentTransaction} transactionRole={transactionRole} />\n            </div>\n\n            <FeedSection\n              rootClassName={css.feedContainer}\n              currentTransaction={currentTransaction}\n              currentUser={currentUser}\n              fetchMessagesError={fetchMessagesError}\n              fetchMessagesInProgress={fetchMessagesInProgress}\n              initialMessageFailed={initialMessageFailed}\n              messages={messages}\n              oldestMessagePageFetched={oldestMessagePageFetched}\n              onOpenReviewModal={this.onOpenReviewModal}\n              onShowMoreMessages={() => onShowMoreMessages(currentTransaction.id)}\n              totalMessagePages={totalMessagePages}\n            />\n            {showSendMessageForm ? (\n              <SendMessageForm\n                form={this.sendMessageFormName}\n                rootClassName={css.sendMessageForm}\n                messagePlaceholder={sendMessagePlaceholder}\n                inProgress={sendMessageInProgress}\n                sendMessageError={sendMessageError}\n                onFocus={this.onSendMessageFormFocus}\n                onBlur={this.onSendMessageFormBlur}\n                onSubmit={this.onMessageSubmit}\n              />\n            ) : (\n              <div className={css.sendingMessageNotAllowed}>{sendingMessageNotAllowed}</div>\n            )}\n\n            {stateData.showSaleButtons ? (\n              <div className={css.mobileActionButtons}>{saleButtons}</div>\n            ) : null}\n          </div>\n\n          <div className={css.asideDesktop}>\n            <div className={css.detailCard}>\n              <DetailCardImage\n                avatarWrapperClassName={css.avatarWrapperDesktop}\n                listingTitle={listingTitle}\n                image={firstImage}\n                provider={currentProvider}\n                isCustomer={isCustomer}\n              />\n\n              <DetailCardHeadingsMaybe\n                showDetailCardHeadings={stateData.showDetailCardHeadings}\n                listingTitle={listingTitle}\n                subTitle={bookingSubTitle}\n                location={location}\n                geolocation={geolocation}\n                showAddress={stateData.showAddress}\n              />\n              {stateData.showBookingPanel ? (\n                <BookingPanel\n                  className={css.bookingPanel}\n                  titleClassName={css.bookingTitle}\n                  isOwnListing={false}\n                  listing={currentListing}\n                  title={listingTitle}\n                  subTitle={bookingSubTitle}\n                  authorDisplayName={authorDisplayName}\n                  onSubmit={onSubmitBookingRequest}\n                  onManageDisableScrolling={onManageDisableScrolling}\n                  timeSlots={timeSlots}\n                  fetchTimeSlotsError={fetchTimeSlotsError}\n                />\n              ) : null}\n              <BreakdownMaybe\n                className={css.breakdownContainer}\n                transaction={currentTransaction}\n                transactionRole={transactionRole}\n              />\n\n              {stateData.showSaleButtons ? (\n                <div className={css.desktopActionButtons}>{saleButtons}</div>\n              ) : null}\n            </div>\n          </div>\n        </div>\n        <ReviewModal\n          id=\"ReviewOrderModal\"\n          isOpen={this.state.isReviewModalOpen}\n          onCloseModal={() => this.setState({ isReviewModalOpen: false })}\n          onManageDisableScrolling={onManageDisableScrolling}\n          onSubmitReview={this.onSubmitReview}\n          revieweeName={otherUserDisplayName}\n          reviewSent={this.state.reviewSubmitted}\n          sendReviewInProgress={sendReviewInProgress}\n          sendReviewError={sendReviewError}\n        />\n      </div>\n    );\n  }\n}\n\nTransactionPanelComponent.defaultProps = {\n  rootClassName: null,\n  className: null,\n  currentUser: null,\n  acceptSaleError: null,\n  declineSaleError: null,\n  fetchMessagesError: null,\n  initialMessageFailed: null,\n  sendMessageError: null,\n  sendReviewError: null,\n  timeSlots: null,\n  fetchTimeSlotsError: null,\n};\n\nconst { arrayOf, bool, func, number, string } = PropTypes;\n\nTransactionPanelComponent.propTypes = {\n  rootClassName: string,\n  className: string,\n\n  currentUser: propTypes.currentUser,\n  transaction: propTypes.transaction.isRequired,\n  totalMessagePages: number.isRequired,\n  oldestMessagePageFetched: number.isRequired,\n  messages: arrayOf(propTypes.message).isRequired,\n  initialMessageFailed: bool,\n  fetchMessagesInProgress: bool.isRequired,\n  fetchMessagesError: propTypes.error,\n  sendMessageInProgress: bool.isRequired,\n  sendMessageError: propTypes.error,\n  sendReviewInProgress: bool.isRequired,\n  sendReviewError: propTypes.error,\n  onManageDisableScrolling: func.isRequired,\n  onShowMoreMessages: func.isRequired,\n  onSendMessage: func.isRequired,\n  onSendReview: func.isRequired,\n  onSubmitBookingRequest: func.isRequired,\n  timeSlots: arrayOf(propTypes.timeSlot),\n  fetchTimeSlotsError: propTypes.error,\n\n  // Sale related props\n  onAcceptSale: func.isRequired,\n  onDeclineSale: func.isRequired,\n  acceptInProgress: bool.isRequired,\n  declineInProgress: bool.isRequired,\n  acceptSaleError: propTypes.error,\n  declineSaleError: propTypes.error,\n\n  // from injectIntl\n  intl: intlShape,\n};\n\nconst TransactionPanel = injectIntl(TransactionPanelComponent);\n\nexport default TransactionPanel;\n"]},"metadata":{},"sourceType":"module"}