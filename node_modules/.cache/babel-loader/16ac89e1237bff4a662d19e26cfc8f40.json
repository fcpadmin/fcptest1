{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/forms/EmailVerificationForm/EmailVerificationForm.js\";\nimport React from 'react';\nimport { bool } from 'prop-types';\nimport { compose } from 'redux';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Form as FinalForm, Field } from 'react-final-form';\nimport { Form, NamedLink, IconEmailAttention, IconEmailSuccess, PrimaryButton } from '../../components';\nimport { propTypes } from '../../util/types';\nimport css from './EmailVerificationForm.css';\n\nconst EmailVerificationFormComponent = props => React.createElement(FinalForm, Object.assign({}, props, {\n  render: formRenderProps => {\n    const currentUser = formRenderProps.currentUser,\n          inProgress = formRenderProps.inProgress,\n          handleSubmit = formRenderProps.handleSubmit,\n          verificationError = formRenderProps.verificationError;\n    const _currentUser$attribut = currentUser.attributes,\n          email = _currentUser$attribut.email,\n          emailVerified = _currentUser$attribut.emailVerified,\n          pendingEmail = _currentUser$attribut.pendingEmail,\n          profile = _currentUser$attribut.profile;\n    const emailToVerify = React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, pendingEmail || email);\n    const name = profile.firstName;\n    const errorMessage = React.createElement(\"div\", {\n      className: css.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"EmailVerificationForm.verificationFailed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n    const submitInProgress = inProgress;\n    const submitDisabled = submitInProgress;\n    const verifyEmail = React.createElement(\"div\", {\n      className: css.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(IconEmailAttention, {\n      className: css.modalIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: css.modalTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"EmailVerificationForm.verifyEmailAddress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: css.modalMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"EmailVerificationForm.finishAccountSetup\",\n      values: {\n        email: emailToVerify\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), verificationError ? errorMessage : null), React.createElement(Form, {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Field, {\n      component: \"input\",\n      type: \"hidden\",\n      name: \"verificationToken\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: css.bottomWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(PrimaryButton, {\n      type: \"submit\",\n      inProgress: submitInProgress,\n      disabled: submitDisabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, inProgress ? React.createElement(FormattedMessage, {\n      id: \"EmailVerificationForm.verifying\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }) : React.createElement(FormattedMessage, {\n      id: \"EmailVerificationForm.verify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })))));\n    const alreadyVerified = React.createElement(\"div\", {\n      className: css.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(IconEmailSuccess, {\n      className: css.modalIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: css.modalTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"EmailVerificationForm.successTitle\",\n      values: {\n        name\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: css.modalMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"EmailVerificationForm.successText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: css.bottomWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(NamedLink, {\n      className: css.submitButton,\n      name: \"LandingPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"EmailVerificationForm.successButtonText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))));\n    return emailVerified && !pendingEmail ? alreadyVerified : verifyEmail;\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}));\n\nEmailVerificationFormComponent.defaultProps = {\n  currentUser: null,\n  inProgress: false,\n  verificationError: null\n};\nEmailVerificationFormComponent.propTypes = {\n  inProgress: bool,\n  currentUser: propTypes.currentUser.isRequired,\n  verificationError: propTypes.error\n};\nconst EmailVerificationForm = compose(injectIntl)(EmailVerificationFormComponent);\nexport default EmailVerificationForm;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/forms/EmailVerificationForm/EmailVerificationForm.js"],"names":["React","bool","compose","FormattedMessage","injectIntl","Form","FinalForm","Field","NamedLink","IconEmailAttention","IconEmailSuccess","PrimaryButton","propTypes","css","EmailVerificationFormComponent","props","formRenderProps","currentUser","inProgress","handleSubmit","verificationError","attributes","email","emailVerified","pendingEmail","profile","emailToVerify","name","firstName","errorMessage","error","submitInProgress","submitDisabled","verifyEmail","root","modalIcon","modalTitle","modalMessage","bottomWrapper","alreadyVerified","submitButton","defaultProps","isRequired","EmailVerificationForm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { bool } from 'prop-types';\nimport { compose } from 'redux';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Form as FinalForm, Field } from 'react-final-form';\nimport {\n  Form,\n  NamedLink,\n  IconEmailAttention,\n  IconEmailSuccess,\n  PrimaryButton,\n} from '../../components';\nimport { propTypes } from '../../util/types';\n\nimport css from './EmailVerificationForm.css';\n\nconst EmailVerificationFormComponent = props => (\n  <FinalForm\n    {...props}\n    render={formRenderProps => {\n      const { currentUser, inProgress, handleSubmit, verificationError } = formRenderProps;\n\n      const { email, emailVerified, pendingEmail, profile } = currentUser.attributes;\n      const emailToVerify = <strong>{pendingEmail || email}</strong>;\n      const name = profile.firstName;\n\n      const errorMessage = (\n        <div className={css.error}>\n          <FormattedMessage id=\"EmailVerificationForm.verificationFailed\" />\n        </div>\n      );\n\n      const submitInProgress = inProgress;\n      const submitDisabled = submitInProgress;\n\n      const verifyEmail = (\n        <div className={css.root}>\n          <div>\n            <IconEmailAttention className={css.modalIcon} />\n            <h1 className={css.modalTitle}>\n              <FormattedMessage id=\"EmailVerificationForm.verifyEmailAddress\" />\n            </h1>\n\n            <p className={css.modalMessage}>\n              <FormattedMessage\n                id=\"EmailVerificationForm.finishAccountSetup\"\n                values={{ email: emailToVerify }}\n              />\n            </p>\n\n            {verificationError ? errorMessage : null}\n          </div>\n\n          <Form onSubmit={handleSubmit}>\n            <Field component=\"input\" type=\"hidden\" name=\"verificationToken\" />\n\n            <div className={css.bottomWrapper}>\n              <PrimaryButton type=\"submit\" inProgress={submitInProgress} disabled={submitDisabled}>\n                {inProgress ? (\n                  <FormattedMessage id=\"EmailVerificationForm.verifying\" />\n                ) : (\n                  <FormattedMessage id=\"EmailVerificationForm.verify\" />\n                )}\n              </PrimaryButton>\n            </div>\n          </Form>\n        </div>\n      );\n\n      const alreadyVerified = (\n        <div className={css.root}>\n          <div>\n            <IconEmailSuccess className={css.modalIcon} />\n            <h1 className={css.modalTitle}>\n              <FormattedMessage id=\"EmailVerificationForm.successTitle\" values={{ name }} />\n            </h1>\n\n            <p className={css.modalMessage}>\n              <FormattedMessage id=\"EmailVerificationForm.successText\" />\n            </p>\n          </div>\n\n          <div className={css.bottomWrapper}>\n            <NamedLink className={css.submitButton} name=\"LandingPage\">\n              <FormattedMessage id=\"EmailVerificationForm.successButtonText\" />\n            </NamedLink>\n          </div>\n        </div>\n      );\n\n      return emailVerified && !pendingEmail ? alreadyVerified : verifyEmail;\n    }}\n  />\n);\n\nEmailVerificationFormComponent.defaultProps = {\n  currentUser: null,\n  inProgress: false,\n  verificationError: null,\n};\n\nEmailVerificationFormComponent.propTypes = {\n  inProgress: bool,\n  currentUser: propTypes.currentUser.isRequired,\n  verificationError: propTypes.error,\n};\n\nconst EmailVerificationForm = compose(injectIntl)(EmailVerificationFormComponent);\n\nexport default EmailVerificationForm;\n"]},"metadata":{},"sourceType":"module"}