{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/containers/InboxPage/InboxPage.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { FormattedMessage, injectIntl, intlShape } from 'react-intl';\nimport moment from 'moment';\nimport classNames from 'classnames';\nimport { txIsAccepted, txIsCanceled, txIsDeclined, txIsEnquired, txIsRequested, txHasBeenDelivered } from '../../util/transaction';\nimport { LINE_ITEM_DAY, LINE_ITEM_UNITS, propTypes } from '../../util/types';\nimport { formatMoney } from '../../util/currency';\nimport { ensureCurrentUser } from '../../util/data';\nimport { dateFromAPIToLocalNoon, daysBetween } from '../../util/dates';\nimport { getMarketplaceEntities } from '../../ducks/marketplaceData.duck';\nimport { isScrollingDisabled } from '../../ducks/UI.duck';\nimport { Avatar, NamedLink, NotificationBadge, Page, PaginationLinks, TabNav, LayoutSideNavigation, LayoutWrapperMain, LayoutWrapperSideNav, LayoutWrapperTopbar, LayoutWrapperFooter, Footer, IconSpinner, UserDisplayName } from '../../components';\nimport { TopbarContainer, NotFoundPage } from '../../containers';\nimport config from '../../config';\nimport { loadData } from './InboxPage.duck';\nimport css from './InboxPage.css';\nconst arrayOf = PropTypes.arrayOf,\n      bool = PropTypes.bool,\n      number = PropTypes.number,\n      oneOf = PropTypes.oneOf,\n      shape = PropTypes.shape,\n      string = PropTypes.string;\n\nconst formatDate = (intl, date) => {\n  return {\n    short: intl.formatDate(date, {\n      month: 'short',\n      day: 'numeric'\n    }),\n    long: \"\".concat(intl.formatDate(date), \" \").concat(intl.formatTime(date))\n  };\n}; // Translated name of the state of the given transaction\n\n\nexport const txState = (intl, tx, type) => {\n  const isOrder = type === 'order';\n\n  if (txIsEnquired(tx)) {\n    return {\n      nameClassName: isOrder ? css.nameNotEmphasized : css.nameEmphasized,\n      bookingClassName: css.bookingActionNeeded,\n      lastTransitionedAtClassName: css.lastTransitionedAtEmphasized,\n      stateClassName: css.stateActionNeeded,\n      state: intl.formatMessage({\n        id: 'InboxPage.stateEnquiry'\n      })\n    };\n  } else if (txIsRequested(tx)) {\n    const requested = isOrder ? {\n      nameClassName: css.nameNotEmphasized,\n      bookingClassName: css.bookingNoActionNeeded,\n      lastTransitionedAtClassName: css.lastTransitionedAtEmphasized,\n      stateClassName: css.stateActionNeeded,\n      state: intl.formatMessage({\n        id: 'InboxPage.stateRequested'\n      })\n    } : {\n      nameClassName: css.nameEmphasized,\n      bookingClassName: css.bookingActionNeeded,\n      lastTransitionedAtClassName: css.lastTransitionedAtEmphasized,\n      stateClassName: css.stateActionNeeded,\n      state: intl.formatMessage({\n        id: 'InboxPage.statePending'\n      })\n    };\n    return requested;\n  } else if (txIsDeclined(tx)) {\n    return {\n      nameClassName: css.nameNotEmphasized,\n      bookingClassName: css.bookingNoActionNeeded,\n      lastTransitionedAtClassName: css.lastTransitionedAtNotEmphasized,\n      stateClassName: css.stateNoActionNeeded,\n      state: intl.formatMessage({\n        id: 'InboxPage.stateDeclined'\n      })\n    };\n  } else if (txIsAccepted(tx)) {\n    return {\n      nameClassName: css.nameNotEmphasized,\n      bookingClassName: css.bookingNoActionNeeded,\n      lastTransitionedAtClassName: css.lastTransitionedAtNotEmphasized,\n      stateClassName: css.stateSucces,\n      state: intl.formatMessage({\n        id: 'InboxPage.stateAccepted'\n      })\n    };\n  } else if (txIsCanceled(tx)) {\n    return {\n      nameClassName: css.nameNotEmphasized,\n      bookingClassName: css.bookingNoActionNeeded,\n      lastTransitionedAtClassName: css.lastTransitionedAtNotEmphasized,\n      stateClassName: css.stateNoActionNeeded,\n      state: intl.formatMessage({\n        id: 'InboxPage.stateCanceled'\n      })\n    };\n  } else if (txHasBeenDelivered(tx)) {\n    return {\n      nameClassName: css.nameNotEmphasized,\n      bookingClassName: css.bookingNoActionNeeded,\n      lastTransitionedAtClassName: css.lastTransitionedAtNotEmphasized,\n      stateClassName: css.stateNoActionNeeded,\n      state: intl.formatMessage({\n        id: 'InboxPage.stateDelivered'\n      })\n    };\n  } else {\n    console.warn('This transition is unknown:', tx.attributes.lastTransition);\n    return null;\n  }\n};\n\nconst bookingData = (unitType, tx, isOrder, intl) => {\n  // Attributes: displayStart and displayEnd can be used to differentiate shown time range\n  // from actual start and end times used for availability reservation. It can help in situations\n  // where there are preparation time needed between bookings.\n  // Read more: https://www.sharetribe.com/api-reference/#bookings\n  const _tx$booking$attribute = tx.booking.attributes,\n        start = _tx$booking$attribute.start,\n        end = _tx$booking$attribute.end,\n        displayStart = _tx$booking$attribute.displayStart,\n        displayEnd = _tx$booking$attribute.displayEnd;\n  const startDate = dateFromAPIToLocalNoon(displayStart || start);\n  const endDateRaw = dateFromAPIToLocalNoon(displayEnd || end);\n  const isDaily = unitType === LINE_ITEM_DAY;\n  const isUnits = unitType === LINE_ITEM_UNITS;\n  const isSingleDay = isDaily && daysBetween(startDate, endDateRaw) === 1;\n  const bookingStart = formatDate(intl, startDate); // Shift the exclusive API end date with daily bookings\n\n  const endDate = isDaily || isUnits ? moment(endDateRaw).subtract(1, 'days').toDate() : endDateRaw;\n  const bookingEnd = formatDate(intl, endDate);\n  const bookingPrice = isOrder ? tx.attributes.payinTotal : tx.attributes.payoutTotal;\n  const price = formatMoney(intl, bookingPrice);\n  return {\n    bookingStart,\n    bookingEnd,\n    price,\n    isSingleDay\n  };\n}; // Functional component as internal helper to print BookingInfo if that is needed\n\n\nconst BookingInfoMaybe = props => {\n  const bookingClassName = props.bookingClassName,\n        isOrder = props.isOrder,\n        intl = props.intl,\n        tx = props.tx,\n        unitType = props.unitType;\n  const isEnquiry = txIsEnquired(tx);\n\n  if (isEnquiry) {\n    return null;\n  }\n\n  const _bookingData = bookingData(unitType, tx, isOrder, intl),\n        bookingStart = _bookingData.bookingStart,\n        bookingEnd = _bookingData.bookingEnd,\n        price = _bookingData.price,\n        isSingleDay = _bookingData.isSingleDay;\n\n  const dateInfo = isSingleDay ? bookingStart.short : \"\".concat(bookingStart.short, \" - \").concat(bookingEnd.short);\n  return React.createElement(\"div\", {\n    className: classNames(css.bookingInfo, bookingClassName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, dateInfo, React.createElement(\"span\", {\n    className: css.itemPrice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, price));\n};\n\nBookingInfoMaybe.propTypes = {\n  intl: intlShape.isRequired,\n  isOrder: bool.isRequired,\n  tx: propTypes.transaction.isRequired,\n  unitType: propTypes.bookingUnitType.isRequired\n};\nexport const InboxItem = props => {\n  const unitType = props.unitType,\n        type = props.type,\n        tx = props.tx,\n        intl = props.intl,\n        stateData = props.stateData;\n  const customer = tx.customer,\n        provider = tx.provider;\n  const isOrder = type === 'order';\n  const otherUser = isOrder ? provider : customer;\n  const otherUserDisplayName = React.createElement(UserDisplayName, {\n    user: otherUser,\n    intl: intl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  });\n  const isOtherUserBanned = otherUser.attributes.banned;\n  const isSaleNotification = !isOrder && txIsRequested(tx);\n  const rowNotificationDot = isSaleNotification ? React.createElement(\"div\", {\n    className: css.notificationDot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }) : null;\n  const lastTransitionedAt = formatDate(intl, tx.attributes.lastTransitionedAt);\n  const linkClasses = classNames(css.itemLink, {\n    [css.bannedUserLink]: isOtherUserBanned\n  });\n  return React.createElement(\"div\", {\n    className: css.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css.itemAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    user: otherUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  })), React.createElement(NamedLink, {\n    className: linkClasses,\n    name: isOrder ? 'OrderDetailsPage' : 'SaleDetailsPage',\n    params: {\n      id: tx.id.uuid\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css.rowNotificationDot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, rowNotificationDot), React.createElement(\"div\", {\n    className: css.itemInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classNames(css.itemUsername, stateData.nameClassName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, otherUserDisplayName), React.createElement(BookingInfoMaybe, {\n    bookingClassName: stateData.bookingClassName,\n    intl: intl,\n    isOrder: isOrder,\n    tx: tx,\n    unitType: unitType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: css.itemState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classNames(css.stateName, stateData.stateClassName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, stateData.state), React.createElement(\"div\", {\n    className: classNames(css.lastTransitionedAt, stateData.lastTransitionedAtClassName),\n    title: lastTransitionedAt.long,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, lastTransitionedAt.short))));\n};\nInboxItem.propTypes = {\n  unitType: propTypes.bookingUnitType.isRequired,\n  type: oneOf(['order', 'sale']).isRequired,\n  tx: propTypes.transaction.isRequired,\n  intl: intlShape.isRequired\n};\nexport const InboxPageComponent = props => {\n  const unitType = props.unitType,\n        currentUser = props.currentUser,\n        fetchInProgress = props.fetchInProgress,\n        fetchOrdersOrSalesError = props.fetchOrdersOrSalesError,\n        intl = props.intl,\n        pagination = props.pagination,\n        params = props.params,\n        providerNotificationCount = props.providerNotificationCount,\n        scrollingDisabled = props.scrollingDisabled,\n        transactions = props.transactions;\n  const tab = params.tab;\n  const ensuredCurrentUser = ensureCurrentUser(currentUser);\n  const validTab = tab === 'orders' || tab === 'sales';\n\n  if (!validTab) {\n    return React.createElement(NotFoundPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    });\n  }\n\n  const isOrders = tab === 'orders';\n  const ordersTitle = intl.formatMessage({\n    id: 'InboxPage.ordersTitle'\n  });\n  const salesTitle = intl.formatMessage({\n    id: 'InboxPage.salesTitle'\n  });\n  const title = isOrders ? ordersTitle : salesTitle;\n\n  const toTxItem = tx => {\n    const type = isOrders ? 'order' : 'sale';\n    const stateData = txState(intl, tx, type); // Render InboxItem only if the latest transition of the transaction is handled in the `txState` function.\n\n    return stateData ? React.createElement(\"li\", {\n      key: tx.id.uuid,\n      className: css.listItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(InboxItem, {\n      unitType: unitType,\n      type: type,\n      tx: tx,\n      intl: intl,\n      stateData: stateData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    })) : null;\n  };\n\n  const error = fetchOrdersOrSalesError ? React.createElement(\"p\", {\n    className: css.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"InboxPage.fetchFailed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  })) : null;\n  const noResults = !fetchInProgress && transactions.length === 0 && !fetchOrdersOrSalesError ? React.createElement(\"li\", {\n    key: \"noResults\",\n    className: css.noResults,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: isOrders ? 'InboxPage.noOrdersFound' : 'InboxPage.noSalesFound',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  })) : null;\n\n  const hasOrderOrSaleTransactions = (tx, isOrdersTab, user) => {\n    return isOrdersTab ? user.id && tx && tx.length > 0 && tx[0].customer.id.uuid === user.id.uuid : user.id && tx && tx.length > 0 && tx[0].provider.id.uuid === user.id.uuid;\n  };\n\n  const hasTransactions = !fetchInProgress && hasOrderOrSaleTransactions(transactions, isOrders, ensuredCurrentUser);\n  const pagingLinks = hasTransactions && pagination && pagination.totalPages > 1 ? React.createElement(PaginationLinks, {\n    className: css.pagination,\n    pageName: \"InboxPage\",\n    pagePathParams: params,\n    pagination: pagination,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }) : null;\n  const providerNotificationBadge = providerNotificationCount > 0 ? React.createElement(NotificationBadge, {\n    count: providerNotificationCount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }) : null;\n  const tabs = [{\n    text: React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"InboxPage.ordersTabTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    })),\n    selected: isOrders,\n    linkProps: {\n      name: 'InboxPage',\n      params: {\n        tab: 'orders'\n      }\n    }\n  }, {\n    text: React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"InboxPage.salesTabTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }), providerNotificationBadge),\n    selected: !isOrders,\n    linkProps: {\n      name: 'InboxPage',\n      params: {\n        tab: 'sales'\n      }\n    }\n  }];\n  const nav = React.createElement(TabNav, {\n    rootClassName: css.tabs,\n    tabRootClassName: css.tab,\n    tabs: tabs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352\n    },\n    __self: this\n  });\n  return React.createElement(Page, {\n    title: title,\n    scrollingDisabled: scrollingDisabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355\n    },\n    __self: this\n  }, React.createElement(LayoutSideNavigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  }, React.createElement(LayoutWrapperTopbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357\n    },\n    __self: this\n  }, React.createElement(TopbarContainer, {\n    className: css.topbar,\n    mobileRootClassName: css.mobileTopbar,\n    desktopClassName: css.desktopTopbar,\n    currentPage: \"InboxPage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358\n    },\n    __self: this\n  })), React.createElement(LayoutWrapperSideNav, {\n    className: css.navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: css.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"InboxPage.title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367\n    },\n    __self: this\n  })), nav), React.createElement(LayoutWrapperMain, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371\n    },\n    __self: this\n  }, error, React.createElement(\"ul\", {\n    className: css.itemList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373\n    },\n    __self: this\n  }, !fetchInProgress ? transactions.map(toTxItem) : React.createElement(\"li\", {\n    className: css.listItemsLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377\n    },\n    __self: this\n  }, React.createElement(IconSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  })), noResults), pagingLinks), React.createElement(LayoutWrapperFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385\n    },\n    __self: this\n  }, React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386\n    },\n    __self: this\n  }))));\n};\nInboxPageComponent.defaultProps = {\n  unitType: config.bookingUnitType,\n  currentUser: null,\n  currentUserHasOrders: null,\n  fetchOrdersOrSalesError: null,\n  pagination: null,\n  providerNotificationCount: 0,\n  sendVerificationEmailError: null\n};\nInboxPageComponent.propTypes = {\n  params: shape({\n    tab: string.isRequired\n  }).isRequired,\n  unitType: propTypes.bookingUnitType,\n  currentUser: propTypes.currentUser,\n  fetchInProgress: bool.isRequired,\n  fetchOrdersOrSalesError: propTypes.error,\n  pagination: propTypes.pagination,\n  providerNotificationCount: number,\n  scrollingDisabled: bool.isRequired,\n  transactions: arrayOf(propTypes.transaction).isRequired,\n  // from injectIntl\n  intl: intlShape.isRequired\n};\n\nconst mapStateToProps = state => {\n  const _state$InboxPage = state.InboxPage,\n        fetchInProgress = _state$InboxPage.fetchInProgress,\n        fetchOrdersOrSalesError = _state$InboxPage.fetchOrdersOrSalesError,\n        pagination = _state$InboxPage.pagination,\n        transactionRefs = _state$InboxPage.transactionRefs;\n  const _state$user = state.user,\n        currentUser = _state$user.currentUser,\n        providerNotificationCount = _state$user.currentUserNotificationCount;\n  return {\n    currentUser,\n    fetchInProgress,\n    fetchOrdersOrSalesError,\n    pagination,\n    providerNotificationCount,\n    scrollingDisabled: isScrollingDisabled(state),\n    transactions: getMarketplaceEntities(state, transactionRefs)\n  };\n};\n\nconst InboxPage = compose(connect(mapStateToProps), injectIntl)(InboxPageComponent);\nInboxPage.loadData = loadData;\nexport default InboxPage;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/containers/InboxPage/InboxPage.js"],"names":["React","PropTypes","compose","connect","FormattedMessage","injectIntl","intlShape","moment","classNames","txIsAccepted","txIsCanceled","txIsDeclined","txIsEnquired","txIsRequested","txHasBeenDelivered","LINE_ITEM_DAY","LINE_ITEM_UNITS","propTypes","formatMoney","ensureCurrentUser","dateFromAPIToLocalNoon","daysBetween","getMarketplaceEntities","isScrollingDisabled","Avatar","NamedLink","NotificationBadge","Page","PaginationLinks","TabNav","LayoutSideNavigation","LayoutWrapperMain","LayoutWrapperSideNav","LayoutWrapperTopbar","LayoutWrapperFooter","Footer","IconSpinner","UserDisplayName","TopbarContainer","NotFoundPage","config","loadData","css","arrayOf","bool","number","oneOf","shape","string","formatDate","intl","date","short","month","day","long","formatTime","txState","tx","type","isOrder","nameClassName","nameNotEmphasized","nameEmphasized","bookingClassName","bookingActionNeeded","lastTransitionedAtClassName","lastTransitionedAtEmphasized","stateClassName","stateActionNeeded","state","formatMessage","id","requested","bookingNoActionNeeded","lastTransitionedAtNotEmphasized","stateNoActionNeeded","stateSucces","console","warn","attributes","lastTransition","bookingData","unitType","booking","start","end","displayStart","displayEnd","startDate","endDateRaw","isDaily","isUnits","isSingleDay","bookingStart","endDate","subtract","toDate","bookingEnd","bookingPrice","payinTotal","payoutTotal","price","BookingInfoMaybe","props","isEnquiry","dateInfo","bookingInfo","itemPrice","isRequired","transaction","bookingUnitType","InboxItem","stateData","customer","provider","otherUser","otherUserDisplayName","isOtherUserBanned","banned","isSaleNotification","rowNotificationDot","notificationDot","lastTransitionedAt","linkClasses","itemLink","bannedUserLink","item","itemAvatar","uuid","itemInfo","itemUsername","itemState","stateName","InboxPageComponent","currentUser","fetchInProgress","fetchOrdersOrSalesError","pagination","params","providerNotificationCount","scrollingDisabled","transactions","tab","ensuredCurrentUser","validTab","isOrders","ordersTitle","salesTitle","title","toTxItem","listItem","error","noResults","length","hasOrderOrSaleTransactions","isOrdersTab","user","hasTransactions","pagingLinks","totalPages","providerNotificationBadge","tabs","text","selected","linkProps","name","nav","topbar","mobileTopbar","desktopTopbar","navigation","itemList","map","listItemsLoading","defaultProps","currentUserHasOrders","sendVerificationEmailError","mapStateToProps","InboxPage","transactionRefs","currentUserNotificationCount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { FormattedMessage, injectIntl, intlShape } from 'react-intl';\nimport moment from 'moment';\nimport classNames from 'classnames';\nimport {\n  txIsAccepted,\n  txIsCanceled,\n  txIsDeclined,\n  txIsEnquired,\n  txIsRequested,\n  txHasBeenDelivered,\n} from '../../util/transaction';\nimport { LINE_ITEM_DAY, LINE_ITEM_UNITS, propTypes } from '../../util/types';\nimport { formatMoney } from '../../util/currency';\nimport { ensureCurrentUser } from '../../util/data';\nimport { dateFromAPIToLocalNoon, daysBetween } from '../../util/dates';\nimport { getMarketplaceEntities } from '../../ducks/marketplaceData.duck';\nimport { isScrollingDisabled } from '../../ducks/UI.duck';\nimport {\n  Avatar,\n  NamedLink,\n  NotificationBadge,\n  Page,\n  PaginationLinks,\n  TabNav,\n  LayoutSideNavigation,\n  LayoutWrapperMain,\n  LayoutWrapperSideNav,\n  LayoutWrapperTopbar,\n  LayoutWrapperFooter,\n  Footer,\n  IconSpinner,\n  UserDisplayName,\n} from '../../components';\nimport { TopbarContainer, NotFoundPage } from '../../containers';\nimport config from '../../config';\n\nimport { loadData } from './InboxPage.duck';\nimport css from './InboxPage.css';\n\nconst { arrayOf, bool, number, oneOf, shape, string } = PropTypes;\n\nconst formatDate = (intl, date) => {\n  return {\n    short: intl.formatDate(date, {\n      month: 'short',\n      day: 'numeric',\n    }),\n    long: `${intl.formatDate(date)} ${intl.formatTime(date)}`,\n  };\n};\n\n// Translated name of the state of the given transaction\nexport const txState = (intl, tx, type) => {\n  const isOrder = type === 'order';\n\n  if (txIsEnquired(tx)) {\n    return {\n      nameClassName: isOrder ? css.nameNotEmphasized : css.nameEmphasized,\n      bookingClassName: css.bookingActionNeeded,\n      lastTransitionedAtClassName: css.lastTransitionedAtEmphasized,\n      stateClassName: css.stateActionNeeded,\n      state: intl.formatMessage({\n        id: 'InboxPage.stateEnquiry',\n      }),\n    };\n  } else if (txIsRequested(tx)) {\n    const requested = isOrder\n      ? {\n          nameClassName: css.nameNotEmphasized,\n          bookingClassName: css.bookingNoActionNeeded,\n          lastTransitionedAtClassName: css.lastTransitionedAtEmphasized,\n          stateClassName: css.stateActionNeeded,\n          state: intl.formatMessage({\n            id: 'InboxPage.stateRequested',\n          }),\n        }\n      : {\n          nameClassName: css.nameEmphasized,\n          bookingClassName: css.bookingActionNeeded,\n          lastTransitionedAtClassName: css.lastTransitionedAtEmphasized,\n          stateClassName: css.stateActionNeeded,\n          state: intl.formatMessage({\n            id: 'InboxPage.statePending',\n          }),\n        };\n\n    return requested;\n  } else if (txIsDeclined(tx)) {\n    return {\n      nameClassName: css.nameNotEmphasized,\n      bookingClassName: css.bookingNoActionNeeded,\n      lastTransitionedAtClassName: css.lastTransitionedAtNotEmphasized,\n      stateClassName: css.stateNoActionNeeded,\n      state: intl.formatMessage({\n        id: 'InboxPage.stateDeclined',\n      }),\n    };\n  } else if (txIsAccepted(tx)) {\n    return {\n      nameClassName: css.nameNotEmphasized,\n      bookingClassName: css.bookingNoActionNeeded,\n      lastTransitionedAtClassName: css.lastTransitionedAtNotEmphasized,\n      stateClassName: css.stateSucces,\n      state: intl.formatMessage({\n        id: 'InboxPage.stateAccepted',\n      }),\n    };\n  } else if (txIsCanceled(tx)) {\n    return {\n      nameClassName: css.nameNotEmphasized,\n      bookingClassName: css.bookingNoActionNeeded,\n      lastTransitionedAtClassName: css.lastTransitionedAtNotEmphasized,\n      stateClassName: css.stateNoActionNeeded,\n      state: intl.formatMessage({\n        id: 'InboxPage.stateCanceled',\n      }),\n    };\n  } else if (txHasBeenDelivered(tx)) {\n    return {\n      nameClassName: css.nameNotEmphasized,\n      bookingClassName: css.bookingNoActionNeeded,\n      lastTransitionedAtClassName: css.lastTransitionedAtNotEmphasized,\n      stateClassName: css.stateNoActionNeeded,\n      state: intl.formatMessage({\n        id: 'InboxPage.stateDelivered',\n      }),\n    };\n  } else {\n    console.warn('This transition is unknown:', tx.attributes.lastTransition);\n    return null;\n  }\n};\n\nconst bookingData = (unitType, tx, isOrder, intl) => {\n  // Attributes: displayStart and displayEnd can be used to differentiate shown time range\n  // from actual start and end times used for availability reservation. It can help in situations\n  // where there are preparation time needed between bookings.\n  // Read more: https://www.sharetribe.com/api-reference/#bookings\n  const { start, end, displayStart, displayEnd } = tx.booking.attributes;\n  const startDate = dateFromAPIToLocalNoon(displayStart || start);\n  const endDateRaw = dateFromAPIToLocalNoon(displayEnd || end);\n  const isDaily = unitType === LINE_ITEM_DAY;\n  const isUnits = unitType === LINE_ITEM_UNITS;\n  const isSingleDay = isDaily && daysBetween(startDate, endDateRaw) === 1;\n  const bookingStart = formatDate(intl, startDate);\n\n  // Shift the exclusive API end date with daily bookings\n  const endDate =\n    isDaily || isUnits\n      ? moment(endDateRaw)\n          .subtract(1, 'days')\n          .toDate()\n      : endDateRaw;\n  const bookingEnd = formatDate(intl, endDate);\n  const bookingPrice = isOrder ? tx.attributes.payinTotal : tx.attributes.payoutTotal;\n  const price = formatMoney(intl, bookingPrice);\n  return { bookingStart, bookingEnd, price, isSingleDay };\n};\n\n// Functional component as internal helper to print BookingInfo if that is needed\nconst BookingInfoMaybe = props => {\n  const { bookingClassName, isOrder, intl, tx, unitType } = props;\n  const isEnquiry = txIsEnquired(tx);\n\n  if (isEnquiry) {\n    return null;\n  }\n\n  const { bookingStart, bookingEnd, price, isSingleDay } = bookingData(unitType, tx, isOrder, intl);\n  const dateInfo = isSingleDay ? bookingStart.short : `${bookingStart.short} - ${bookingEnd.short}`;\n\n  return (\n    <div className={classNames(css.bookingInfo, bookingClassName)}>\n      {dateInfo}\n      <span className={css.itemPrice}>{price}</span>\n    </div>\n  );\n};\n\nBookingInfoMaybe.propTypes = {\n  intl: intlShape.isRequired,\n  isOrder: bool.isRequired,\n  tx: propTypes.transaction.isRequired,\n  unitType: propTypes.bookingUnitType.isRequired,\n};\n\nexport const InboxItem = props => {\n  const { unitType, type, tx, intl, stateData } = props;\n  const { customer, provider } = tx;\n  const isOrder = type === 'order';\n\n  const otherUser = isOrder ? provider : customer;\n  const otherUserDisplayName = <UserDisplayName user={otherUser} intl={intl} />;\n  const isOtherUserBanned = otherUser.attributes.banned;\n\n  const isSaleNotification = !isOrder && txIsRequested(tx);\n  const rowNotificationDot = isSaleNotification ? <div className={css.notificationDot} /> : null;\n  const lastTransitionedAt = formatDate(intl, tx.attributes.lastTransitionedAt);\n\n  const linkClasses = classNames(css.itemLink, {\n    [css.bannedUserLink]: isOtherUserBanned,\n  });\n\n  return (\n    <div className={css.item}>\n      <div className={css.itemAvatar}>\n        <Avatar user={otherUser} />\n      </div>\n      <NamedLink\n        className={linkClasses}\n        name={isOrder ? 'OrderDetailsPage' : 'SaleDetailsPage'}\n        params={{ id: tx.id.uuid }}\n      >\n        <div className={css.rowNotificationDot}>{rowNotificationDot}</div>\n        <div className={css.itemInfo}>\n          <div className={classNames(css.itemUsername, stateData.nameClassName)}>\n            {otherUserDisplayName}\n          </div>\n          <BookingInfoMaybe\n            bookingClassName={stateData.bookingClassName}\n            intl={intl}\n            isOrder={isOrder}\n            tx={tx}\n            unitType={unitType}\n          />\n        </div>\n        <div className={css.itemState}>\n          <div className={classNames(css.stateName, stateData.stateClassName)}>\n            {stateData.state}\n          </div>\n          <div\n            className={classNames(css.lastTransitionedAt, stateData.lastTransitionedAtClassName)}\n            title={lastTransitionedAt.long}\n          >\n            {lastTransitionedAt.short}\n          </div>\n        </div>\n      </NamedLink>\n    </div>\n  );\n};\n\nInboxItem.propTypes = {\n  unitType: propTypes.bookingUnitType.isRequired,\n  type: oneOf(['order', 'sale']).isRequired,\n  tx: propTypes.transaction.isRequired,\n  intl: intlShape.isRequired,\n};\n\nexport const InboxPageComponent = props => {\n  const {\n    unitType,\n    currentUser,\n    fetchInProgress,\n    fetchOrdersOrSalesError,\n    intl,\n    pagination,\n    params,\n    providerNotificationCount,\n    scrollingDisabled,\n    transactions,\n  } = props;\n  const { tab } = params;\n  const ensuredCurrentUser = ensureCurrentUser(currentUser);\n\n  const validTab = tab === 'orders' || tab === 'sales';\n  if (!validTab) {\n    return <NotFoundPage />;\n  }\n\n  const isOrders = tab === 'orders';\n\n  const ordersTitle = intl.formatMessage({ id: 'InboxPage.ordersTitle' });\n  const salesTitle = intl.formatMessage({ id: 'InboxPage.salesTitle' });\n  const title = isOrders ? ordersTitle : salesTitle;\n\n  const toTxItem = tx => {\n    const type = isOrders ? 'order' : 'sale';\n    const stateData = txState(intl, tx, type);\n\n    // Render InboxItem only if the latest transition of the transaction is handled in the `txState` function.\n    return stateData ? (\n      <li key={tx.id.uuid} className={css.listItem}>\n        <InboxItem unitType={unitType} type={type} tx={tx} intl={intl} stateData={stateData} />\n      </li>\n    ) : null;\n  };\n\n  const error = fetchOrdersOrSalesError ? (\n    <p className={css.error}>\n      <FormattedMessage id=\"InboxPage.fetchFailed\" />\n    </p>\n  ) : null;\n\n  const noResults =\n    !fetchInProgress && transactions.length === 0 && !fetchOrdersOrSalesError ? (\n      <li key=\"noResults\" className={css.noResults}>\n        <FormattedMessage id={isOrders ? 'InboxPage.noOrdersFound' : 'InboxPage.noSalesFound'} />\n      </li>\n    ) : null;\n\n  const hasOrderOrSaleTransactions = (tx, isOrdersTab, user) => {\n    return isOrdersTab\n      ? user.id && tx && tx.length > 0 && tx[0].customer.id.uuid === user.id.uuid\n      : user.id && tx && tx.length > 0 && tx[0].provider.id.uuid === user.id.uuid;\n  };\n  const hasTransactions =\n    !fetchInProgress && hasOrderOrSaleTransactions(transactions, isOrders, ensuredCurrentUser);\n  const pagingLinks =\n    hasTransactions && pagination && pagination.totalPages > 1 ? (\n      <PaginationLinks\n        className={css.pagination}\n        pageName=\"InboxPage\"\n        pagePathParams={params}\n        pagination={pagination}\n      />\n    ) : null;\n\n  const providerNotificationBadge =\n    providerNotificationCount > 0 ? <NotificationBadge count={providerNotificationCount} /> : null;\n  const tabs = [\n    {\n      text: (\n        <span>\n          <FormattedMessage id=\"InboxPage.ordersTabTitle\" />\n        </span>\n      ),\n      selected: isOrders,\n      linkProps: {\n        name: 'InboxPage',\n        params: { tab: 'orders' },\n      },\n    },\n    {\n      text: (\n        <span>\n          <FormattedMessage id=\"InboxPage.salesTabTitle\" />\n          {providerNotificationBadge}\n        </span>\n      ),\n      selected: !isOrders,\n      linkProps: {\n        name: 'InboxPage',\n        params: { tab: 'sales' },\n      },\n    },\n  ];\n  const nav = <TabNav rootClassName={css.tabs} tabRootClassName={css.tab} tabs={tabs} />;\n\n  return (\n    <Page title={title} scrollingDisabled={scrollingDisabled}>\n      <LayoutSideNavigation>\n        <LayoutWrapperTopbar>\n          <TopbarContainer\n            className={css.topbar}\n            mobileRootClassName={css.mobileTopbar}\n            desktopClassName={css.desktopTopbar}\n            currentPage=\"InboxPage\"\n          />\n        </LayoutWrapperTopbar>\n        <LayoutWrapperSideNav className={css.navigation}>\n          <h1 className={css.title}>\n            <FormattedMessage id=\"InboxPage.title\" />\n          </h1>\n          {nav}\n        </LayoutWrapperSideNav>\n        <LayoutWrapperMain>\n          {error}\n          <ul className={css.itemList}>\n            {!fetchInProgress ? (\n              transactions.map(toTxItem)\n            ) : (\n              <li className={css.listItemsLoading}>\n                <IconSpinner />\n              </li>\n            )}\n            {noResults}\n          </ul>\n          {pagingLinks}\n        </LayoutWrapperMain>\n        <LayoutWrapperFooter>\n          <Footer />\n        </LayoutWrapperFooter>\n      </LayoutSideNavigation>\n    </Page>\n  );\n};\n\nInboxPageComponent.defaultProps = {\n  unitType: config.bookingUnitType,\n  currentUser: null,\n  currentUserHasOrders: null,\n  fetchOrdersOrSalesError: null,\n  pagination: null,\n  providerNotificationCount: 0,\n  sendVerificationEmailError: null,\n};\n\nInboxPageComponent.propTypes = {\n  params: shape({\n    tab: string.isRequired,\n  }).isRequired,\n\n  unitType: propTypes.bookingUnitType,\n  currentUser: propTypes.currentUser,\n  fetchInProgress: bool.isRequired,\n  fetchOrdersOrSalesError: propTypes.error,\n  pagination: propTypes.pagination,\n  providerNotificationCount: number,\n  scrollingDisabled: bool.isRequired,\n  transactions: arrayOf(propTypes.transaction).isRequired,\n\n  // from injectIntl\n  intl: intlShape.isRequired,\n};\n\nconst mapStateToProps = state => {\n  const { fetchInProgress, fetchOrdersOrSalesError, pagination, transactionRefs } = state.InboxPage;\n  const { currentUser, currentUserNotificationCount: providerNotificationCount } = state.user;\n  return {\n    currentUser,\n    fetchInProgress,\n    fetchOrdersOrSalesError,\n    pagination,\n    providerNotificationCount,\n    scrollingDisabled: isScrollingDisabled(state),\n    transactions: getMarketplaceEntities(state, transactionRefs),\n  };\n};\n\nconst InboxPage = compose(\n  connect(mapStateToProps),\n  injectIntl\n)(InboxPageComponent);\n\nInboxPage.loadData = loadData;\n\nexport default InboxPage;\n"]},"metadata":{},"sourceType":"module"}