{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/EditListingDescriptionPanel/EditListingDescriptionPanel.js\";\nimport React from 'react';\nimport { bool, func, object, string } from 'prop-types';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport { ensureOwnListing } from '../../util/data';\nimport { ListingLink } from '../../components';\nimport { LISTING_STATE_DRAFT } from '../../util/types';\nimport { EditListingDescriptionForm } from '../../forms';\nimport config from '../../config';\nimport css from './EditListingDescriptionPanel.css';\n\nconst EditListingDescriptionPanel = props => {\n  const className = props.className,\n        rootClassName = props.rootClassName,\n        listing = props.listing,\n        onSubmit = props.onSubmit,\n        onChange = props.onChange,\n        submitButtonText = props.submitButtonText,\n        panelUpdated = props.panelUpdated,\n        updateInProgress = props.updateInProgress,\n        errors = props.errors;\n  const classes = classNames(rootClassName || css.root, className);\n  const currentListing = ensureOwnListing(listing);\n  const _currentListing$attri = currentListing.attributes,\n        description = _currentListing$attri.description,\n        title = _currentListing$attri.title,\n        publicData = _currentListing$attri.publicData;\n  const isPublished = currentListing.id && currentListing.attributes.state !== LISTING_STATE_DRAFT;\n  const panelTitle = isPublished ? React.createElement(FormattedMessage, {\n    id: \"EditListingDescriptionPanel.title\",\n    values: {\n      listingTitle: React.createElement(ListingLink, {\n        listing: listing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }) : React.createElement(FormattedMessage, {\n    id: \"EditListingDescriptionPanel.createListingTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: css.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, panelTitle), React.createElement(EditListingDescriptionForm, {\n    className: css.form,\n    initialValues: {\n      title,\n      description,\n      category: publicData.category\n    },\n    saveActionMsg: submitButtonText,\n    onSubmit: values => {\n      const title = values.title,\n            description = values.description,\n            category = values.category;\n      const updateValues = {\n        title: title.trim(),\n        description,\n        publicData: {\n          category\n        }\n      };\n      onSubmit(updateValues);\n    },\n    onChange: onChange,\n    updated: panelUpdated,\n    updateInProgress: updateInProgress,\n    fetchErrors: errors,\n    categories: config.custom.categories,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n};\n\nEditListingDescriptionPanel.defaultProps = {\n  className: null,\n  rootClassName: null,\n  errors: null,\n  listing: null\n};\nEditListingDescriptionPanel.propTypes = {\n  className: string,\n  rootClassName: string,\n  // We cannot use propTypes.listing since the listing might be a draft.\n  listing: object,\n  onSubmit: func.isRequired,\n  onChange: func.isRequired,\n  submitButtonText: string.isRequired,\n  panelUpdated: bool.isRequired,\n  updateInProgress: bool.isRequired,\n  errors: object.isRequired\n};\nexport default EditListingDescriptionPanel;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/EditListingDescriptionPanel/EditListingDescriptionPanel.js"],"names":["React","bool","func","object","string","classNames","FormattedMessage","ensureOwnListing","ListingLink","LISTING_STATE_DRAFT","EditListingDescriptionForm","config","css","EditListingDescriptionPanel","props","className","rootClassName","listing","onSubmit","onChange","submitButtonText","panelUpdated","updateInProgress","errors","classes","root","currentListing","attributes","description","title","publicData","isPublished","id","state","panelTitle","listingTitle","form","category","values","updateValues","trim","custom","categories","defaultProps","propTypes","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,MAA7B,QAA2C,YAA3C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,mBAAT,QAAoC,kBAApC;AACA,SAASC,0BAAT,QAA2C,aAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,GAAP,MAAgB,mCAAhB;;AAEA,MAAMC,2BAA2B,GAAGC,KAAK,IAAI;AAAA,QAEzCC,SAFyC,GAWvCD,KAXuC,CAEzCC,SAFyC;AAAA,QAGzCC,aAHyC,GAWvCF,KAXuC,CAGzCE,aAHyC;AAAA,QAIzCC,OAJyC,GAWvCH,KAXuC,CAIzCG,OAJyC;AAAA,QAKzCC,QALyC,GAWvCJ,KAXuC,CAKzCI,QALyC;AAAA,QAMzCC,QANyC,GAWvCL,KAXuC,CAMzCK,QANyC;AAAA,QAOzCC,gBAPyC,GAWvCN,KAXuC,CAOzCM,gBAPyC;AAAA,QAQzCC,YARyC,GAWvCP,KAXuC,CAQzCO,YARyC;AAAA,QASzCC,gBATyC,GAWvCR,KAXuC,CASzCQ,gBATyC;AAAA,QAUzCC,MAVyC,GAWvCT,KAXuC,CAUzCS,MAVyC;AAa3C,QAAMC,OAAO,GAAGnB,UAAU,CAACW,aAAa,IAAIJ,GAAG,CAACa,IAAtB,EAA4BV,SAA5B,CAA1B;AACA,QAAMW,cAAc,GAAGnB,gBAAgB,CAACU,OAAD,CAAvC;AAd2C,gCAeAS,cAAc,CAACC,UAff;AAAA,QAenCC,WAfmC,yBAenCA,WAfmC;AAAA,QAetBC,KAfsB,yBAetBA,KAfsB;AAAA,QAefC,UAfe,yBAefA,UAfe;AAiB3C,QAAMC,WAAW,GAAGL,cAAc,CAACM,EAAf,IAAqBN,cAAc,CAACC,UAAf,CAA0BM,KAA1B,KAAoCxB,mBAA7E;AACA,QAAMyB,UAAU,GAAGH,WAAW,GAC5B,oBAAC,gBAAD;AACE,IAAA,EAAE,EAAC,mCADL;AAEE,IAAA,MAAM,EAAE;AAAEI,MAAAA,YAAY,EAAE,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAElB,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhB,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD4B,GAM5B,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,gDAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF;AASA,SACE;AAAK,IAAA,SAAS,EAAEO,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEZ,GAAG,CAACiB,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BK,UAA3B,CADF,EAEE,oBAAC,0BAAD;AACE,IAAA,SAAS,EAAEtB,GAAG,CAACwB,IADjB;AAEE,IAAA,aAAa,EAAE;AAAEP,MAAAA,KAAF;AAASD,MAAAA,WAAT;AAAsBS,MAAAA,QAAQ,EAAEP,UAAU,CAACO;AAA3C,KAFjB;AAGE,IAAA,aAAa,EAAEjB,gBAHjB;AAIE,IAAA,QAAQ,EAAEkB,MAAM,IAAI;AAAA,YACVT,KADU,GACuBS,MADvB,CACVT,KADU;AAAA,YACHD,WADG,GACuBU,MADvB,CACHV,WADG;AAAA,YACUS,QADV,GACuBC,MADvB,CACUD,QADV;AAElB,YAAME,YAAY,GAAG;AACnBV,QAAAA,KAAK,EAAEA,KAAK,CAACW,IAAN,EADY;AAEnBZ,QAAAA,WAFmB;AAGnBE,QAAAA,UAAU,EAAE;AAAEO,UAAAA;AAAF;AAHO,OAArB;AAMAnB,MAAAA,QAAQ,CAACqB,YAAD,CAAR;AACD,KAbH;AAcE,IAAA,QAAQ,EAAEpB,QAdZ;AAeE,IAAA,OAAO,EAAEE,YAfX;AAgBE,IAAA,gBAAgB,EAAEC,gBAhBpB;AAiBE,IAAA,WAAW,EAAEC,MAjBf;AAkBE,IAAA,UAAU,EAAEZ,MAAM,CAAC8B,MAAP,CAAcC,UAlB5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAyBD,CApDD;;AAsDA7B,2BAA2B,CAAC8B,YAA5B,GAA2C;AACzC5B,EAAAA,SAAS,EAAE,IAD8B;AAEzCC,EAAAA,aAAa,EAAE,IAF0B;AAGzCO,EAAAA,MAAM,EAAE,IAHiC;AAIzCN,EAAAA,OAAO,EAAE;AAJgC,CAA3C;AAOAJ,2BAA2B,CAAC+B,SAA5B,GAAwC;AACtC7B,EAAAA,SAAS,EAAEX,MAD2B;AAEtCY,EAAAA,aAAa,EAAEZ,MAFuB;AAItC;AACAa,EAAAA,OAAO,EAAEd,MAL6B;AAOtCe,EAAAA,QAAQ,EAAEhB,IAAI,CAAC2C,UAPuB;AAQtC1B,EAAAA,QAAQ,EAAEjB,IAAI,CAAC2C,UARuB;AAStCzB,EAAAA,gBAAgB,EAAEhB,MAAM,CAACyC,UATa;AAUtCxB,EAAAA,YAAY,EAAEpB,IAAI,CAAC4C,UAVmB;AAWtCvB,EAAAA,gBAAgB,EAAErB,IAAI,CAAC4C,UAXe;AAYtCtB,EAAAA,MAAM,EAAEpB,MAAM,CAAC0C;AAZuB,CAAxC;AAeA,eAAehC,2BAAf","sourcesContent":["import React from 'react';\nimport { bool, func, object, string } from 'prop-types';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport { ensureOwnListing } from '../../util/data';\nimport { ListingLink } from '../../components';\nimport { LISTING_STATE_DRAFT } from '../../util/types';\nimport { EditListingDescriptionForm } from '../../forms';\nimport config from '../../config';\n\nimport css from './EditListingDescriptionPanel.css';\n\nconst EditListingDescriptionPanel = props => {\n  const {\n    className,\n    rootClassName,\n    listing,\n    onSubmit,\n    onChange,\n    submitButtonText,\n    panelUpdated,\n    updateInProgress,\n    errors,\n  } = props;\n\n  const classes = classNames(rootClassName || css.root, className);\n  const currentListing = ensureOwnListing(listing);\n  const { description, title, publicData } = currentListing.attributes;\n\n  const isPublished = currentListing.id && currentListing.attributes.state !== LISTING_STATE_DRAFT;\n  const panelTitle = isPublished ? (\n    <FormattedMessage\n      id=\"EditListingDescriptionPanel.title\"\n      values={{ listingTitle: <ListingLink listing={listing} /> }}\n    />\n  ) : (\n    <FormattedMessage id=\"EditListingDescriptionPanel.createListingTitle\" />\n  );\n\n  return (\n    <div className={classes}>\n      <h1 className={css.title}>{panelTitle}</h1>\n      <EditListingDescriptionForm\n        className={css.form}\n        initialValues={{ title, description, category: publicData.category }}\n        saveActionMsg={submitButtonText}\n        onSubmit={values => {\n          const { title, description, category } = values;\n          const updateValues = {\n            title: title.trim(),\n            description,\n            publicData: { category },\n          };\n\n          onSubmit(updateValues);\n        }}\n        onChange={onChange}\n        updated={panelUpdated}\n        updateInProgress={updateInProgress}\n        fetchErrors={errors}\n        categories={config.custom.categories}\n      />\n    </div>\n  );\n};\n\nEditListingDescriptionPanel.defaultProps = {\n  className: null,\n  rootClassName: null,\n  errors: null,\n  listing: null,\n};\n\nEditListingDescriptionPanel.propTypes = {\n  className: string,\n  rootClassName: string,\n\n  // We cannot use propTypes.listing since the listing might be a draft.\n  listing: object,\n\n  onSubmit: func.isRequired,\n  onChange: func.isRequired,\n  submitButtonText: string.isRequired,\n  panelUpdated: bool.isRequired,\n  updateInProgress: bool.isRequired,\n  errors: object.isRequired,\n};\n\nexport default EditListingDescriptionPanel;\n"]},"metadata":{},"sourceType":"module"}