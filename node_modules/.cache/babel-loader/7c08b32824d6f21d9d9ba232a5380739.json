{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/ActivityFeed/ActivityFeed.js\";\nimport React from 'react';\nimport { string, arrayOf, bool, func, number } from 'prop-types';\nimport { injectIntl, intlShape, FormattedMessage } from 'react-intl';\nimport dropWhile from 'lodash/dropWhile';\nimport classNames from 'classnames';\nimport { Avatar, InlineTextButton, ReviewRating, UserDisplayName } from '../../components';\nimport { formatDate } from '../../util/dates';\nimport { ensureTransaction, ensureUser, ensureListing } from '../../util/data';\nimport { TRANSITION_ACCEPT, TRANSITION_CANCEL, TRANSITION_COMPLETE, TRANSITION_DECLINE, TRANSITION_EXPIRE, TRANSITION_REQUEST, TRANSITION_REQUEST_AFTER_ENQUIRY, TRANSITION_REVIEW_1_BY_CUSTOMER, TRANSITION_REVIEW_1_BY_PROVIDER, TRANSITION_REVIEW_2_BY_CUSTOMER, TRANSITION_REVIEW_2_BY_PROVIDER, transitionIsReviewed, txIsDelivered, txIsInFirstReviewBy, txIsReviewed, isCustomerReview, isProviderReview, txRoleIsProvider, getUserTxRole, isRelevantPastTransition } from '../../util/transaction';\nimport { propTypes } from '../../util/types';\nimport * as log from '../../util/log';\nimport css from './ActivityFeed.css';\n\nconst Message = props => {\n  const message = props.message,\n        intl = props.intl;\n  const todayString = intl.formatMessage({\n    id: 'ActivityFeed.today'\n  });\n  return React.createElement(\"div\", {\n    className: css.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: css.avatar,\n    user: message.sender,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: css.messageContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, message.attributes.content), React.createElement(\"p\", {\n    className: css.messageDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, formatDate(intl, todayString, message.attributes.createdAt))));\n};\n\nMessage.propTypes = {\n  message: propTypes.message.isRequired,\n  intl: intlShape.isRequired\n};\n\nconst OwnMessage = props => {\n  const message = props.message,\n        intl = props.intl;\n  const todayString = intl.formatMessage({\n    id: 'ActivityFeed.today'\n  });\n  return React.createElement(\"div\", {\n    className: css.ownMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css.ownMessageContentWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: css.ownMessageContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, message.attributes.content)), React.createElement(\"p\", {\n    className: css.ownMessageDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, formatDate(intl, todayString, message.attributes.createdAt)));\n};\n\nOwnMessage.propTypes = {\n  message: propTypes.message.isRequired,\n  intl: intlShape.isRequired\n};\n\nconst Review = props => {\n  const content = props.content,\n        rating = props.rating;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: css.reviewContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, content), React.createElement(ReviewRating, {\n    reviewStarClassName: css.reviewStar,\n    className: css.reviewStars,\n    rating: rating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }));\n};\n\nReview.propTypes = {\n  content: string.isRequired,\n  rating: number.isRequired\n};\n\nconst hasUserLeftAReviewFirst = (userRole, transaction) => {\n  const isProvider = txRoleIsProvider(userRole);\n  return isProvider ? txIsInFirstReviewBy(transaction, isProvider) : txIsInFirstReviewBy(transaction, !isProvider);\n};\n\nconst resolveTransitionMessage = (transaction, transition, listingTitle, ownRole, otherUsersName, intl, onOpenReviewModal) => {\n  const isOwnTransition = transition.by === ownRole;\n  const currentTransition = transition.transition;\n  const displayName = otherUsersName;\n\n  switch (currentTransition) {\n    case TRANSITION_REQUEST:\n    case TRANSITION_REQUEST_AFTER_ENQUIRY:\n      return isOwnTransition ? React.createElement(FormattedMessage, {\n        id: \"ActivityFeed.ownTransitionRequest\",\n        values: {\n          listingTitle\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }) : React.createElement(FormattedMessage, {\n        id: \"ActivityFeed.transitionRequest\",\n        values: {\n          displayName,\n          listingTitle\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      });\n\n    case TRANSITION_ACCEPT:\n      return isOwnTransition ? React.createElement(FormattedMessage, {\n        id: \"ActivityFeed.ownTransitionAccept\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }) : React.createElement(FormattedMessage, {\n        id: \"ActivityFeed.transitionAccept\",\n        values: {\n          displayName\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      });\n\n    case TRANSITION_DECLINE:\n      return isOwnTransition ? React.createElement(FormattedMessage, {\n        id: \"ActivityFeed.ownTransitionDecline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }) : React.createElement(FormattedMessage, {\n        id: \"ActivityFeed.transitionDecline\",\n        values: {\n          displayName\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      });\n\n    case TRANSITION_EXPIRE:\n      return txRoleIsProvider(ownRole) ? React.createElement(FormattedMessage, {\n        id: \"ActivityFeed.ownTransitionExpire\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }) : React.createElement(FormattedMessage, {\n        id: \"ActivityFeed.transitionExpire\",\n        values: {\n          displayName\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      });\n\n    case TRANSITION_CANCEL:\n      return React.createElement(FormattedMessage, {\n        id: \"ActivityFeed.transitionCancel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      });\n\n    case TRANSITION_COMPLETE:\n      // Show the leave a review link if the state is delivered or\n      // if current user is not the first to leave a review\n      const reviewPeriodJustStarted = txIsDelivered(transaction);\n      const reviewPeriodIsOver = txIsReviewed(transaction);\n      const userHasLeftAReview = hasUserLeftAReviewFirst(ownRole, transaction);\n      const reviewLink = reviewPeriodJustStarted || !(reviewPeriodIsOver || userHasLeftAReview) ? React.createElement(InlineTextButton, {\n        onClick: onOpenReviewModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"ActivityFeed.leaveAReview\",\n        values: {\n          displayName\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      })) : null;\n      return React.createElement(FormattedMessage, {\n        id: \"ActivityFeed.transitionComplete\",\n        values: {\n          reviewLink\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      });\n\n    case TRANSITION_REVIEW_1_BY_PROVIDER:\n    case TRANSITION_REVIEW_1_BY_CUSTOMER:\n      if (isOwnTransition) {\n        return React.createElement(FormattedMessage, {\n          id: \"ActivityFeed.ownTransitionReview\",\n          values: {\n            displayName\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        });\n      } else {\n        // show the leave a review link if current user is not the first\n        // one to leave a review\n        const reviewPeriodIsOver = txIsReviewed(transaction);\n        const userHasLeftAReview = hasUserLeftAReviewFirst(ownRole, transaction);\n        const reviewLink = !(reviewPeriodIsOver || userHasLeftAReview) ? React.createElement(InlineTextButton, {\n          onClick: onOpenReviewModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(FormattedMessage, {\n          id: \"ActivityFeed.leaveAReviewSecond\",\n          values: {\n            displayName\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        })) : null;\n        return React.createElement(FormattedMessage, {\n          id: \"ActivityFeed.transitionReview\",\n          values: {\n            displayName,\n            reviewLink\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        });\n      }\n\n    case TRANSITION_REVIEW_2_BY_PROVIDER:\n    case TRANSITION_REVIEW_2_BY_CUSTOMER:\n      if (isOwnTransition) {\n        return React.createElement(FormattedMessage, {\n          id: \"ActivityFeed.ownTransitionReview\",\n          values: {\n            displayName\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(FormattedMessage, {\n          id: \"ActivityFeed.transitionReview\",\n          values: {\n            displayName,\n            reviewLink: null\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        });\n      }\n\n    default:\n      log.error(new Error('Unknown transaction transition type'), 'unknown-transition-type', {\n        transitionType: currentTransition\n      });\n      return '';\n  }\n};\n\nconst reviewByAuthorId = (transaction, userId) => {\n  return transaction.reviews.filter(r => r.author.id.uuid === userId.uuid)[0];\n};\n\nconst Transition = props => {\n  const transition = props.transition,\n        transaction = props.transaction,\n        currentUser = props.currentUser,\n        intl = props.intl,\n        onOpenReviewModal = props.onOpenReviewModal;\n  const currentTransaction = ensureTransaction(transaction);\n  const customer = currentTransaction.customer;\n  const provider = currentTransaction.provider;\n  const deletedListing = intl.formatMessage({\n    id: 'ActivityFeed.deletedListing'\n  });\n  const listingTitle = currentTransaction.listing.attributes.deleted ? deletedListing : currentTransaction.listing.attributes.title;\n  const lastTransition = currentTransaction.attributes.lastTransition;\n  const ownRole = getUserTxRole(currentUser.id, currentTransaction);\n  const otherUsersName = txRoleIsProvider(ownRole) ? React.createElement(UserDisplayName, {\n    user: customer,\n    intl: intl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }) : React.createElement(UserDisplayName, {\n    user: provider,\n    intl: intl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  });\n  const transitionMessage = resolveTransitionMessage(transaction, transition, listingTitle, ownRole, otherUsersName, intl, onOpenReviewModal);\n  const currentTransition = transition.transition;\n  let reviewComponent = null;\n\n  if (transitionIsReviewed(lastTransition)) {\n    if (isCustomerReview(currentTransition)) {\n      const review = reviewByAuthorId(currentTransaction, customer.id);\n      reviewComponent = React.createElement(Review, {\n        content: review.attributes.content,\n        rating: review.attributes.rating,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      });\n    } else if (isProviderReview(currentTransition)) {\n      const review = reviewByAuthorId(currentTransaction, provider.id);\n      reviewComponent = React.createElement(Review, {\n        content: review.attributes.content,\n        rating: review.attributes.rating,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      });\n    }\n  }\n\n  const todayString = intl.formatMessage({\n    id: 'ActivityFeed.today'\n  });\n  return React.createElement(\"div\", {\n    className: css.transition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css.bullet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: css.transitionContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, \"\\u2022\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: css.transitionContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, transitionMessage), React.createElement(\"p\", {\n    className: css.transitionDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, formatDate(intl, todayString, transition.createdAt)), reviewComponent));\n};\n\nTransition.propTypes = {\n  transition: propTypes.transition.isRequired,\n  transaction: propTypes.transaction.isRequired,\n  currentUser: propTypes.currentUser.isRequired,\n  intl: intlShape.isRequired,\n  onOpenReviewModal: func.isRequired\n};\n\nconst EmptyTransition = () => {\n  return React.createElement(\"div\", {\n    className: css.transition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css.bullet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: css.transitionContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, \"\\u2022\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: css.transitionContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: css.transitionDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  })));\n};\n\nconst isMessage = item => item && item.type === 'message'; // Compare function for sorting an array containing messages and transitions\n\n\nconst compareItems = (a, b) => {\n  const itemDate = item => isMessage(item) ? item.attributes.createdAt : item.createdAt;\n\n  return itemDate(a) - itemDate(b);\n};\n\nconst organizedItems = (messages, transitions, hideOldTransitions) => {\n  const items = messages.concat(transitions).sort(compareItems);\n\n  if (hideOldTransitions) {\n    // Hide transitions that happened before the oldest message. Since\n    // we have older items (messages) that we are not showing, seeing\n    // old transitions would be confusing.\n    return dropWhile(items, i => !isMessage(i));\n  } else {\n    return items;\n  }\n};\n\nexport const ActivityFeedComponent = props => {\n  const rootClassName = props.rootClassName,\n        className = props.className,\n        messages = props.messages,\n        transaction = props.transaction,\n        currentUser = props.currentUser,\n        hasOlderMessages = props.hasOlderMessages,\n        onOpenReviewModal = props.onOpenReviewModal,\n        onShowOlderMessages = props.onShowOlderMessages,\n        fetchMessagesInProgress = props.fetchMessagesInProgress,\n        intl = props.intl;\n  const classes = classNames(rootClassName || css.root, className);\n  const currentTransaction = ensureTransaction(transaction);\n  const transitions = currentTransaction.attributes.transitions ? currentTransaction.attributes.transitions : [];\n  const currentCustomer = ensureUser(currentTransaction.customer);\n  const currentProvider = ensureUser(currentTransaction.provider);\n  const currentListing = ensureListing(currentTransaction.listing);\n  const transitionsAvailable = !!(currentUser && currentUser.id && currentCustomer.id && currentProvider.id && currentListing.id); // combine messages and transaction transitions\n\n  const items = organizedItems(messages, transitions, hasOlderMessages || fetchMessagesInProgress);\n\n  const transitionComponent = transition => {\n    if (transitionsAvailable) {\n      return React.createElement(Transition, {\n        transition: transition,\n        transaction: transaction,\n        currentUser: currentUser,\n        intl: intl,\n        onOpenReviewModal: onOpenReviewModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(EmptyTransition, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      });\n    }\n  };\n\n  const messageComponent = message => {\n    const isOwnMessage = message.sender && message.sender.id && currentUser && currentUser.id && message.sender.id.uuid === currentUser.id.uuid;\n\n    if (isOwnMessage) {\n      return React.createElement(OwnMessage, {\n        message: message,\n        intl: intl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Message, {\n      message: message,\n      intl: intl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    });\n  };\n\n  const messageListItem = message => {\n    return React.createElement(\"li\", {\n      id: \"msg-\".concat(message.id.uuid),\n      key: message.id.uuid,\n      className: css.messageItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, messageComponent(message));\n  };\n\n  const transitionListItem = transition => {\n    if (isRelevantPastTransition(transition.transition)) {\n      return React.createElement(\"li\", {\n        key: transition.transition,\n        className: css.transitionItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, transitionComponent(transition));\n    } else {\n      return null;\n    }\n  };\n\n  return React.createElement(\"ul\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401\n    },\n    __self: this\n  }, hasOlderMessages ? React.createElement(\"li\", {\n    className: css.showOlderWrapper,\n    key: \"show-older-messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403\n    },\n    __self: this\n  }, React.createElement(InlineTextButton, {\n    className: css.showOlderButton,\n    onClick: onShowOlderMessages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ActivityFeed.showOlderMessages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405\n    },\n    __self: this\n  }))) : null, items.map(item => {\n    if (isMessage(item)) {\n      return messageListItem(item);\n    } else {\n      return transitionListItem(item);\n    }\n  }));\n};\nActivityFeedComponent.defaultProps = {\n  rootClassName: null,\n  className: null\n};\nActivityFeedComponent.propTypes = {\n  rootClassName: string,\n  className: string,\n  currentUser: propTypes.currentUser,\n  transaction: propTypes.transaction,\n  messages: arrayOf(propTypes.message),\n  hasOlderMessages: bool.isRequired,\n  onOpenReviewModal: func.isRequired,\n  onShowOlderMessages: func.isRequired,\n  fetchMessagesInProgress: bool.isRequired,\n  // from injectIntl\n  intl: intlShape.isRequired\n};\nconst ActivityFeed = injectIntl(ActivityFeedComponent);\nexport default ActivityFeed;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/ActivityFeed/ActivityFeed.js"],"names":["React","string","arrayOf","bool","func","number","injectIntl","intlShape","FormattedMessage","dropWhile","classNames","Avatar","InlineTextButton","ReviewRating","UserDisplayName","formatDate","ensureTransaction","ensureUser","ensureListing","TRANSITION_ACCEPT","TRANSITION_CANCEL","TRANSITION_COMPLETE","TRANSITION_DECLINE","TRANSITION_EXPIRE","TRANSITION_REQUEST","TRANSITION_REQUEST_AFTER_ENQUIRY","TRANSITION_REVIEW_1_BY_CUSTOMER","TRANSITION_REVIEW_1_BY_PROVIDER","TRANSITION_REVIEW_2_BY_CUSTOMER","TRANSITION_REVIEW_2_BY_PROVIDER","transitionIsReviewed","txIsDelivered","txIsInFirstReviewBy","txIsReviewed","isCustomerReview","isProviderReview","txRoleIsProvider","getUserTxRole","isRelevantPastTransition","propTypes","log","css","Message","props","message","intl","todayString","formatMessage","id","avatar","sender","messageContent","attributes","content","messageDate","createdAt","isRequired","OwnMessage","ownMessage","ownMessageContentWrapper","ownMessageContent","ownMessageDate","Review","rating","reviewContent","reviewStar","reviewStars","hasUserLeftAReviewFirst","userRole","transaction","isProvider","resolveTransitionMessage","transition","listingTitle","ownRole","otherUsersName","onOpenReviewModal","isOwnTransition","by","currentTransition","displayName","reviewPeriodJustStarted","reviewPeriodIsOver","userHasLeftAReview","reviewLink","error","Error","transitionType","reviewByAuthorId","userId","reviews","filter","r","author","uuid","Transition","currentUser","currentTransaction","customer","provider","deletedListing","listing","deleted","title","lastTransition","transitionMessage","reviewComponent","review","bullet","transitionContent","transitionDate","EmptyTransition","isMessage","item","type","compareItems","a","b","itemDate","organizedItems","messages","transitions","hideOldTransitions","items","concat","sort","i","ActivityFeedComponent","rootClassName","className","hasOlderMessages","onShowOlderMessages","fetchMessagesInProgress","classes","root","currentCustomer","currentProvider","currentListing","transitionsAvailable","transitionComponent","messageComponent","isOwnMessage","messageListItem","messageItem","transitionListItem","transitionItem","showOlderWrapper","showOlderButton","map","defaultProps","ActivityFeed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { string, arrayOf, bool, func, number } from 'prop-types';\nimport { injectIntl, intlShape, FormattedMessage } from 'react-intl';\nimport dropWhile from 'lodash/dropWhile';\nimport classNames from 'classnames';\nimport { Avatar, InlineTextButton, ReviewRating, UserDisplayName } from '../../components';\nimport { formatDate } from '../../util/dates';\nimport { ensureTransaction, ensureUser, ensureListing } from '../../util/data';\nimport {\n  TRANSITION_ACCEPT,\n  TRANSITION_CANCEL,\n  TRANSITION_COMPLETE,\n  TRANSITION_DECLINE,\n  TRANSITION_EXPIRE,\n  TRANSITION_REQUEST,\n  TRANSITION_REQUEST_AFTER_ENQUIRY,\n  TRANSITION_REVIEW_1_BY_CUSTOMER,\n  TRANSITION_REVIEW_1_BY_PROVIDER,\n  TRANSITION_REVIEW_2_BY_CUSTOMER,\n  TRANSITION_REVIEW_2_BY_PROVIDER,\n  transitionIsReviewed,\n  txIsDelivered,\n  txIsInFirstReviewBy,\n  txIsReviewed,\n  isCustomerReview,\n  isProviderReview,\n  txRoleIsProvider,\n  getUserTxRole,\n  isRelevantPastTransition,\n} from '../../util/transaction';\nimport { propTypes } from '../../util/types';\nimport * as log from '../../util/log';\n\nimport css from './ActivityFeed.css';\n\nconst Message = props => {\n  const { message, intl } = props;\n  const todayString = intl.formatMessage({ id: 'ActivityFeed.today' });\n  return (\n    <div className={css.message}>\n      <Avatar className={css.avatar} user={message.sender} />\n      <div>\n        <p className={css.messageContent}>{message.attributes.content}</p>\n        <p className={css.messageDate}>\n          {formatDate(intl, todayString, message.attributes.createdAt)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nMessage.propTypes = {\n  message: propTypes.message.isRequired,\n  intl: intlShape.isRequired,\n};\n\nconst OwnMessage = props => {\n  const { message, intl } = props;\n  const todayString = intl.formatMessage({ id: 'ActivityFeed.today' });\n  return (\n    <div className={css.ownMessage}>\n      <div className={css.ownMessageContentWrapper}>\n        <p className={css.ownMessageContent}>{message.attributes.content}</p>\n      </div>\n      <p className={css.ownMessageDate}>\n        {formatDate(intl, todayString, message.attributes.createdAt)}\n      </p>\n    </div>\n  );\n};\n\nOwnMessage.propTypes = {\n  message: propTypes.message.isRequired,\n  intl: intlShape.isRequired,\n};\n\nconst Review = props => {\n  const { content, rating } = props;\n  return (\n    <div>\n      <p className={css.reviewContent}>{content}</p>\n      <ReviewRating\n        reviewStarClassName={css.reviewStar}\n        className={css.reviewStars}\n        rating={rating}\n      />\n    </div>\n  );\n};\n\nReview.propTypes = {\n  content: string.isRequired,\n  rating: number.isRequired,\n};\n\nconst hasUserLeftAReviewFirst = (userRole, transaction) => {\n  const isProvider = txRoleIsProvider(userRole);\n  return isProvider\n    ? txIsInFirstReviewBy(transaction, isProvider)\n    : txIsInFirstReviewBy(transaction, !isProvider);\n};\n\nconst resolveTransitionMessage = (\n  transaction,\n  transition,\n  listingTitle,\n  ownRole,\n  otherUsersName,\n  intl,\n  onOpenReviewModal\n) => {\n  const isOwnTransition = transition.by === ownRole;\n  const currentTransition = transition.transition;\n  const displayName = otherUsersName;\n\n  switch (currentTransition) {\n    case TRANSITION_REQUEST:\n    case TRANSITION_REQUEST_AFTER_ENQUIRY:\n      return isOwnTransition ? (\n        <FormattedMessage id=\"ActivityFeed.ownTransitionRequest\" values={{ listingTitle }} />\n      ) : (\n        <FormattedMessage\n          id=\"ActivityFeed.transitionRequest\"\n          values={{ displayName, listingTitle }}\n        />\n      );\n    case TRANSITION_ACCEPT:\n      return isOwnTransition ? (\n        <FormattedMessage id=\"ActivityFeed.ownTransitionAccept\" />\n      ) : (\n        <FormattedMessage id=\"ActivityFeed.transitionAccept\" values={{ displayName }} />\n      );\n    case TRANSITION_DECLINE:\n      return isOwnTransition ? (\n        <FormattedMessage id=\"ActivityFeed.ownTransitionDecline\" />\n      ) : (\n        <FormattedMessage id=\"ActivityFeed.transitionDecline\" values={{ displayName }} />\n      );\n    case TRANSITION_EXPIRE:\n      return txRoleIsProvider(ownRole) ? (\n        <FormattedMessage id=\"ActivityFeed.ownTransitionExpire\" />\n      ) : (\n        <FormattedMessage id=\"ActivityFeed.transitionExpire\" values={{ displayName }} />\n      );\n    case TRANSITION_CANCEL:\n      return <FormattedMessage id=\"ActivityFeed.transitionCancel\" />;\n    case TRANSITION_COMPLETE:\n      // Show the leave a review link if the state is delivered or\n      // if current user is not the first to leave a review\n      const reviewPeriodJustStarted = txIsDelivered(transaction);\n      const reviewPeriodIsOver = txIsReviewed(transaction);\n      const userHasLeftAReview = hasUserLeftAReviewFirst(ownRole, transaction);\n\n      const reviewLink =\n        reviewPeriodJustStarted || !(reviewPeriodIsOver || userHasLeftAReview) ? (\n          <InlineTextButton onClick={onOpenReviewModal}>\n            <FormattedMessage id=\"ActivityFeed.leaveAReview\" values={{ displayName }} />\n          </InlineTextButton>\n        ) : null;\n\n      return <FormattedMessage id=\"ActivityFeed.transitionComplete\" values={{ reviewLink }} />;\n\n    case TRANSITION_REVIEW_1_BY_PROVIDER:\n    case TRANSITION_REVIEW_1_BY_CUSTOMER:\n      if (isOwnTransition) {\n        return <FormattedMessage id=\"ActivityFeed.ownTransitionReview\" values={{ displayName }} />;\n      } else {\n        // show the leave a review link if current user is not the first\n        // one to leave a review\n        const reviewPeriodIsOver = txIsReviewed(transaction);\n        const userHasLeftAReview = hasUserLeftAReviewFirst(ownRole, transaction);\n        const reviewLink = !(reviewPeriodIsOver || userHasLeftAReview) ? (\n          <InlineTextButton onClick={onOpenReviewModal}>\n            <FormattedMessage id=\"ActivityFeed.leaveAReviewSecond\" values={{ displayName }} />\n          </InlineTextButton>\n        ) : null;\n        return (\n          <FormattedMessage\n            id=\"ActivityFeed.transitionReview\"\n            values={{ displayName, reviewLink }}\n          />\n        );\n      }\n    case TRANSITION_REVIEW_2_BY_PROVIDER:\n    case TRANSITION_REVIEW_2_BY_CUSTOMER:\n      if (isOwnTransition) {\n        return <FormattedMessage id=\"ActivityFeed.ownTransitionReview\" values={{ displayName }} />;\n      } else {\n        return (\n          <FormattedMessage\n            id=\"ActivityFeed.transitionReview\"\n            values={{ displayName, reviewLink: null }}\n          />\n        );\n      }\n\n    default:\n      log.error(new Error('Unknown transaction transition type'), 'unknown-transition-type', {\n        transitionType: currentTransition,\n      });\n      return '';\n  }\n};\n\nconst reviewByAuthorId = (transaction, userId) => {\n  return transaction.reviews.filter(r => r.author.id.uuid === userId.uuid)[0];\n};\n\nconst Transition = props => {\n  const { transition, transaction, currentUser, intl, onOpenReviewModal } = props;\n\n  const currentTransaction = ensureTransaction(transaction);\n  const customer = currentTransaction.customer;\n  const provider = currentTransaction.provider;\n\n  const deletedListing = intl.formatMessage({\n    id: 'ActivityFeed.deletedListing',\n  });\n  const listingTitle = currentTransaction.listing.attributes.deleted\n    ? deletedListing\n    : currentTransaction.listing.attributes.title;\n  const lastTransition = currentTransaction.attributes.lastTransition;\n\n  const ownRole = getUserTxRole(currentUser.id, currentTransaction);\n\n  const otherUsersName = txRoleIsProvider(ownRole) ? (\n    <UserDisplayName user={customer} intl={intl} />\n  ) : (\n    <UserDisplayName user={provider} intl={intl} />\n  );\n\n  const transitionMessage = resolveTransitionMessage(\n    transaction,\n    transition,\n    listingTitle,\n    ownRole,\n    otherUsersName,\n    intl,\n    onOpenReviewModal\n  );\n  const currentTransition = transition.transition;\n\n  let reviewComponent = null;\n\n  if (transitionIsReviewed(lastTransition)) {\n    if (isCustomerReview(currentTransition)) {\n      const review = reviewByAuthorId(currentTransaction, customer.id);\n      reviewComponent = (\n        <Review content={review.attributes.content} rating={review.attributes.rating} />\n      );\n    } else if (isProviderReview(currentTransition)) {\n      const review = reviewByAuthorId(currentTransaction, provider.id);\n      reviewComponent = (\n        <Review content={review.attributes.content} rating={review.attributes.rating} />\n      );\n    }\n  }\n\n  const todayString = intl.formatMessage({ id: 'ActivityFeed.today' });\n\n  return (\n    <div className={css.transition}>\n      <div className={css.bullet}>\n        <p className={css.transitionContent}>•</p>\n      </div>\n      <div>\n        <p className={css.transitionContent}>{transitionMessage}</p>\n        <p className={css.transitionDate}>{formatDate(intl, todayString, transition.createdAt)}</p>\n        {reviewComponent}\n      </div>\n    </div>\n  );\n};\n\nTransition.propTypes = {\n  transition: propTypes.transition.isRequired,\n  transaction: propTypes.transaction.isRequired,\n  currentUser: propTypes.currentUser.isRequired,\n  intl: intlShape.isRequired,\n  onOpenReviewModal: func.isRequired,\n};\n\nconst EmptyTransition = () => {\n  return (\n    <div className={css.transition}>\n      <div className={css.bullet}>\n        <p className={css.transitionContent}>•</p>\n      </div>\n      <div>\n        <p className={css.transitionContent} />\n        <p className={css.transitionDate} />\n      </div>\n    </div>\n  );\n};\n\nconst isMessage = item => item && item.type === 'message';\n\n// Compare function for sorting an array containing messages and transitions\nconst compareItems = (a, b) => {\n  const itemDate = item => (isMessage(item) ? item.attributes.createdAt : item.createdAt);\n  return itemDate(a) - itemDate(b);\n};\n\nconst organizedItems = (messages, transitions, hideOldTransitions) => {\n  const items = messages.concat(transitions).sort(compareItems);\n  if (hideOldTransitions) {\n    // Hide transitions that happened before the oldest message. Since\n    // we have older items (messages) that we are not showing, seeing\n    // old transitions would be confusing.\n    return dropWhile(items, i => !isMessage(i));\n  } else {\n    return items;\n  }\n};\n\nexport const ActivityFeedComponent = props => {\n  const {\n    rootClassName,\n    className,\n    messages,\n    transaction,\n    currentUser,\n    hasOlderMessages,\n    onOpenReviewModal,\n    onShowOlderMessages,\n    fetchMessagesInProgress,\n    intl,\n  } = props;\n  const classes = classNames(rootClassName || css.root, className);\n\n  const currentTransaction = ensureTransaction(transaction);\n  const transitions = currentTransaction.attributes.transitions\n    ? currentTransaction.attributes.transitions\n    : [];\n  const currentCustomer = ensureUser(currentTransaction.customer);\n  const currentProvider = ensureUser(currentTransaction.provider);\n  const currentListing = ensureListing(currentTransaction.listing);\n\n  const transitionsAvailable = !!(\n    currentUser &&\n    currentUser.id &&\n    currentCustomer.id &&\n    currentProvider.id &&\n    currentListing.id\n  );\n\n  // combine messages and transaction transitions\n  const items = organizedItems(messages, transitions, hasOlderMessages || fetchMessagesInProgress);\n\n  const transitionComponent = transition => {\n    if (transitionsAvailable) {\n      return (\n        <Transition\n          transition={transition}\n          transaction={transaction}\n          currentUser={currentUser}\n          intl={intl}\n          onOpenReviewModal={onOpenReviewModal}\n        />\n      );\n    } else {\n      return <EmptyTransition />;\n    }\n  };\n\n  const messageComponent = message => {\n    const isOwnMessage =\n      message.sender &&\n      message.sender.id &&\n      currentUser &&\n      currentUser.id &&\n      message.sender.id.uuid === currentUser.id.uuid;\n    if (isOwnMessage) {\n      return <OwnMessage message={message} intl={intl} />;\n    }\n    return <Message message={message} intl={intl} />;\n  };\n\n  const messageListItem = message => {\n    return (\n      <li id={`msg-${message.id.uuid}`} key={message.id.uuid} className={css.messageItem}>\n        {messageComponent(message)}\n      </li>\n    );\n  };\n\n  const transitionListItem = transition => {\n    if (isRelevantPastTransition(transition.transition)) {\n      return (\n        <li key={transition.transition} className={css.transitionItem}>\n          {transitionComponent(transition)}\n        </li>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  return (\n    <ul className={classes}>\n      {hasOlderMessages ? (\n        <li className={css.showOlderWrapper} key=\"show-older-messages\">\n          <InlineTextButton className={css.showOlderButton} onClick={onShowOlderMessages}>\n            <FormattedMessage id=\"ActivityFeed.showOlderMessages\" />\n          </InlineTextButton>\n        </li>\n      ) : null}\n      {items.map(item => {\n        if (isMessage(item)) {\n          return messageListItem(item);\n        } else {\n          return transitionListItem(item);\n        }\n      })}\n    </ul>\n  );\n};\n\nActivityFeedComponent.defaultProps = {\n  rootClassName: null,\n  className: null,\n};\n\nActivityFeedComponent.propTypes = {\n  rootClassName: string,\n  className: string,\n\n  currentUser: propTypes.currentUser,\n  transaction: propTypes.transaction,\n  messages: arrayOf(propTypes.message),\n  hasOlderMessages: bool.isRequired,\n  onOpenReviewModal: func.isRequired,\n  onShowOlderMessages: func.isRequired,\n  fetchMessagesInProgress: bool.isRequired,\n\n  // from injectIntl\n  intl: intlShape.isRequired,\n};\n\nconst ActivityFeed = injectIntl(ActivityFeedComponent);\n\nexport default ActivityFeed;\n"]},"metadata":{},"sourceType":"module"}