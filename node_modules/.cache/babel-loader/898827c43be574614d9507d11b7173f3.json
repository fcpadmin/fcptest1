{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/Discussion/Discussion.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '../../components';\nimport css from './Discussion.css';\n\nconst Message = props => {\n  const date = props.date,\n        author = props.author,\n        text = props.text;\n  const timestamp = \"\".concat(date.toISOString());\n  return React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: css.messageDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, timestamp), React.createElement(\"div\", {\n    className: css.messageText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, text), React.createElement(\"span\", {\n    className: css.messageAuthor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, author));\n};\n\nconst instanceOf = PropTypes.instanceOf,\n      string = PropTypes.string,\n      arrayOf = PropTypes.arrayOf,\n      object = PropTypes.object;\nMessage.propTypes = {\n  date: instanceOf(Date).isRequired,\n  author: string.isRequired,\n  text: string.isRequired\n};\n\nclass Discussion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: ''\n    };\n    this.handleNewMessage = this.handleNewMessage.bind(this);\n    this.handleOnChange = this.handleOnChange.bind(this);\n  }\n\n  handleOnChange() {\n    this.setState({\n      message: this.input.value\n    });\n  }\n\n  handleNewMessage(e) {\n    e.preventDefault(); // eslint-disable-next-line no-console\n\n    console.log('new message:', this.input.value);\n    this.setState({\n      message: ''\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.props.messages.map(msg => React.createElement(Message, Object.assign({\n      key: msg.id\n    }, msg, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })))), React.createElement(\"form\", {\n      className: css.sendMessageForm,\n      onSubmit: this.handleNewMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: css.sendMessageInput,\n      autoFocus: true,\n      type: \"text\",\n      ref: input => {\n        this.input = input;\n      },\n      value: this.state.message,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: css.sendMessageButton,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Send\")));\n  }\n\n}\n\nDiscussion.defaultProps = {\n  className: null,\n  messages: []\n};\nDiscussion.propTypes = {\n  className: string,\n  messages: arrayOf(object)\n};\nexport default Discussion;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/Discussion/Discussion.js"],"names":["React","Component","PropTypes","Button","css","Message","props","date","author","text","timestamp","toISOString","messageDate","messageText","messageAuthor","instanceOf","string","arrayOf","object","propTypes","Date","isRequired","Discussion","constructor","state","message","handleNewMessage","bind","handleOnChange","setState","input","value","e","preventDefault","console","log","render","className","messages","map","msg","id","sendMessageForm","sendMessageInput","sendMessageButton","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA,QACfC,IADe,GACQD,KADR,CACfC,IADe;AAAA,QACTC,MADS,GACQF,KADR,CACTE,MADS;AAAA,QACDC,IADC,GACQH,KADR,CACDG,IADC;AAEvB,QAAMC,SAAS,aAAMH,IAAI,CAACI,WAAL,EAAN,CAAf;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAEP,GAAG,CAACQ,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCF,SAAnC,CADF,EAEE;AAAK,IAAA,SAAS,EAAEN,GAAG,CAACS,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCJ,IAAlC,CAFF,EAGE;AAAM,IAAA,SAAS,EAAEL,GAAG,CAACU,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCN,MAArC,CAHF,CADF;AAOD,CAVD;;MAYQO,U,GAAwCb,S,CAAxCa,U;MAAYC,M,GAA4Bd,S,CAA5Bc,M;MAAQC,O,GAAoBf,S,CAApBe,O;MAASC,M,GAAWhB,S,CAAXgB,M;AAErCb,OAAO,CAACc,SAAR,GAAoB;AAClBZ,EAAAA,IAAI,EAAEQ,UAAU,CAACK,IAAD,CAAV,CAAiBC,UADL;AAElBb,EAAAA,MAAM,EAAEQ,MAAM,CAACK,UAFG;AAGlBZ,EAAAA,IAAI,EAAEO,MAAM,CAACK;AAHK,CAApB;;AAMA,MAAMC,UAAN,SAAyBrB,SAAzB,CAAmC;AACjCsB,EAAAA,WAAW,CAACjB,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKkB,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AACDC,EAAAA,cAAc,GAAG;AACf,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,OAAO,EAAE,KAAKK,KAAL,CAAWC;AAAtB,KAAd;AACD;;AACDL,EAAAA,gBAAgB,CAACM,CAAD,EAAI;AAClBA,IAAAA,CAAC,CAACC,cAAF,GADkB,CAElB;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKL,KAAL,CAAWC,KAAvC;AACA,SAAKF,QAAL,CAAc;AAAEJ,MAAAA,OAAO,EAAE;AAAX,KAAd;AACD;;AACDW,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAE,KAAK9B,KAAL,CAAW+B,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK/B,KAAL,CAAWgC,QAAX,CAAoBC,GAApB,CAAwBC,GAAG,IAC1B,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,GAAG,CAACC;AAAlB,OAA0BD,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD,CADH,CADF,EAME;AAAM,MAAA,SAAS,EAAEpC,GAAG,CAACsC,eAArB;AAAsC,MAAA,QAAQ,EAAE,KAAKhB,gBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAEtB,GAAG,CAACuC,gBADjB;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,GAAG,EAAEb,KAAK,IAAI;AACZ,aAAKA,KAAL,GAAaA,KAAb;AACD,OANH;AAOE,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,OAPpB;AAQE,MAAA,QAAQ,EAAE,KAAKG,cARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAWE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAExB,GAAG,CAACwC,iBAAvB;AAA0C,MAAA,IAAI,EAAC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,CANF,CADF;AAwBD;;AAzCgC;;AA4CnCtB,UAAU,CAACuB,YAAX,GAA0B;AAAER,EAAAA,SAAS,EAAE,IAAb;AAAmBC,EAAAA,QAAQ,EAAE;AAA7B,CAA1B;AAEAhB,UAAU,CAACH,SAAX,GAAuB;AAAEkB,EAAAA,SAAS,EAAErB,MAAb;AAAqBsB,EAAAA,QAAQ,EAAErB,OAAO,CAACC,MAAD;AAAtC,CAAvB;AAEA,eAAeI,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '../../components';\n\nimport css from './Discussion.css';\n\nconst Message = props => {\n  const { date, author, text } = props;\n  const timestamp = `${date.toISOString()}`;\n  return (\n    <li>\n      <span className={css.messageDate}>{timestamp}</span>\n      <div className={css.messageText}>{text}</div>\n      <span className={css.messageAuthor}>{author}</span>\n    </li>\n  );\n};\n\nconst { instanceOf, string, arrayOf, object } = PropTypes;\n\nMessage.propTypes = {\n  date: instanceOf(Date).isRequired,\n  author: string.isRequired,\n  text: string.isRequired,\n};\n\nclass Discussion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { message: '' };\n    this.handleNewMessage = this.handleNewMessage.bind(this);\n    this.handleOnChange = this.handleOnChange.bind(this);\n  }\n  handleOnChange() {\n    this.setState({ message: this.input.value });\n  }\n  handleNewMessage(e) {\n    e.preventDefault();\n    // eslint-disable-next-line no-console\n    console.log('new message:', this.input.value);\n    this.setState({ message: '' });\n  }\n  render() {\n    return (\n      <div className={this.props.className}>\n        <ul>\n          {this.props.messages.map(msg => (\n            <Message key={msg.id} {...msg} />\n          ))}\n        </ul>\n        <form className={css.sendMessageForm} onSubmit={this.handleNewMessage}>\n          <input\n            className={css.sendMessageInput}\n            autoFocus\n            type=\"text\"\n            ref={input => {\n              this.input = input;\n            }}\n            value={this.state.message}\n            onChange={this.handleOnChange}\n          />\n          <Button className={css.sendMessageButton} type=\"submit\">\n            Send\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nDiscussion.defaultProps = { className: null, messages: [] };\n\nDiscussion.propTypes = { className: string, messages: arrayOf(object) };\n\nexport default Discussion;\n"]},"metadata":{},"sourceType":"module"}