{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/ListingLink/ListingLink.js\";\n\n/*\n  A component so safely link to the ListingPage of the given listing.\n\n  When the listing is pending approval, the normal ListingPage won't\n  work as the listing isn't yet published. This component links to the\n  correct pending-approval variant URL or to the normal ListingPage\n  based on the listing state.\n*/\nimport React from 'react';\nimport { string, oneOfType, node } from 'prop-types';\nimport { richText } from '../../util/richText';\nimport { LISTING_STATE_DRAFT, LISTING_STATE_PENDING_APPROVAL, propTypes } from '../../util/types';\nimport { LISTING_PAGE_DRAFT_VARIANT, LISTING_PAGE_PENDING_APPROVAL_VARIANT, createSlug } from '../../util/urlHelpers';\nimport { NamedLink } from '../../components';\nimport css from './ListingLink.css';\nconst MIN_LENGTH_FOR_LONG_WORDS = 16;\n\nconst ListingLink = props => {\n  const className = props.className,\n        listing = props.listing,\n        children = props.children;\n  const listingLoaded = listing && listing.id;\n\n  if (!listingLoaded) {\n    return null;\n  }\n\n  const id = listing.id.uuid;\n  const _listing$attributes = listing.attributes,\n        title = _listing$attributes.title,\n        state = _listing$attributes.state;\n  const slug = createSlug(title);\n  const richTitle = React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, richText(title, {\n    longWordMinLength: MIN_LENGTH_FOR_LONG_WORDS,\n    longWordClass: css.longWord\n  }));\n  const isPendingApproval = state === LISTING_STATE_PENDING_APPROVAL;\n  const isDraft = state === LISTING_STATE_DRAFT;\n  const variant = isPendingApproval ? LISTING_PAGE_PENDING_APPROVAL_VARIANT : isDraft ? LISTING_PAGE_DRAFT_VARIANT : null;\n  const linkProps = !!variant ? {\n    name: 'ListingPageVariant',\n    params: {\n      id,\n      slug,\n      variant\n    }\n  } : {\n    name: 'ListingPage',\n    params: {\n      id,\n      slug\n    }\n  };\n  return React.createElement(NamedLink, Object.assign({\n    className: className\n  }, linkProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), children ? children : richTitle || '');\n};\n\nListingLink.defaultProps = {\n  className: null,\n  listing: null,\n  children: null\n};\nListingLink.propTypes = {\n  className: string,\n  listing: oneOfType([propTypes.listing, propTypes.ownListing]),\n  children: node\n};\nexport default ListingLink;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/ListingLink/ListingLink.js"],"names":["React","string","oneOfType","node","richText","LISTING_STATE_DRAFT","LISTING_STATE_PENDING_APPROVAL","propTypes","LISTING_PAGE_DRAFT_VARIANT","LISTING_PAGE_PENDING_APPROVAL_VARIANT","createSlug","NamedLink","css","MIN_LENGTH_FOR_LONG_WORDS","ListingLink","props","className","listing","children","listingLoaded","id","uuid","attributes","title","state","slug","richTitle","longWordMinLength","longWordClass","longWord","isPendingApproval","isDraft","variant","linkProps","name","params","defaultProps","ownListing"],"mappings":";;AAAA;;;;;;;;AAQA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,IAA5B,QAAwC,YAAxC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,mBAAT,EAA8BC,8BAA9B,EAA8DC,SAA9D,QAA+E,kBAA/E;AACA,SACEC,0BADF,EAEEC,qCAFF,EAGEC,UAHF,QAIO,uBAJP;AAKA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;AAEA,MAAMC,yBAAyB,GAAG,EAAlC;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA,QACnBC,SADmB,GACcD,KADd,CACnBC,SADmB;AAAA,QACRC,OADQ,GACcF,KADd,CACRE,OADQ;AAAA,QACCC,QADD,GACcH,KADd,CACCG,QADD;AAE3B,QAAMC,aAAa,GAAGF,OAAO,IAAIA,OAAO,CAACG,EAAzC;;AACA,MAAI,CAACD,aAAL,EAAoB;AAClB,WAAO,IAAP;AACD;;AACD,QAAMC,EAAE,GAAGH,OAAO,CAACG,EAAR,CAAWC,IAAtB;AAN2B,8BAOFJ,OAAO,CAACK,UAPN;AAAA,QAOnBC,KAPmB,uBAOnBA,KAPmB;AAAA,QAOZC,KAPY,uBAOZA,KAPY;AAQ3B,QAAMC,IAAI,GAAGf,UAAU,CAACa,KAAD,CAAvB;AACA,QAAMG,SAAS,GACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,QAAQ,CAACmB,KAAD,EAAQ;AACfI,IAAAA,iBAAiB,EAAEd,yBADJ;AAEfe,IAAAA,aAAa,EAAEhB,GAAG,CAACiB;AAFJ,GAAR,CADX,CADF;AASA,QAAMC,iBAAiB,GAAGN,KAAK,KAAKlB,8BAApC;AACA,QAAMyB,OAAO,GAAGP,KAAK,KAAKnB,mBAA1B;AACA,QAAM2B,OAAO,GAAGF,iBAAiB,GAC7BrB,qCAD6B,GAE7BsB,OAAO,GACPvB,0BADO,GAEP,IAJJ;AAKA,QAAMyB,SAAS,GAAG,CAAC,CAACD,OAAF,GACd;AACEE,IAAAA,IAAI,EAAE,oBADR;AAEEC,IAAAA,MAAM,EAAE;AACNf,MAAAA,EADM;AAENK,MAAAA,IAFM;AAGNO,MAAAA;AAHM;AAFV,GADc,GASd;AACEE,IAAAA,IAAI,EAAE,aADR;AAEEC,IAAAA,MAAM,EAAE;AAAEf,MAAAA,EAAF;AAAMK,MAAAA;AAAN;AAFV,GATJ;AAaA,SACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAET;AAAtB,KAAqCiB,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGf,QAAQ,GAAGA,QAAH,GAAcQ,SAAS,IAAI,EADtC,CADF;AAKD,CA3CD;;AA4CAZ,WAAW,CAACsB,YAAZ,GAA2B;AACzBpB,EAAAA,SAAS,EAAE,IADc;AAEzBC,EAAAA,OAAO,EAAE,IAFgB;AAGzBC,EAAAA,QAAQ,EAAE;AAHe,CAA3B;AAMAJ,WAAW,CAACP,SAAZ,GAAwB;AACtBS,EAAAA,SAAS,EAAEf,MADW;AAEtBgB,EAAAA,OAAO,EAAEf,SAAS,CAAC,CAACK,SAAS,CAACU,OAAX,EAAoBV,SAAS,CAAC8B,UAA9B,CAAD,CAFI;AAGtBnB,EAAAA,QAAQ,EAAEf;AAHY,CAAxB;AAMA,eAAeW,WAAf","sourcesContent":["/*\n  A component so safely link to the ListingPage of the given listing.\n\n  When the listing is pending approval, the normal ListingPage won't\n  work as the listing isn't yet published. This component links to the\n  correct pending-approval variant URL or to the normal ListingPage\n  based on the listing state.\n*/\nimport React from 'react';\nimport { string, oneOfType, node } from 'prop-types';\nimport { richText } from '../../util/richText';\nimport { LISTING_STATE_DRAFT, LISTING_STATE_PENDING_APPROVAL, propTypes } from '../../util/types';\nimport {\n  LISTING_PAGE_DRAFT_VARIANT,\n  LISTING_PAGE_PENDING_APPROVAL_VARIANT,\n  createSlug,\n} from '../../util/urlHelpers';\nimport { NamedLink } from '../../components';\n\nimport css from './ListingLink.css';\n\nconst MIN_LENGTH_FOR_LONG_WORDS = 16;\n\nconst ListingLink = props => {\n  const { className, listing, children } = props;\n  const listingLoaded = listing && listing.id;\n  if (!listingLoaded) {\n    return null;\n  }\n  const id = listing.id.uuid;\n  const { title, state } = listing.attributes;\n  const slug = createSlug(title);\n  const richTitle = (\n    <span>\n      {richText(title, {\n        longWordMinLength: MIN_LENGTH_FOR_LONG_WORDS,\n        longWordClass: css.longWord,\n      })}\n    </span>\n  );\n\n  const isPendingApproval = state === LISTING_STATE_PENDING_APPROVAL;\n  const isDraft = state === LISTING_STATE_DRAFT;\n  const variant = isPendingApproval\n    ? LISTING_PAGE_PENDING_APPROVAL_VARIANT\n    : isDraft\n    ? LISTING_PAGE_DRAFT_VARIANT\n    : null;\n  const linkProps = !!variant\n    ? {\n        name: 'ListingPageVariant',\n        params: {\n          id,\n          slug,\n          variant,\n        },\n      }\n    : {\n        name: 'ListingPage',\n        params: { id, slug },\n      };\n  return (\n    <NamedLink className={className} {...linkProps}>\n      {children ? children : richTitle || ''}\n    </NamedLink>\n  );\n};\nListingLink.defaultProps = {\n  className: null,\n  listing: null,\n  children: null,\n};\n\nListingLink.propTypes = {\n  className: string,\n  listing: oneOfType([propTypes.listing, propTypes.ownListing]),\n  children: node,\n};\n\nexport default ListingLink;\n"]},"metadata":{},"sourceType":"module"}