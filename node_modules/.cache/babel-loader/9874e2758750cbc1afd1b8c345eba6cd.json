{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/forms/SendMessageForm/SendMessageForm.js\";\nimport React, { Component } from 'react';\nimport { string, bool, func } from 'prop-types';\nimport { compose } from 'redux';\nimport { FormattedMessage, injectIntl, intlShape } from 'react-intl';\nimport { Form as FinalForm } from 'react-final-form';\nimport classNames from 'classnames';\nimport { Form, FieldTextInput, SecondaryButton } from '../../components';\nimport { propTypes } from '../../util/types';\nimport css from './SendMessageForm.css';\nconst BLUR_TIMEOUT_MS = 100;\n\nconst IconSendMessage = () => {\n  return React.createElement(\"svg\", {\n    className: css.sendIcon,\n    width: \"14\",\n    height: \"14\",\n    viewBox: \"0 0 14 14\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: css.strokeMatter,\n    fill: \"none\",\n    fillRule: \"evenodd\",\n    strokeLinejoin: \"round\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    d: \"M12.91 1L0 7.003l5.052 2.212z\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"path\", {\n    d: \"M10.75 11.686L5.042 9.222l7.928-8.198z\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"path\", {\n    d: \"M5.417 8.583v4.695l2.273-2.852\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })));\n};\n\nclass SendMessageFormComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.blurTimeoutId = null;\n  }\n\n  handleFocus() {\n    this.props.onFocus();\n    window.clearTimeout(this.blurTimeoutId);\n  }\n\n  handleBlur() {\n    // We only trigger a blur if another focus event doesn't come\n    // within a timeout. This enables keeping the focus synced when\n    // focus is switched between the message area and the submit\n    // button.\n    this.blurTimeoutId = window.setTimeout(() => {\n      this.props.onBlur();\n    }, BLUR_TIMEOUT_MS);\n  }\n\n  render() {\n    return React.createElement(FinalForm, Object.assign({}, this.props, {\n      render: formRenderProps => {\n        const rootClassName = formRenderProps.rootClassName,\n              className = formRenderProps.className,\n              messagePlaceholder = formRenderProps.messagePlaceholder,\n              handleSubmit = formRenderProps.handleSubmit,\n              inProgress = formRenderProps.inProgress,\n              sendMessageError = formRenderProps.sendMessageError,\n              invalid = formRenderProps.invalid,\n              form = formRenderProps.form;\n        const classes = classNames(rootClassName || css.root, className);\n        const submitInProgress = inProgress;\n        const submitDisabled = invalid || submitInProgress;\n        return React.createElement(Form, {\n          className: classes,\n          onSubmit: values => handleSubmit(values, form),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(FieldTextInput, {\n          inputRootClass: css.textarea,\n          type: \"textarea\",\n          id: \"message\",\n          name: \"message\",\n          placeholder: messagePlaceholder,\n          onFocus: this.handleFocus,\n          onBlur: this.handleBlur,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: css.submitContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: css.errorContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, sendMessageError ? React.createElement(\"p\", {\n          className: css.error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(FormattedMessage, {\n          id: \"SendMessageForm.sendFailed\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        })) : null), React.createElement(SecondaryButton, {\n          rootClassName: css.submitButton,\n          inProgress: submitInProgress,\n          disabled: submitDisabled,\n          onFocus: this.handleFocus,\n          onBlur: this.handleBlur,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(IconSendMessage, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }), React.createElement(FormattedMessage, {\n          id: \"SendMessageForm.sendMessage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }))));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n}\n\nSendMessageFormComponent.defaultProps = {\n  rootClassName: null,\n  className: null,\n  inProgress: false,\n  messagePlaceholder: null,\n  onFocus: () => null,\n  onBlur: () => null,\n  sendMessageError: null\n};\nSendMessageFormComponent.propTypes = {\n  rootClassName: string,\n  className: string,\n  inProgress: bool,\n  messagePlaceholder: string,\n  onSubmit: func.isRequired,\n  onFocus: func,\n  onBlur: func,\n  sendMessageError: propTypes.error,\n  // from injectIntl\n  intl: intlShape.isRequired\n};\nconst SendMessageForm = compose(injectIntl)(SendMessageFormComponent);\nSendMessageForm.displayName = 'SendMessageForm';\nexport default SendMessageForm;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/forms/SendMessageForm/SendMessageForm.js"],"names":["React","Component","string","bool","func","compose","FormattedMessage","injectIntl","intlShape","Form","FinalForm","classNames","FieldTextInput","SecondaryButton","propTypes","css","BLUR_TIMEOUT_MS","IconSendMessage","sendIcon","strokeMatter","SendMessageFormComponent","constructor","props","handleFocus","bind","handleBlur","blurTimeoutId","onFocus","window","clearTimeout","setTimeout","onBlur","render","formRenderProps","rootClassName","className","messagePlaceholder","handleSubmit","inProgress","sendMessageError","invalid","form","classes","root","submitInProgress","submitDisabled","values","textarea","submitContainer","errorContainer","error","submitButton","defaultProps","onSubmit","isRequired","intl","SendMessageForm","displayName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { string, bool, func } from 'prop-types';\nimport { compose } from 'redux';\nimport { FormattedMessage, injectIntl, intlShape } from 'react-intl';\nimport { Form as FinalForm } from 'react-final-form';\nimport classNames from 'classnames';\nimport { Form, FieldTextInput, SecondaryButton } from '../../components';\nimport { propTypes } from '../../util/types';\n\nimport css from './SendMessageForm.css';\n\nconst BLUR_TIMEOUT_MS = 100;\n\nconst IconSendMessage = () => {\n  return (\n    <svg\n      className={css.sendIcon}\n      width=\"14\"\n      height=\"14\"\n      viewBox=\"0 0 14 14\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g className={css.strokeMatter} fill=\"none\" fillRule=\"evenodd\" strokeLinejoin=\"round\">\n        <path d=\"M12.91 1L0 7.003l5.052 2.212z\" />\n        <path d=\"M10.75 11.686L5.042 9.222l7.928-8.198z\" />\n        <path d=\"M5.417 8.583v4.695l2.273-2.852\" />\n      </g>\n    </svg>\n  );\n};\n\nclass SendMessageFormComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.blurTimeoutId = null;\n  }\n\n  handleFocus() {\n    this.props.onFocus();\n    window.clearTimeout(this.blurTimeoutId);\n  }\n\n  handleBlur() {\n    // We only trigger a blur if another focus event doesn't come\n    // within a timeout. This enables keeping the focus synced when\n    // focus is switched between the message area and the submit\n    // button.\n    this.blurTimeoutId = window.setTimeout(() => {\n      this.props.onBlur();\n    }, BLUR_TIMEOUT_MS);\n  }\n\n  render() {\n    return (\n      <FinalForm\n        {...this.props}\n        render={formRenderProps => {\n          const {\n            rootClassName,\n            className,\n            messagePlaceholder,\n            handleSubmit,\n            inProgress,\n            sendMessageError,\n            invalid,\n            form,\n          } = formRenderProps;\n\n          const classes = classNames(rootClassName || css.root, className);\n          const submitInProgress = inProgress;\n          const submitDisabled = invalid || submitInProgress;\n          return (\n            <Form className={classes} onSubmit={values => handleSubmit(values, form)}>\n              <FieldTextInput\n                inputRootClass={css.textarea}\n                type=\"textarea\"\n                id=\"message\"\n                name=\"message\"\n                placeholder={messagePlaceholder}\n                onFocus={this.handleFocus}\n                onBlur={this.handleBlur}\n              />\n              <div className={css.submitContainer}>\n                <div className={css.errorContainer}>\n                  {sendMessageError ? (\n                    <p className={css.error}>\n                      <FormattedMessage id=\"SendMessageForm.sendFailed\" />\n                    </p>\n                  ) : null}\n                </div>\n                <SecondaryButton\n                  rootClassName={css.submitButton}\n                  inProgress={submitInProgress}\n                  disabled={submitDisabled}\n                  onFocus={this.handleFocus}\n                  onBlur={this.handleBlur}\n                >\n                  <IconSendMessage />\n                  <FormattedMessage id=\"SendMessageForm.sendMessage\" />\n                </SecondaryButton>\n              </div>\n            </Form>\n          );\n        }}\n      />\n    );\n  }\n}\n\nSendMessageFormComponent.defaultProps = {\n  rootClassName: null,\n  className: null,\n  inProgress: false,\n  messagePlaceholder: null,\n  onFocus: () => null,\n  onBlur: () => null,\n  sendMessageError: null,\n};\n\nSendMessageFormComponent.propTypes = {\n  rootClassName: string,\n  className: string,\n  inProgress: bool,\n\n  messagePlaceholder: string,\n  onSubmit: func.isRequired,\n  onFocus: func,\n  onBlur: func,\n  sendMessageError: propTypes.error,\n\n  // from injectIntl\n  intl: intlShape.isRequired,\n};\n\nconst SendMessageForm = compose(injectIntl)(SendMessageFormComponent);\n\nSendMessageForm.displayName = 'SendMessageForm';\n\nexport default SendMessageForm;\n"]},"metadata":{},"sourceType":"module"}