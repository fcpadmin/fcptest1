{"ast":null,"code":"import _objectSpread from \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/containers/AuthenticationPage/AuthenticationPage.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { FormattedMessage, injectIntl, intlShape } from 'react-intl';\nimport classNames from 'classnames';\nimport config from '../../config';\nimport { propTypes } from '../../util/types';\nimport { ensureCurrentUser } from '../../util/data';\nimport { isSignupEmailTakenError, isTooManyEmailVerificationRequestsError } from '../../util/errors';\nimport { Page, NamedLink, NamedRedirect, LinkTabNavHorizontal, IconEmailSent, InlineTextButton, IconClose, LayoutSingleColumn, LayoutWrapperTopbar, LayoutWrapperMain, LayoutWrapperFooter, Footer, Modal, TermsOfService } from '../../components';\nimport { LoginForm, SignupForm } from '../../forms';\nimport { TopbarContainer } from '../../containers';\nimport { login, authenticationInProgress, signup } from '../../ducks/Auth.duck';\nimport { isScrollingDisabled } from '../../ducks/UI.duck';\nimport { sendVerificationEmail } from '../../ducks/user.duck';\nimport { manageDisableScrolling } from '../../ducks/UI.duck';\nimport css from './AuthenticationPage.css';\nexport class AuthenticationPageComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tosModalOpen: false\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          authInProgress = _this$props.authInProgress,\n          currentUser = _this$props.currentUser,\n          intl = _this$props.intl,\n          isAuthenticated = _this$props.isAuthenticated,\n          location = _this$props.location,\n          loginError = _this$props.loginError,\n          scrollingDisabled = _this$props.scrollingDisabled,\n          signupError = _this$props.signupError,\n          submitLogin = _this$props.submitLogin,\n          submitSignup = _this$props.submitSignup,\n          tab = _this$props.tab,\n          sendVerificationEmailInProgress = _this$props.sendVerificationEmailInProgress,\n          sendVerificationEmailError = _this$props.sendVerificationEmailError,\n          onResendVerificationEmail = _this$props.onResendVerificationEmail,\n          onManageDisableScrolling = _this$props.onManageDisableScrolling;\n    const isLogin = tab === 'login';\n    const from = location.state && location.state.from ? location.state.from : null;\n    const user = ensureCurrentUser(currentUser);\n    const currentUserLoaded = !!user.id; // We only want to show the email verification dialog in the signup\n    // tab if the user isn't being redirected somewhere else\n    // (i.e. `from` is present). We must also check the `emailVerified`\n    // flag only when the current user is fully loaded.\n\n    const showEmailVerification = !isLogin && currentUserLoaded && !user.attributes.emailVerified; // Already authenticated, redirect away from auth page\n\n    if (isAuthenticated && from) {\n      return React.createElement(Redirect, {\n        to: from,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    } else if (isAuthenticated && currentUserLoaded && !showEmailVerification) {\n      return React.createElement(NamedRedirect, {\n        name: \"LandingPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    }\n\n    const loginErrorMessage = React.createElement(\"div\", {\n      className: css.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"AuthenticationPage.loginFailed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }));\n    const signupErrorMessage = React.createElement(\"div\", {\n      className: css.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, isSignupEmailTakenError(signupError) ? React.createElement(FormattedMessage, {\n      id: \"AuthenticationPage.signupFailedEmailAlreadyTaken\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }) : React.createElement(FormattedMessage, {\n      id: \"AuthenticationPage.signupFailed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })); // eslint-disable-next-line no-confusing-arrow\n\n    const errorMessage = (error, message) => error ? message : null;\n\n    const loginOrSignupError = isLogin ? errorMessage(loginError, loginErrorMessage) : errorMessage(signupError, signupErrorMessage);\n    const fromState = {\n      state: from ? {\n        from\n      } : null\n    };\n    const tabs = [{\n      text: React.createElement(\"h1\", {\n        className: css.tab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"AuthenticationPage.signupLinkText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })),\n      selected: !isLogin,\n      linkProps: {\n        name: 'SignupPage',\n        to: fromState\n      }\n    }, {\n      text: React.createElement(\"h1\", {\n        className: css.tab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"AuthenticationPage.loginLinkText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })),\n      selected: isLogin,\n      linkProps: {\n        name: 'LoginPage',\n        to: fromState\n      }\n    }];\n\n    const handleSubmitSignup = values => {\n      const fname = values.fname,\n            lname = values.lname,\n            rest = _objectWithoutProperties(values, [\"fname\", \"lname\"]);\n\n      const params = _objectSpread({\n        firstName: fname.trim(),\n        lastName: lname.trim()\n      }, rest);\n\n      submitSignup(params);\n    };\n\n    const formContent = React.createElement(\"div\", {\n      className: css.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(LinkTabNavHorizontal, {\n      className: css.tabs,\n      tabs: tabs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), loginOrSignupError, isLogin ? React.createElement(LoginForm, {\n      className: css.form,\n      onSubmit: submitLogin,\n      inProgress: authInProgress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }) : React.createElement(SignupForm, {\n      className: css.form,\n      onSubmit: handleSubmitSignup,\n      inProgress: authInProgress,\n      onOpenTermsOfService: () => this.setState({\n        tosModalOpen: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }));\n    const name = user.attributes.profile.firstName;\n    const email = React.createElement(\"span\", {\n      className: css.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, user.attributes.email);\n    const resendEmailLink = React.createElement(InlineTextButton, {\n      rootClassName: css.modalHelperLink,\n      onClick: onResendVerificationEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"AuthenticationPage.resendEmailLinkText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }));\n    const fixEmailLink = React.createElement(NamedLink, {\n      className: css.modalHelperLink,\n      name: \"ContactDetailsPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"AuthenticationPage.fixEmailLinkText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }));\n    const resendErrorTranslationId = isTooManyEmailVerificationRequestsError(sendVerificationEmailError) ? 'AuthenticationPage.resendFailedTooManyRequests' : 'AuthenticationPage.resendFailed';\n    const resendErrorMessage = sendVerificationEmailError ? React.createElement(\"p\", {\n      className: css.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: resendErrorTranslationId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })) : null;\n    const emailVerificationContent = React.createElement(\"div\", {\n      className: css.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(NamedLink, {\n      className: css.verifyClose,\n      name: \"ProfileSettingsPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: css.closeText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"AuthenticationPage.verifyEmailClose\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })), React.createElement(IconClose, {\n      rootClassName: css.closeIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })), React.createElement(IconEmailSent, {\n      className: css.modalIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: css.modalTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"AuthenticationPage.verifyEmailTitle\",\n      values: {\n        name\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: css.modalMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"AuthenticationPage.verifyEmailText\",\n      values: {\n        email\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    })), resendErrorMessage, React.createElement(\"div\", {\n      className: css.bottomWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: css.modalHelperText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, sendVerificationEmailInProgress ? React.createElement(FormattedMessage, {\n      id: \"AuthenticationPage.sendingEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }) : React.createElement(FormattedMessage, {\n      id: \"AuthenticationPage.resendEmail\",\n      values: {\n        resendEmailLink\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: css.modalHelperText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"AuthenticationPage.fixEmail\",\n      values: {\n        fixEmailLink\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }))));\n    const siteTitle = config.siteTitle;\n    const schemaTitle = isLogin ? intl.formatMessage({\n      id: 'AuthenticationPage.schemaTitleLogin'\n    }, {\n      siteTitle\n    }) : intl.formatMessage({\n      id: 'AuthenticationPage.schemaTitleSignup'\n    }, {\n      siteTitle\n    });\n    const topbarClasses = classNames({\n      [css.hideOnMobile]: showEmailVerification\n    });\n    return React.createElement(Page, {\n      title: schemaTitle,\n      scrollingDisabled: scrollingDisabled,\n      schema: {\n        '@context': 'http://schema.org',\n        '@type': 'WebPage',\n        name: schemaTitle\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(LayoutSingleColumn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(LayoutWrapperTopbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(TopbarContainer, {\n      className: topbarClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    })), React.createElement(LayoutWrapperMain, {\n      className: css.layoutWrapperMain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: css.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, showEmailVerification ? emailVerificationContent : formContent), React.createElement(Modal, {\n      id: \"AuthenticationPage.tos\",\n      isOpen: this.state.tosModalOpen,\n      onClose: () => this.setState({\n        tosModalOpen: false\n      }),\n      onManageDisableScrolling: onManageDisableScrolling,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: css.termsWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: css.termsHeading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"AuthenticationPage.termsHeading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    })), React.createElement(TermsOfService, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    })))), React.createElement(LayoutWrapperFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }))));\n  }\n\n}\nAuthenticationPageComponent.defaultProps = {\n  currentUser: null,\n  loginError: null,\n  signupError: null,\n  tab: 'signup',\n  sendVerificationEmailError: null\n};\nconst bool = PropTypes.bool,\n      func = PropTypes.func,\n      object = PropTypes.object,\n      oneOf = PropTypes.oneOf,\n      shape = PropTypes.shape;\nAuthenticationPageComponent.propTypes = {\n  authInProgress: bool.isRequired,\n  currentUser: propTypes.currentUser,\n  isAuthenticated: bool.isRequired,\n  loginError: propTypes.error,\n  scrollingDisabled: bool.isRequired,\n  signupError: propTypes.error,\n  submitLogin: func.isRequired,\n  submitSignup: func.isRequired,\n  tab: oneOf(['login', 'signup']),\n  sendVerificationEmailInProgress: bool.isRequired,\n  sendVerificationEmailError: propTypes.error,\n  onResendVerificationEmail: func.isRequired,\n  onManageDisableScrolling: func.isRequired,\n  // from withRouter\n  location: shape({\n    state: object\n  }).isRequired,\n  // from injectIntl\n  intl: intlShape.isRequired\n};\n\nconst mapStateToProps = state => {\n  const _state$Auth = state.Auth,\n        isAuthenticated = _state$Auth.isAuthenticated,\n        loginError = _state$Auth.loginError,\n        signupError = _state$Auth.signupError;\n  const _state$user = state.user,\n        currentUser = _state$user.currentUser,\n        sendVerificationEmailInProgress = _state$user.sendVerificationEmailInProgress,\n        sendVerificationEmailError = _state$user.sendVerificationEmailError;\n  return {\n    authInProgress: authenticationInProgress(state),\n    currentUser,\n    isAuthenticated,\n    loginError,\n    scrollingDisabled: isScrollingDisabled(state),\n    signupError,\n    sendVerificationEmailInProgress,\n    sendVerificationEmailError\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  submitLogin: ({\n    email,\n    password\n  }) => dispatch(login(email, password)),\n  submitSignup: params => dispatch(signup(params)),\n  onResendVerificationEmail: () => dispatch(sendVerificationEmail()),\n  onManageDisableScrolling: (componentId, disableScrolling) => dispatch(manageDisableScrolling(componentId, disableScrolling))\n}); // Note: it is important that the withRouter HOC is **outside** the\n// connect HOC, otherwise React Router won't rerender any Route\n// components since connect implements a shouldComponentUpdate\n// lifecycle hook.\n//\n// See: https://github.com/ReactTraining/react-router/issues/4671\n\n\nconst AuthenticationPage = compose(withRouter, connect(mapStateToProps, mapDispatchToProps), injectIntl)(AuthenticationPageComponent);\nexport default AuthenticationPage;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/containers/AuthenticationPage/AuthenticationPage.js"],"names":["React","Component","PropTypes","compose","connect","withRouter","Redirect","FormattedMessage","injectIntl","intlShape","classNames","config","propTypes","ensureCurrentUser","isSignupEmailTakenError","isTooManyEmailVerificationRequestsError","Page","NamedLink","NamedRedirect","LinkTabNavHorizontal","IconEmailSent","InlineTextButton","IconClose","LayoutSingleColumn","LayoutWrapperTopbar","LayoutWrapperMain","LayoutWrapperFooter","Footer","Modal","TermsOfService","LoginForm","SignupForm","TopbarContainer","login","authenticationInProgress","signup","isScrollingDisabled","sendVerificationEmail","manageDisableScrolling","css","AuthenticationPageComponent","constructor","props","state","tosModalOpen","render","authInProgress","currentUser","intl","isAuthenticated","location","loginError","scrollingDisabled","signupError","submitLogin","submitSignup","tab","sendVerificationEmailInProgress","sendVerificationEmailError","onResendVerificationEmail","onManageDisableScrolling","isLogin","from","user","currentUserLoaded","id","showEmailVerification","attributes","emailVerified","loginErrorMessage","error","signupErrorMessage","errorMessage","message","loginOrSignupError","fromState","tabs","text","selected","linkProps","name","to","handleSubmitSignup","values","fname","lname","rest","params","firstName","trim","lastName","formContent","content","form","setState","profile","email","resendEmailLink","modalHelperLink","fixEmailLink","resendErrorTranslationId","resendErrorMessage","emailVerificationContent","verifyClose","closeText","closeIcon","modalIcon","modalTitle","modalMessage","bottomWrapper","modalHelperText","siteTitle","schemaTitle","formatMessage","topbarClasses","hideOnMobile","layoutWrapperMain","root","termsWrapper","termsHeading","defaultProps","bool","func","object","oneOf","shape","isRequired","mapStateToProps","Auth","mapDispatchToProps","dispatch","password","componentId","disableScrolling","AuthenticationPage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { FormattedMessage, injectIntl, intlShape } from 'react-intl';\nimport classNames from 'classnames';\nimport config from '../../config';\nimport { propTypes } from '../../util/types';\nimport { ensureCurrentUser } from '../../util/data';\nimport {\n  isSignupEmailTakenError,\n  isTooManyEmailVerificationRequestsError,\n} from '../../util/errors';\nimport {\n  Page,\n  NamedLink,\n  NamedRedirect,\n  LinkTabNavHorizontal,\n  IconEmailSent,\n  InlineTextButton,\n  IconClose,\n  LayoutSingleColumn,\n  LayoutWrapperTopbar,\n  LayoutWrapperMain,\n  LayoutWrapperFooter,\n  Footer,\n  Modal,\n  TermsOfService,\n} from '../../components';\nimport { LoginForm, SignupForm } from '../../forms';\nimport { TopbarContainer } from '../../containers';\nimport { login, authenticationInProgress, signup } from '../../ducks/Auth.duck';\nimport { isScrollingDisabled } from '../../ducks/UI.duck';\nimport { sendVerificationEmail } from '../../ducks/user.duck';\nimport { manageDisableScrolling } from '../../ducks/UI.duck';\n\nimport css from './AuthenticationPage.css';\n\nexport class AuthenticationPageComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { tosModalOpen: false };\n  }\n  render() {\n    const {\n      authInProgress,\n      currentUser,\n      intl,\n      isAuthenticated,\n      location,\n      loginError,\n      scrollingDisabled,\n      signupError,\n      submitLogin,\n      submitSignup,\n      tab,\n      sendVerificationEmailInProgress,\n      sendVerificationEmailError,\n      onResendVerificationEmail,\n      onManageDisableScrolling,\n    } = this.props;\n    const isLogin = tab === 'login';\n    const from = location.state && location.state.from ? location.state.from : null;\n\n    const user = ensureCurrentUser(currentUser);\n    const currentUserLoaded = !!user.id;\n\n    // We only want to show the email verification dialog in the signup\n    // tab if the user isn't being redirected somewhere else\n    // (i.e. `from` is present). We must also check the `emailVerified`\n    // flag only when the current user is fully loaded.\n    const showEmailVerification = !isLogin && currentUserLoaded && !user.attributes.emailVerified;\n\n    // Already authenticated, redirect away from auth page\n    if (isAuthenticated && from) {\n      return <Redirect to={from} />;\n    } else if (isAuthenticated && currentUserLoaded && !showEmailVerification) {\n      return <NamedRedirect name=\"LandingPage\" />;\n    }\n\n    const loginErrorMessage = (\n      <div className={css.error}>\n        <FormattedMessage id=\"AuthenticationPage.loginFailed\" />\n      </div>\n    );\n\n    const signupErrorMessage = (\n      <div className={css.error}>\n        {isSignupEmailTakenError(signupError) ? (\n          <FormattedMessage id=\"AuthenticationPage.signupFailedEmailAlreadyTaken\" />\n        ) : (\n          <FormattedMessage id=\"AuthenticationPage.signupFailed\" />\n        )}\n      </div>\n    );\n\n    // eslint-disable-next-line no-confusing-arrow\n    const errorMessage = (error, message) => (error ? message : null);\n    const loginOrSignupError = isLogin\n      ? errorMessage(loginError, loginErrorMessage)\n      : errorMessage(signupError, signupErrorMessage);\n\n    const fromState = { state: from ? { from } : null };\n\n    const tabs = [\n      {\n        text: (\n          <h1 className={css.tab}>\n            <FormattedMessage id=\"AuthenticationPage.signupLinkText\" />\n          </h1>\n        ),\n        selected: !isLogin,\n        linkProps: {\n          name: 'SignupPage',\n          to: fromState,\n        },\n      },\n      {\n        text: (\n          <h1 className={css.tab}>\n            <FormattedMessage id=\"AuthenticationPage.loginLinkText\" />\n          </h1>\n        ),\n        selected: isLogin,\n        linkProps: {\n          name: 'LoginPage',\n          to: fromState,\n        },\n      },\n    ];\n\n    const handleSubmitSignup = values => {\n      const { fname, lname, ...rest } = values;\n      const params = { firstName: fname.trim(), lastName: lname.trim(), ...rest };\n      submitSignup(params);\n    };\n\n    const formContent = (\n      <div className={css.content}>\n        <LinkTabNavHorizontal className={css.tabs} tabs={tabs} />\n        {loginOrSignupError}\n        {isLogin ? (\n          <LoginForm className={css.form} onSubmit={submitLogin} inProgress={authInProgress} />\n        ) : (\n          <SignupForm\n            className={css.form}\n            onSubmit={handleSubmitSignup}\n            inProgress={authInProgress}\n            onOpenTermsOfService={() => this.setState({ tosModalOpen: true })}\n          />\n        )}\n      </div>\n    );\n\n    const name = user.attributes.profile.firstName;\n    const email = <span className={css.email}>{user.attributes.email}</span>;\n\n    const resendEmailLink = (\n      <InlineTextButton rootClassName={css.modalHelperLink} onClick={onResendVerificationEmail}>\n        <FormattedMessage id=\"AuthenticationPage.resendEmailLinkText\" />\n      </InlineTextButton>\n    );\n    const fixEmailLink = (\n      <NamedLink className={css.modalHelperLink} name=\"ContactDetailsPage\">\n        <FormattedMessage id=\"AuthenticationPage.fixEmailLinkText\" />\n      </NamedLink>\n    );\n\n    const resendErrorTranslationId = isTooManyEmailVerificationRequestsError(\n      sendVerificationEmailError\n    )\n      ? 'AuthenticationPage.resendFailedTooManyRequests'\n      : 'AuthenticationPage.resendFailed';\n    const resendErrorMessage = sendVerificationEmailError ? (\n      <p className={css.error}>\n        <FormattedMessage id={resendErrorTranslationId} />\n      </p>\n    ) : null;\n\n    const emailVerificationContent = (\n      <div className={css.content}>\n        <NamedLink className={css.verifyClose} name=\"ProfileSettingsPage\">\n          <span className={css.closeText}>\n            <FormattedMessage id=\"AuthenticationPage.verifyEmailClose\" />\n          </span>\n          <IconClose rootClassName={css.closeIcon} />\n        </NamedLink>\n        <IconEmailSent className={css.modalIcon} />\n        <h1 className={css.modalTitle}>\n          <FormattedMessage id=\"AuthenticationPage.verifyEmailTitle\" values={{ name }} />\n        </h1>\n        <p className={css.modalMessage}>\n          <FormattedMessage id=\"AuthenticationPage.verifyEmailText\" values={{ email }} />\n        </p>\n        {resendErrorMessage}\n\n        <div className={css.bottomWrapper}>\n          <p className={css.modalHelperText}>\n            {sendVerificationEmailInProgress ? (\n              <FormattedMessage id=\"AuthenticationPage.sendingEmail\" />\n            ) : (\n              <FormattedMessage id=\"AuthenticationPage.resendEmail\" values={{ resendEmailLink }} />\n            )}\n          </p>\n          <p className={css.modalHelperText}>\n            <FormattedMessage id=\"AuthenticationPage.fixEmail\" values={{ fixEmailLink }} />\n          </p>\n        </div>\n      </div>\n    );\n\n    const siteTitle = config.siteTitle;\n    const schemaTitle = isLogin\n      ? intl.formatMessage({ id: 'AuthenticationPage.schemaTitleLogin' }, { siteTitle })\n      : intl.formatMessage({ id: 'AuthenticationPage.schemaTitleSignup' }, { siteTitle });\n\n    const topbarClasses = classNames({\n      [css.hideOnMobile]: showEmailVerification,\n    });\n\n    return (\n      <Page\n        title={schemaTitle}\n        scrollingDisabled={scrollingDisabled}\n        schema={{\n          '@context': 'http://schema.org',\n          '@type': 'WebPage',\n          name: schemaTitle,\n        }}\n      >\n        <LayoutSingleColumn>\n          <LayoutWrapperTopbar>\n            <TopbarContainer className={topbarClasses} />\n          </LayoutWrapperTopbar>\n          <LayoutWrapperMain className={css.layoutWrapperMain}>\n            <div className={css.root}>\n              {showEmailVerification ? emailVerificationContent : formContent}\n            </div>\n            <Modal\n              id=\"AuthenticationPage.tos\"\n              isOpen={this.state.tosModalOpen}\n              onClose={() => this.setState({ tosModalOpen: false })}\n              onManageDisableScrolling={onManageDisableScrolling}\n            >\n              <div className={css.termsWrapper}>\n                <h2 className={css.termsHeading}>\n                  <FormattedMessage id=\"AuthenticationPage.termsHeading\" />\n                </h2>\n                <TermsOfService />\n              </div>\n            </Modal>\n          </LayoutWrapperMain>\n          <LayoutWrapperFooter>\n            <Footer />\n          </LayoutWrapperFooter>\n        </LayoutSingleColumn>\n      </Page>\n    );\n  }\n}\n\nAuthenticationPageComponent.defaultProps = {\n  currentUser: null,\n  loginError: null,\n  signupError: null,\n  tab: 'signup',\n  sendVerificationEmailError: null,\n};\n\nconst { bool, func, object, oneOf, shape } = PropTypes;\n\nAuthenticationPageComponent.propTypes = {\n  authInProgress: bool.isRequired,\n  currentUser: propTypes.currentUser,\n  isAuthenticated: bool.isRequired,\n  loginError: propTypes.error,\n  scrollingDisabled: bool.isRequired,\n  signupError: propTypes.error,\n  submitLogin: func.isRequired,\n  submitSignup: func.isRequired,\n  tab: oneOf(['login', 'signup']),\n\n  sendVerificationEmailInProgress: bool.isRequired,\n  sendVerificationEmailError: propTypes.error,\n  onResendVerificationEmail: func.isRequired,\n  onManageDisableScrolling: func.isRequired,\n\n  // from withRouter\n  location: shape({ state: object }).isRequired,\n\n  // from injectIntl\n  intl: intlShape.isRequired,\n};\n\nconst mapStateToProps = state => {\n  const { isAuthenticated, loginError, signupError } = state.Auth;\n  const { currentUser, sendVerificationEmailInProgress, sendVerificationEmailError } = state.user;\n  return {\n    authInProgress: authenticationInProgress(state),\n    currentUser,\n    isAuthenticated,\n    loginError,\n    scrollingDisabled: isScrollingDisabled(state),\n    signupError,\n    sendVerificationEmailInProgress,\n    sendVerificationEmailError,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  submitLogin: ({ email, password }) => dispatch(login(email, password)),\n  submitSignup: params => dispatch(signup(params)),\n  onResendVerificationEmail: () => dispatch(sendVerificationEmail()),\n  onManageDisableScrolling: (componentId, disableScrolling) =>\n    dispatch(manageDisableScrolling(componentId, disableScrolling)),\n});\n\n// Note: it is important that the withRouter HOC is **outside** the\n// connect HOC, otherwise React Router won't rerender any Route\n// components since connect implements a shouldComponentUpdate\n// lifecycle hook.\n//\n// See: https://github.com/ReactTraining/react-router/issues/4671\nconst AuthenticationPage = compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  injectIntl\n)(AuthenticationPageComponent);\n\nexport default AuthenticationPage;\n"]},"metadata":{},"sourceType":"module"}