{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/containers/ListingPage/ActionBarMaybe.js\";\nimport React from 'react';\nimport { bool, oneOfType, object } from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport { LISTING_STATE_PENDING_APPROVAL, LISTING_STATE_CLOSED, LISTING_STATE_DRAFT, propTypes } from '../../util/types';\nimport { NamedLink } from '../../components';\nimport EditIcon from './EditIcon';\nimport css from './ListingPage.css';\nexport const ActionBarMaybe = props => {\n  const isOwnListing = props.isOwnListing,\n        listing = props.listing,\n        editParams = props.editParams;\n  const state = listing.attributes.state;\n  const isPendingApproval = state === LISTING_STATE_PENDING_APPROVAL;\n  const isClosed = state === LISTING_STATE_CLOSED;\n  const isDraft = state === LISTING_STATE_DRAFT;\n\n  if (isOwnListing) {\n    let ownListingTextTranslationId = 'ListingPage.ownListing';\n\n    if (isPendingApproval) {\n      ownListingTextTranslationId = 'ListingPage.ownListingPendingApproval';\n    } else if (isClosed) {\n      ownListingTextTranslationId = 'ListingPage.ownClosedListing';\n    } else if (isDraft) {\n      ownListingTextTranslationId = 'ListingPage.ownListingDraft';\n    }\n\n    const message = isDraft ? 'ListingPage.finishListing' : 'ListingPage.editListing';\n    const ownListingTextClasses = classNames(css.ownListingText, {\n      [css.ownListingTextPendingApproval]: isPendingApproval\n    });\n    return React.createElement(\"div\", {\n      className: css.actionBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: ownListingTextClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: ownListingTextTranslationId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(NamedLink, {\n      className: css.editListingLink,\n      name: \"EditListingPage\",\n      params: editParams,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(EditIcon, {\n      className: css.editIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(FormattedMessage, {\n      id: message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })));\n  } else if (isClosed) {\n    return React.createElement(\"div\", {\n      className: css.actionBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: css.closedListingText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"ListingPage.closedListing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })));\n  }\n\n  return null;\n};\nActionBarMaybe.propTypes = {\n  isOwnListing: bool.isRequired,\n  listing: oneOfType([propTypes.listing, propTypes.ownListing]).isRequired,\n  editParams: object.isRequired\n};\nActionBarMaybe.displayName = 'ActionBarMaybe';\nexport default ActionBarMaybe;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/containers/ListingPage/ActionBarMaybe.js"],"names":["React","bool","oneOfType","object","FormattedMessage","classNames","LISTING_STATE_PENDING_APPROVAL","LISTING_STATE_CLOSED","LISTING_STATE_DRAFT","propTypes","NamedLink","EditIcon","css","ActionBarMaybe","props","isOwnListing","listing","editParams","state","attributes","isPendingApproval","isClosed","isDraft","ownListingTextTranslationId","message","ownListingTextClasses","ownListingText","ownListingTextPendingApproval","actionBar","editListingLink","editIcon","closedListingText","isRequired","ownListing","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { bool, oneOfType, object } from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport {\n  LISTING_STATE_PENDING_APPROVAL,\n  LISTING_STATE_CLOSED,\n  LISTING_STATE_DRAFT,\n  propTypes,\n} from '../../util/types';\nimport { NamedLink } from '../../components';\nimport EditIcon from './EditIcon';\n\nimport css from './ListingPage.css';\n\nexport const ActionBarMaybe = props => {\n  const { isOwnListing, listing, editParams } = props;\n  const state = listing.attributes.state;\n  const isPendingApproval = state === LISTING_STATE_PENDING_APPROVAL;\n  const isClosed = state === LISTING_STATE_CLOSED;\n  const isDraft = state === LISTING_STATE_DRAFT;\n\n  if (isOwnListing) {\n    let ownListingTextTranslationId = 'ListingPage.ownListing';\n\n    if (isPendingApproval) {\n      ownListingTextTranslationId = 'ListingPage.ownListingPendingApproval';\n    } else if (isClosed) {\n      ownListingTextTranslationId = 'ListingPage.ownClosedListing';\n    } else if (isDraft) {\n      ownListingTextTranslationId = 'ListingPage.ownListingDraft';\n    }\n\n    const message = isDraft ? 'ListingPage.finishListing' : 'ListingPage.editListing';\n\n    const ownListingTextClasses = classNames(css.ownListingText, {\n      [css.ownListingTextPendingApproval]: isPendingApproval,\n    });\n\n    return (\n      <div className={css.actionBar}>\n        <p className={ownListingTextClasses}>\n          <FormattedMessage id={ownListingTextTranslationId} />\n        </p>\n        <NamedLink className={css.editListingLink} name=\"EditListingPage\" params={editParams}>\n          <EditIcon className={css.editIcon} />\n          <FormattedMessage id={message} />\n        </NamedLink>\n      </div>\n    );\n  } else if (isClosed) {\n    return (\n      <div className={css.actionBar}>\n        <p className={css.closedListingText}>\n          <FormattedMessage id=\"ListingPage.closedListing\" />\n        </p>\n      </div>\n    );\n  }\n  return null;\n};\n\nActionBarMaybe.propTypes = {\n  isOwnListing: bool.isRequired,\n  listing: oneOfType([propTypes.listing, propTypes.ownListing]).isRequired,\n  editParams: object.isRequired,\n};\n\nActionBarMaybe.displayName = 'ActionBarMaybe';\n\nexport default ActionBarMaybe;\n"]},"metadata":{},"sourceType":"module"}