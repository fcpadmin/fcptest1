{"ast":null,"code":"import _objectWithoutProperties from \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/BookingDateRangeFilter/BookingDateRangeFilter.js\";\nimport React, { Component } from 'react';\nimport { bool, func, number, object, string } from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport { FieldDateRangeController, FilterPopup, FilterPlain } from '../../components';\nimport css from './BookingDateRangeFilter.css';\nexport class BookingDateRangeFilterComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.popupControllerRef = null;\n    this.plainControllerRef = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          className = _this$props.className,\n          rootClassName = _this$props.rootClassName,\n          showAsPopup = _this$props.showAsPopup,\n          initialValuesRaw = _this$props.initialValues,\n          id = _this$props.id,\n          contentPlacementOffset = _this$props.contentPlacementOffset,\n          onSubmit = _this$props.onSubmit,\n          urlParam = _this$props.urlParam,\n          intl = _this$props.intl,\n          rest = _objectWithoutProperties(_this$props, [\"className\", \"rootClassName\", \"showAsPopup\", \"initialValues\", \"id\", \"contentPlacementOffset\", \"onSubmit\", \"urlParam\", \"intl\"]);\n\n    const isSelected = !!initialValuesRaw && !!initialValuesRaw.dates;\n    const initialValues = isSelected ? initialValuesRaw : {\n      dates: null\n    };\n    const startDate = isSelected ? initialValues.dates.startDate : null;\n    const endDate = isSelected ? initialValues.dates.endDate : null;\n    const format = {\n      month: 'short',\n      day: 'numeric'\n    };\n    const formattedStartDate = isSelected ? intl.formatDate(startDate, format) : null;\n    const formattedEndDate = isSelected ? intl.formatDate(endDate, format) : null;\n    const labelForPlain = isSelected ? intl.formatMessage({\n      id: 'BookingDateRangeFilter.labelSelectedPlain'\n    }, {\n      dates: \"\".concat(formattedStartDate, \" - \").concat(formattedEndDate)\n    }) : intl.formatMessage({\n      id: 'BookingDateRangeFilter.labelPlain'\n    });\n    const labelForPopup = isSelected ? intl.formatMessage({\n      id: 'BookingDateRangeFilter.labelSelectedPopup'\n    }, {\n      dates: \"\".concat(formattedStartDate, \" - \").concat(formattedEndDate)\n    }) : intl.formatMessage({\n      id: 'BookingDateRangeFilter.labelPopup'\n    });\n    const onClearPopupMaybe = this.popupControllerRef && this.popupControllerRef.onReset ? {\n      onClear: () => this.popupControllerRef.onReset(null, null)\n    } : {};\n    const onCancelPopupMaybe = this.popupControllerRef && this.popupControllerRef.onReset ? {\n      onCancel: () => this.popupControllerRef.onReset(startDate, endDate)\n    } : {};\n    const onClearPlainMaybe = this.plainControllerRef && this.plainControllerRef.onReset ? {\n      onClear: () => this.plainControllerRef.onReset(null, null)\n    } : {};\n    return showAsPopup ? React.createElement(FilterPopup, Object.assign({\n      className: className,\n      rootClassName: rootClassName,\n      popupClassName: css.popupSize,\n      label: labelForPopup,\n      isSelected: isSelected,\n      id: \"\".concat(id, \".popup\"),\n      showAsPopup: true,\n      contentPlacementOffset: contentPlacementOffset,\n      onSubmit: onSubmit\n    }, onClearPopupMaybe, onCancelPopupMaybe, {\n      initialValues: initialValues,\n      urlParam: urlParam\n    }, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(FieldDateRangeController, {\n      name: \"dates\",\n      controllerRef: node => {\n        this.popupControllerRef = node;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })) : React.createElement(FilterPlain, Object.assign({\n      className: className,\n      rootClassName: rootClassName,\n      label: labelForPlain,\n      isSelected: isSelected,\n      id: \"\".concat(id, \".plain\"),\n      liveEdit: true,\n      contentPlacementOffset: contentPlacementOffset,\n      onSubmit: onSubmit\n    }, onClearPlainMaybe, {\n      initialValues: initialValues,\n      urlParam: urlParam\n    }, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(FieldDateRangeController, {\n      name: \"dates\",\n      controllerRef: node => {\n        this.plainControllerRef = node;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }));\n  }\n\n}\nBookingDateRangeFilterComponent.defaultProps = {\n  rootClassName: null,\n  className: null,\n  showAsPopup: true,\n  liveEdit: false,\n  initialValues: null,\n  contentPlacementOffset: 0\n};\nBookingDateRangeFilterComponent.propTypes = {\n  rootClassName: string,\n  className: string,\n  id: string.isRequired,\n  showAsPopup: bool,\n  liveEdit: bool,\n  urlParam: string.isRequired,\n  onSubmit: func.isRequired,\n  initialValues: object,\n  contentPlacementOffset: number,\n  // form injectIntl\n  intl: intlShape.isRequired\n};\nconst BookingDateRangeFilter = injectIntl(BookingDateRangeFilterComponent);\nexport default BookingDateRangeFilter;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/BookingDateRangeFilter/BookingDateRangeFilter.js"],"names":["React","Component","bool","func","number","object","string","injectIntl","intlShape","FieldDateRangeController","FilterPopup","FilterPlain","css","BookingDateRangeFilterComponent","constructor","props","popupControllerRef","plainControllerRef","render","className","rootClassName","showAsPopup","initialValuesRaw","initialValues","id","contentPlacementOffset","onSubmit","urlParam","intl","rest","isSelected","dates","startDate","endDate","format","month","day","formattedStartDate","formatDate","formattedEndDate","labelForPlain","formatMessage","labelForPopup","onClearPopupMaybe","onReset","onClear","onCancelPopupMaybe","onCancel","onClearPlainMaybe","popupSize","node","defaultProps","liveEdit","propTypes","isRequired","BookingDateRangeFilter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { bool, func, number, object, string } from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\n\nimport { FieldDateRangeController, FilterPopup, FilterPlain } from '../../components';\nimport css from './BookingDateRangeFilter.css';\n\nexport class BookingDateRangeFilterComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.popupControllerRef = null;\n    this.plainControllerRef = null;\n  }\n\n  render() {\n    const {\n      className,\n      rootClassName,\n      showAsPopup,\n      initialValues: initialValuesRaw,\n      id,\n      contentPlacementOffset,\n      onSubmit,\n      urlParam,\n      intl,\n      ...rest\n    } = this.props;\n\n    const isSelected = !!initialValuesRaw && !!initialValuesRaw.dates;\n    const initialValues = isSelected ? initialValuesRaw : { dates: null };\n\n    const startDate = isSelected ? initialValues.dates.startDate : null;\n    const endDate = isSelected ? initialValues.dates.endDate : null;\n\n    const format = {\n      month: 'short',\n      day: 'numeric',\n    };\n\n    const formattedStartDate = isSelected ? intl.formatDate(startDate, format) : null;\n    const formattedEndDate = isSelected ? intl.formatDate(endDate, format) : null;\n\n    const labelForPlain = isSelected\n      ? intl.formatMessage(\n          { id: 'BookingDateRangeFilter.labelSelectedPlain' },\n          {\n            dates: `${formattedStartDate} - ${formattedEndDate}`,\n          }\n        )\n      : intl.formatMessage({ id: 'BookingDateRangeFilter.labelPlain' });\n\n    const labelForPopup = isSelected\n      ? intl.formatMessage(\n          { id: 'BookingDateRangeFilter.labelSelectedPopup' },\n          {\n            dates: `${formattedStartDate} - ${formattedEndDate}`,\n          }\n        )\n      : intl.formatMessage({ id: 'BookingDateRangeFilter.labelPopup' });\n\n    const onClearPopupMaybe =\n      this.popupControllerRef && this.popupControllerRef.onReset\n        ? { onClear: () => this.popupControllerRef.onReset(null, null) }\n        : {};\n\n    const onCancelPopupMaybe =\n      this.popupControllerRef && this.popupControllerRef.onReset\n        ? { onCancel: () => this.popupControllerRef.onReset(startDate, endDate) }\n        : {};\n\n    const onClearPlainMaybe =\n      this.plainControllerRef && this.plainControllerRef.onReset\n        ? { onClear: () => this.plainControllerRef.onReset(null, null) }\n        : {};\n\n    return showAsPopup ? (\n      <FilterPopup\n        className={className}\n        rootClassName={rootClassName}\n        popupClassName={css.popupSize}\n        label={labelForPopup}\n        isSelected={isSelected}\n        id={`${id}.popup`}\n        showAsPopup\n        contentPlacementOffset={contentPlacementOffset}\n        onSubmit={onSubmit}\n        {...onClearPopupMaybe}\n        {...onCancelPopupMaybe}\n        initialValues={initialValues}\n        urlParam={urlParam}\n        {...rest}\n      >\n        <FieldDateRangeController\n          name=\"dates\"\n          controllerRef={node => {\n            this.popupControllerRef = node;\n          }}\n        />\n      </FilterPopup>\n    ) : (\n      <FilterPlain\n        className={className}\n        rootClassName={rootClassName}\n        label={labelForPlain}\n        isSelected={isSelected}\n        id={`${id}.plain`}\n        liveEdit\n        contentPlacementOffset={contentPlacementOffset}\n        onSubmit={onSubmit}\n        {...onClearPlainMaybe}\n        initialValues={initialValues}\n        urlParam={urlParam}\n        {...rest}\n      >\n        <FieldDateRangeController\n          name=\"dates\"\n          controllerRef={node => {\n            this.plainControllerRef = node;\n          }}\n        />\n      </FilterPlain>\n    );\n  }\n}\n\nBookingDateRangeFilterComponent.defaultProps = {\n  rootClassName: null,\n  className: null,\n  showAsPopup: true,\n  liveEdit: false,\n  initialValues: null,\n  contentPlacementOffset: 0,\n};\n\nBookingDateRangeFilterComponent.propTypes = {\n  rootClassName: string,\n  className: string,\n  id: string.isRequired,\n  showAsPopup: bool,\n  liveEdit: bool,\n  urlParam: string.isRequired,\n  onSubmit: func.isRequired,\n  initialValues: object,\n  contentPlacementOffset: number,\n\n  // form injectIntl\n  intl: intlShape.isRequired,\n};\n\nconst BookingDateRangeFilter = injectIntl(BookingDateRangeFilterComponent);\n\nexport default BookingDateRangeFilter;\n"]},"metadata":{},"sourceType":"module"}