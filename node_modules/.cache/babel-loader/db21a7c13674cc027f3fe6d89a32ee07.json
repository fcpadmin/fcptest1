{"ast":null,"code":"import _objectSpread from \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/AddImages/AddImages.example.js\";\n\n/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport findIndex from 'lodash/findIndex';\nimport uniqueId from 'lodash/uniqueId';\nimport { types as sdkTypes } from '../../util/sdkLoader';\nimport AddImages from './AddImages';\nimport css from './AddImages.example.css';\nconst UUID = sdkTypes.UUID;\n\nconst getId = () => {\n  return uniqueId();\n};\n\nclass AddImagesTest extends Component {\n  constructor(props, state) {\n    super(props, state);\n    this.state = {\n      images: []\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(event) {\n    const file = event.target.files[0];\n    const fileId = getId();\n    const imageData = {\n      file,\n      id: fileId,\n      imageId: null\n    }; // Show loading overlay\n\n    this.setState({\n      images: this.state.images.concat([imageData])\n    }); // Fake image uploaded state: show image thumbnail\n\n    setTimeout(() => {\n      this.setState(prevState => {\n        const images = prevState.images;\n        const imageIndex = findIndex(images, i => i.id === fileId);\n\n        const updatedImage = _objectSpread({}, imageData, {\n          imageId: new UUID(fileId)\n        });\n\n        const updatedImages = [...images.slice(0, imageIndex), updatedImage, ...images.slice(imageIndex + 1)];\n        return {\n          images: updatedImages\n        };\n      });\n    }, 1000);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(AddImages, {\n      images: this.state.images,\n      savedImageAltText: \"Saved image\",\n      onRemoveImage: imageId => console.log('remove image:', imageId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: css.addImageWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: css.aspectRatioWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: css.addImage,\n      htmlFor: \"addImageExampleInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"+ Add image\"), React.createElement(\"input\", {\n      id: \"addImageExampleInput\",\n      type: \"file\",\n      accept: \"images/*\",\n      onChange: this.onChange,\n      className: css.addImageInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport const Empty = {\n  component: AddImagesTest,\n  group: 'custom inputs'\n};","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/AddImages/AddImages.example.js"],"names":["React","Component","findIndex","uniqueId","types","sdkTypes","AddImages","css","UUID","getId","AddImagesTest","constructor","props","state","images","onChange","bind","event","file","target","files","fileId","imageData","id","imageId","setState","concat","setTimeout","prevState","imageIndex","i","updatedImage","updatedImages","slice","render","console","log","addImageWrapper","aspectRatioWrapper","addImage","addImageInput","Empty","component","group"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport findIndex from 'lodash/findIndex';\nimport uniqueId from 'lodash/uniqueId';\nimport { types as sdkTypes } from '../../util/sdkLoader';\nimport AddImages from './AddImages';\nimport css from './AddImages.example.css';\n\nconst { UUID } = sdkTypes;\n\nconst getId = () => {\n  return uniqueId();\n};\n\nclass AddImagesTest extends Component {\n  constructor(props, state) {\n    super(props, state);\n    this.state = {\n      images: [],\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(event) {\n    const file = event.target.files[0];\n    const fileId = getId();\n    const imageData = { file, id: fileId, imageId: null };\n\n    // Show loading overlay\n    this.setState({\n      images: this.state.images.concat([imageData]),\n    });\n\n    // Fake image uploaded state: show image thumbnail\n    setTimeout(() => {\n      this.setState(prevState => {\n        const images = prevState.images;\n        const imageIndex = findIndex(images, i => i.id === fileId);\n        const updatedImage = { ...imageData, imageId: new UUID(fileId) };\n        const updatedImages = [\n          ...images.slice(0, imageIndex),\n          updatedImage,\n          ...images.slice(imageIndex + 1),\n        ];\n        return {\n          images: updatedImages,\n        };\n      });\n    }, 1000);\n  }\n\n  render() {\n    return (\n      <div>\n        <AddImages\n          images={this.state.images}\n          savedImageAltText=\"Saved image\"\n          onRemoveImage={imageId => console.log('remove image:', imageId)}\n        >\n          <div className={css.addImageWrapper}>\n            <div className={css.aspectRatioWrapper}>\n              <label className={css.addImage} htmlFor=\"addImageExampleInput\">\n                + Add image\n              </label>\n              <input\n                id=\"addImageExampleInput\"\n                type=\"file\"\n                accept=\"images/*\"\n                onChange={this.onChange}\n                className={css.addImageInput}\n              />\n            </div>\n          </div>\n        </AddImages>\n      </div>\n    );\n  }\n}\n\nexport const Empty = {\n  component: AddImagesTest,\n  group: 'custom inputs',\n};\n"]},"metadata":{},"sourceType":"module"}