{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/TransactionPanel/BreakdownMaybe.js\";\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport config from '../../config';\nimport { BookingBreakdown } from '../../components';\nimport css from './TransactionPanel.css'; // Functional component as a helper to build BookingBreakdown\n\nconst BreakdownMaybe = props => {\n  const className = props.className,\n        rootClassName = props.rootClassName,\n        breakdownClassName = props.breakdownClassName,\n        transaction = props.transaction,\n        transactionRole = props.transactionRole;\n  const loaded = transaction && transaction.id && transaction.booking && transaction.booking.id;\n  const classes = classNames(rootClassName || css.breakdownMaybe, className);\n  const breakdownClasses = classNames(breakdownClassName || css.breakdown);\n  return loaded ? React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: css.bookingBreakdownTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"TransactionPanel.bookingBreakdownTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), React.createElement(BookingBreakdown, {\n    className: breakdownClasses,\n    userRole: transactionRole,\n    unitType: config.bookingUnitType,\n    transaction: transaction,\n    booking: transaction.booking,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })) : null;\n};\n\nexport default BreakdownMaybe;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/TransactionPanel/BreakdownMaybe.js"],"names":["React","FormattedMessage","classNames","config","BookingBreakdown","css","BreakdownMaybe","props","className","rootClassName","breakdownClassName","transaction","transactionRole","loaded","id","booking","classes","breakdownMaybe","breakdownClasses","breakdown","bookingBreakdownTitle","bookingUnitType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AAEA,OAAOC,GAAP,MAAgB,wBAAhB,C,CAEA;;AACA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAAA,QACtBC,SADsB,GACyDD,KADzD,CACtBC,SADsB;AAAA,QACXC,aADW,GACyDF,KADzD,CACXE,aADW;AAAA,QACIC,kBADJ,GACyDH,KADzD,CACIG,kBADJ;AAAA,QACwBC,WADxB,GACyDJ,KADzD,CACwBI,WADxB;AAAA,QACqCC,eADrC,GACyDL,KADzD,CACqCK,eADrC;AAE9B,QAAMC,MAAM,GAAGF,WAAW,IAAIA,WAAW,CAACG,EAA3B,IAAiCH,WAAW,CAACI,OAA7C,IAAwDJ,WAAW,CAACI,OAAZ,CAAoBD,EAA3F;AAEA,QAAME,OAAO,GAAGd,UAAU,CAACO,aAAa,IAAIJ,GAAG,CAACY,cAAtB,EAAsCT,SAAtC,CAA1B;AACA,QAAMU,gBAAgB,GAAGhB,UAAU,CAACQ,kBAAkB,IAAIL,GAAG,CAACc,SAA3B,CAAnC;AAEA,SAAON,MAAM,GACX;AAAK,IAAA,SAAS,EAAEG,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEX,GAAG,CAACe,qBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,wCAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,gBAAD;AACE,IAAA,SAAS,EAAEF,gBADb;AAEE,IAAA,QAAQ,EAAEN,eAFZ;AAGE,IAAA,QAAQ,EAAET,MAAM,CAACkB,eAHnB;AAIE,IAAA,WAAW,EAAEV,WAJf;AAKE,IAAA,OAAO,EAAEA,WAAW,CAACI,OALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADW,GAaT,IAbJ;AAcD,CArBD;;AAuBA,eAAeT,cAAf","sourcesContent":["import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport config from '../../config';\nimport { BookingBreakdown } from '../../components';\n\nimport css from './TransactionPanel.css';\n\n// Functional component as a helper to build BookingBreakdown\nconst BreakdownMaybe = props => {\n  const { className, rootClassName, breakdownClassName, transaction, transactionRole } = props;\n  const loaded = transaction && transaction.id && transaction.booking && transaction.booking.id;\n\n  const classes = classNames(rootClassName || css.breakdownMaybe, className);\n  const breakdownClasses = classNames(breakdownClassName || css.breakdown);\n\n  return loaded ? (\n    <div className={classes}>\n      <h3 className={css.bookingBreakdownTitle}>\n        <FormattedMessage id=\"TransactionPanel.bookingBreakdownTitle\" />\n      </h3>\n      <BookingBreakdown\n        className={breakdownClasses}\n        userRole={transactionRole}\n        unitType={config.bookingUnitType}\n        transaction={transaction}\n        booking={transaction.booking}\n      />\n    </div>\n  ) : null;\n};\n\nexport default BreakdownMaybe;\n"]},"metadata":{},"sourceType":"module"}