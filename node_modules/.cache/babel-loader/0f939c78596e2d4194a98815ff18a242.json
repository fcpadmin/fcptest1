{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/SelectMultipleFilter/SelectMultipleFilter.example.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport SelectMultipleFilter from './SelectMultipleFilter';\nimport { stringify, parse } from '../../util/urlHelpers';\nconst URL_PARAM = 'pub_amenities';\nconst options = [{\n  key: 'towels',\n  label: 'Towels'\n}, {\n  key: 'bathroom',\n  label: 'Bathroom'\n}, {\n  key: 'swimming_pool',\n  label: 'Swimming pool'\n}, {\n  key: 'own_drinks',\n  label: 'Own drinks allowed'\n}, {\n  key: 'jacuzzi',\n  label: 'Jacuzzi'\n}, {\n  key: 'audiovisual_entertainment',\n  label: 'Audiovisual entertainment'\n}, {\n  key: 'barbeque',\n  label: 'Barbeque'\n}, {\n  key: 'own_food_allowed',\n  label: 'Own food allowed'\n}];\n\nconst handleSubmit = (urlParam, values, history) => {\n  console.log('Submitting values', values);\n  const queryParams = values ? \"?\".concat(stringify({\n    [urlParam]: values.join(',')\n  })) : '';\n  history.push(\"\".concat(window.location.pathname).concat(queryParams));\n};\n\nconst AmenitiesFilterPopup = withRouter(props => {\n  const history = props.history,\n        location = props.location;\n  const params = parse(location.search);\n  const amenities = params[URL_PARAM];\n  const initialValues = !!amenities ? amenities.split(',') : [];\n  return React.createElement(SelectMultipleFilter, {\n    id: \"SelectMultipleFilterPopupExample\",\n    name: \"amenities\",\n    urlParam: URL_PARAM,\n    label: \"Amenities\",\n    onSubmit: (urlParam, values) => handleSubmit(urlParam, values, history),\n    showAsPopup: true,\n    liveEdit: false,\n    options: options,\n    initialValues: initialValues,\n    contentPlacementOffset: -14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  });\n});\nexport const AmenitiesFilterPopupExample = {\n  component: AmenitiesFilterPopup,\n  props: {},\n  group: 'filters'\n};\nconst AmenitiesFilterPlain = withRouter(props => {\n  const history = props.history,\n        location = props.location;\n  const params = parse(location.search);\n  const amenities = params[URL_PARAM];\n  const initialValues = !!amenities ? amenities.split(',') : [];\n  return React.createElement(SelectMultipleFilter, {\n    id: \"SelectMultipleFilterPlainExample\",\n    name: \"amenities\",\n    urlParam: URL_PARAM,\n    label: \"Amenities\",\n    onSubmit: (urlParam, values) => {\n      handleSubmit(urlParam, values, history);\n    },\n    showAsPopup: false,\n    liveEdit: true,\n    options: options,\n    initialValues: initialValues,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  });\n});\nexport const AmenitiesFilterPlainExample = {\n  component: AmenitiesFilterPlain,\n  props: {},\n  group: 'filters'\n};","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/SelectMultipleFilter/SelectMultipleFilter.example.js"],"names":["React","withRouter","SelectMultipleFilter","stringify","parse","URL_PARAM","options","key","label","handleSubmit","urlParam","values","history","console","log","queryParams","join","push","window","location","pathname","AmenitiesFilterPopup","props","params","search","amenities","initialValues","split","AmenitiesFilterPopupExample","component","group","AmenitiesFilterPlain","AmenitiesFilterPlainExample"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport SelectMultipleFilter from './SelectMultipleFilter';\nimport { stringify, parse } from '../../util/urlHelpers';\n\nconst URL_PARAM = 'pub_amenities';\n\nconst options = [\n  {\n    key: 'towels',\n    label: 'Towels',\n  },\n  {\n    key: 'bathroom',\n    label: 'Bathroom',\n  },\n  {\n    key: 'swimming_pool',\n    label: 'Swimming pool',\n  },\n  {\n    key: 'own_drinks',\n    label: 'Own drinks allowed',\n  },\n  {\n    key: 'jacuzzi',\n    label: 'Jacuzzi',\n  },\n  {\n    key: 'audiovisual_entertainment',\n    label: 'Audiovisual entertainment',\n  },\n  {\n    key: 'barbeque',\n    label: 'Barbeque',\n  },\n  {\n    key: 'own_food_allowed',\n    label: 'Own food allowed',\n  },\n];\n\nconst handleSubmit = (urlParam, values, history) => {\n  console.log('Submitting values', values);\n  const queryParams = values ? `?${stringify({ [urlParam]: values.join(',') })}` : '';\n  history.push(`${window.location.pathname}${queryParams}`);\n};\n\nconst AmenitiesFilterPopup = withRouter(props => {\n  const { history, location } = props;\n\n  const params = parse(location.search);\n  const amenities = params[URL_PARAM];\n  const initialValues = !!amenities ? amenities.split(',') : [];\n\n  return (\n    <SelectMultipleFilter\n      id=\"SelectMultipleFilterPopupExample\"\n      name=\"amenities\"\n      urlParam={URL_PARAM}\n      label=\"Amenities\"\n      onSubmit={(urlParam, values) => handleSubmit(urlParam, values, history)}\n      showAsPopup={true}\n      liveEdit={false}\n      options={options}\n      initialValues={initialValues}\n      contentPlacementOffset={-14}\n    />\n  );\n});\n\nexport const AmenitiesFilterPopupExample = {\n  component: AmenitiesFilterPopup,\n  props: {},\n  group: 'filters',\n};\n\nconst AmenitiesFilterPlain = withRouter(props => {\n  const { history, location } = props;\n\n  const params = parse(location.search);\n  const amenities = params[URL_PARAM];\n  const initialValues = !!amenities ? amenities.split(',') : [];\n\n  return (\n    <SelectMultipleFilter\n      id=\"SelectMultipleFilterPlainExample\"\n      name=\"amenities\"\n      urlParam={URL_PARAM}\n      label=\"Amenities\"\n      onSubmit={(urlParam, values) => {\n        handleSubmit(urlParam, values, history);\n      }}\n      showAsPopup={false}\n      liveEdit={true}\n      options={options}\n      initialValues={initialValues}\n    />\n  );\n});\n\nexport const AmenitiesFilterPlainExample = {\n  component: AmenitiesFilterPlain,\n  props: {},\n  group: 'filters',\n};\n"]},"metadata":{},"sourceType":"module"}