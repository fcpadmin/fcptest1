{"ast":null,"code":"import _objectSpread from \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/forms/EditListingFeaturesForm/EditListingFeaturesForm.js\";\nimport React from 'react';\nimport { bool, func, shape, string } from 'prop-types';\nimport classNames from 'classnames';\nimport { Form as FinalForm } from 'react-final-form';\nimport arrayMutators from 'final-form-arrays';\nimport { FormattedMessage } from 'react-intl';\nimport { propTypes } from '../../util/types';\nimport config from '../../config';\nimport { Button, FieldCheckboxGroup, Form } from '../../components';\nimport css from './EditListingFeaturesForm.css';\n\nconst EditListingFeaturesFormComponent = props => React.createElement(FinalForm, Object.assign({}, props, {\n  mutators: _objectSpread({}, arrayMutators),\n  render: fieldRenderProps => {\n    const disabled = fieldRenderProps.disabled,\n          rootClassName = fieldRenderProps.rootClassName,\n          className = fieldRenderProps.className,\n          name = fieldRenderProps.name,\n          handleSubmit = fieldRenderProps.handleSubmit,\n          pristine = fieldRenderProps.pristine,\n          saveActionMsg = fieldRenderProps.saveActionMsg,\n          updated = fieldRenderProps.updated,\n          updateInProgress = fieldRenderProps.updateInProgress,\n          fetchErrors = fieldRenderProps.fetchErrors;\n    const classes = classNames(rootClassName || css.root, className);\n    const submitReady = updated && pristine;\n    const submitInProgress = updateInProgress;\n    const submitDisabled = disabled || submitInProgress;\n\n    const _ref = fetchErrors || {},\n          updateListingError = _ref.updateListingError,\n          showListingsError = _ref.showListingsError;\n\n    const errorMessage = updateListingError ? React.createElement(\"p\", {\n      className: css.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"EditListingFeaturesForm.updateFailed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })) : null;\n    const errorMessageShowListing = showListingsError ? React.createElement(\"p\", {\n      className: css.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"EditListingFeaturesForm.showListingFailed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })) : null;\n    return React.createElement(Form, {\n      className: classes,\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, errorMessage, errorMessageShowListing, React.createElement(FieldCheckboxGroup, {\n      className: css.features,\n      id: name,\n      name: name,\n      options: config.custom.amenities,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: css.submitButton,\n      type: \"submit\",\n      inProgress: submitInProgress,\n      disabled: submitDisabled,\n      ready: submitReady,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, saveActionMsg));\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}));\n\nEditListingFeaturesFormComponent.defaultProps = {\n  rootClassName: null,\n  className: null,\n  fetchErrors: null\n};\nEditListingFeaturesFormComponent.propTypes = {\n  rootClassName: string,\n  className: string,\n  name: string.isRequired,\n  onSubmit: func.isRequired,\n  saveActionMsg: string.isRequired,\n  updated: bool.isRequired,\n  updateInProgress: bool.isRequired,\n  fetchErrors: shape({\n    showListingsError: propTypes.error,\n    updateListingError: propTypes.error\n  })\n};\nconst EditListingFeaturesForm = EditListingFeaturesFormComponent;\nexport default EditListingFeaturesForm;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/forms/EditListingFeaturesForm/EditListingFeaturesForm.js"],"names":["React","bool","func","shape","string","classNames","Form","FinalForm","arrayMutators","FormattedMessage","propTypes","config","Button","FieldCheckboxGroup","css","EditListingFeaturesFormComponent","props","fieldRenderProps","disabled","rootClassName","className","name","handleSubmit","pristine","saveActionMsg","updated","updateInProgress","fetchErrors","classes","root","submitReady","submitInProgress","submitDisabled","updateListingError","showListingsError","errorMessage","error","errorMessageShowListing","features","custom","amenities","submitButton","defaultProps","isRequired","onSubmit","EditListingFeaturesForm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { bool, func, shape, string } from 'prop-types';\nimport classNames from 'classnames';\nimport { Form as FinalForm } from 'react-final-form';\nimport arrayMutators from 'final-form-arrays';\nimport { FormattedMessage } from 'react-intl';\n\nimport { propTypes } from '../../util/types';\nimport config from '../../config';\nimport { Button, FieldCheckboxGroup, Form } from '../../components';\n\nimport css from './EditListingFeaturesForm.css';\n\nconst EditListingFeaturesFormComponent = props => (\n  <FinalForm\n    {...props}\n    mutators={{ ...arrayMutators }}\n    render={fieldRenderProps => {\n      const {\n        disabled,\n        rootClassName,\n        className,\n        name,\n        handleSubmit,\n        pristine,\n        saveActionMsg,\n        updated,\n        updateInProgress,\n        fetchErrors,\n      } = fieldRenderProps;\n\n      const classes = classNames(rootClassName || css.root, className);\n      const submitReady = updated && pristine;\n      const submitInProgress = updateInProgress;\n      const submitDisabled = disabled || submitInProgress;\n\n      const { updateListingError, showListingsError } = fetchErrors || {};\n      const errorMessage = updateListingError ? (\n        <p className={css.error}>\n          <FormattedMessage id=\"EditListingFeaturesForm.updateFailed\" />\n        </p>\n      ) : null;\n\n      const errorMessageShowListing = showListingsError ? (\n        <p className={css.error}>\n          <FormattedMessage id=\"EditListingFeaturesForm.showListingFailed\" />\n        </p>\n      ) : null;\n\n      return (\n        <Form className={classes} onSubmit={handleSubmit}>\n          {errorMessage}\n          {errorMessageShowListing}\n\n          <FieldCheckboxGroup\n            className={css.features}\n            id={name}\n            name={name}\n            options={config.custom.amenities}\n          />\n\n          <Button\n            className={css.submitButton}\n            type=\"submit\"\n            inProgress={submitInProgress}\n            disabled={submitDisabled}\n            ready={submitReady}\n          >\n            {saveActionMsg}\n          </Button>\n        </Form>\n      );\n    }}\n  />\n);\n\nEditListingFeaturesFormComponent.defaultProps = {\n  rootClassName: null,\n  className: null,\n  fetchErrors: null,\n};\n\nEditListingFeaturesFormComponent.propTypes = {\n  rootClassName: string,\n  className: string,\n  name: string.isRequired,\n  onSubmit: func.isRequired,\n  saveActionMsg: string.isRequired,\n  updated: bool.isRequired,\n  updateInProgress: bool.isRequired,\n  fetchErrors: shape({\n    showListingsError: propTypes.error,\n    updateListingError: propTypes.error,\n  }),\n};\n\nconst EditListingFeaturesForm = EditListingFeaturesFormComponent;\n\nexport default EditListingFeaturesForm;\n"]},"metadata":{},"sourceType":"module"}