{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/EditListingPoliciesPanel/EditListingPoliciesPanel.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport { LISTING_STATE_DRAFT } from '../../util/types';\nimport { ensureOwnListing } from '../../util/data';\nimport { ListingLink } from '../../components';\nimport { EditListingPoliciesForm } from '../../forms';\nimport css from './EditListingPoliciesPanel.css';\n\nconst EditListingPoliciesPanel = props => {\n  const className = props.className,\n        rootClassName = props.rootClassName,\n        listing = props.listing,\n        onSubmit = props.onSubmit,\n        onChange = props.onChange,\n        submitButtonText = props.submitButtonText,\n        panelUpdated = props.panelUpdated,\n        updateInProgress = props.updateInProgress,\n        errors = props.errors;\n  const classes = classNames(rootClassName || css.root, className);\n  const currentListing = ensureOwnListing(listing);\n  const publicData = currentListing.attributes.publicData;\n  const isPublished = currentListing.id && currentListing.attributes.state !== LISTING_STATE_DRAFT;\n  const panelTitle = isPublished ? React.createElement(FormattedMessage, {\n    id: \"EditListingPoliciesPanel.title\",\n    values: {\n      listingTitle: React.createElement(ListingLink, {\n        listing: listing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }) : React.createElement(FormattedMessage, {\n    id: \"EditListingPoliciesPanel.createListingTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: css.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, panelTitle), React.createElement(EditListingPoliciesForm, {\n    className: css.form,\n    publicData: publicData,\n    initialValues: {\n      rules: publicData.rules\n    },\n    onSubmit: values => {\n      const _values$rules = values.rules,\n            rules = _values$rules === void 0 ? '' : _values$rules;\n      const updateValues = {\n        publicData: {\n          rules\n        }\n      };\n      onSubmit(updateValues);\n    },\n    onChange: onChange,\n    saveActionMsg: submitButtonText,\n    updated: panelUpdated,\n    updateInProgress: updateInProgress,\n    fetchErrors: errors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n};\n\nconst func = PropTypes.func,\n      object = PropTypes.object,\n      string = PropTypes.string,\n      bool = PropTypes.bool;\nEditListingPoliciesPanel.defaultProps = {\n  className: null,\n  rootClassName: null,\n  listing: null\n};\nEditListingPoliciesPanel.propTypes = {\n  className: string,\n  rootClassName: string,\n  // We cannot use propTypes.listing since the listing might be a draft.\n  listing: object,\n  onSubmit: func.isRequired,\n  onChange: func.isRequired,\n  submitButtonText: string.isRequired,\n  panelUpdated: bool.isRequired,\n  updateInProgress: bool.isRequired,\n  errors: object.isRequired\n};\nexport default EditListingPoliciesPanel;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/EditListingPoliciesPanel/EditListingPoliciesPanel.js"],"names":["React","PropTypes","classNames","FormattedMessage","LISTING_STATE_DRAFT","ensureOwnListing","ListingLink","EditListingPoliciesForm","css","EditListingPoliciesPanel","props","className","rootClassName","listing","onSubmit","onChange","submitButtonText","panelUpdated","updateInProgress","errors","classes","root","currentListing","publicData","attributes","isPublished","id","state","panelTitle","listingTitle","title","form","rules","values","updateValues","func","object","string","bool","defaultProps","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport { LISTING_STATE_DRAFT } from '../../util/types';\nimport { ensureOwnListing } from '../../util/data';\nimport { ListingLink } from '../../components';\nimport { EditListingPoliciesForm } from '../../forms';\n\nimport css from './EditListingPoliciesPanel.css';\n\nconst EditListingPoliciesPanel = props => {\n  const {\n    className,\n    rootClassName,\n    listing,\n    onSubmit,\n    onChange,\n    submitButtonText,\n    panelUpdated,\n    updateInProgress,\n    errors,\n  } = props;\n\n  const classes = classNames(rootClassName || css.root, className);\n  const currentListing = ensureOwnListing(listing);\n  const { publicData } = currentListing.attributes;\n\n  const isPublished = currentListing.id && currentListing.attributes.state !== LISTING_STATE_DRAFT;\n  const panelTitle = isPublished ? (\n    <FormattedMessage\n      id=\"EditListingPoliciesPanel.title\"\n      values={{ listingTitle: <ListingLink listing={listing} /> }}\n    />\n  ) : (\n    <FormattedMessage id=\"EditListingPoliciesPanel.createListingTitle\" />\n  );\n\n  return (\n    <div className={classes}>\n      <h1 className={css.title}>{panelTitle}</h1>\n      <EditListingPoliciesForm\n        className={css.form}\n        publicData={publicData}\n        initialValues={{ rules: publicData.rules }}\n        onSubmit={values => {\n          const { rules = '' } = values;\n          const updateValues = {\n            publicData: {\n              rules,\n            },\n          };\n          onSubmit(updateValues);\n        }}\n        onChange={onChange}\n        saveActionMsg={submitButtonText}\n        updated={panelUpdated}\n        updateInProgress={updateInProgress}\n        fetchErrors={errors}\n      />\n    </div>\n  );\n};\n\nconst { func, object, string, bool } = PropTypes;\n\nEditListingPoliciesPanel.defaultProps = {\n  className: null,\n  rootClassName: null,\n  listing: null,\n};\n\nEditListingPoliciesPanel.propTypes = {\n  className: string,\n  rootClassName: string,\n\n  // We cannot use propTypes.listing since the listing might be a draft.\n  listing: object,\n\n  onSubmit: func.isRequired,\n  onChange: func.isRequired,\n  submitButtonText: string.isRequired,\n  panelUpdated: bool.isRequired,\n  updateInProgress: bool.isRequired,\n  errors: object.isRequired,\n};\n\nexport default EditListingPoliciesPanel;\n"]},"metadata":{},"sourceType":"module"}