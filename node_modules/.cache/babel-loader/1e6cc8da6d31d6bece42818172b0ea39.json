{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/containers/SearchPage/MainPanel.js\";\nimport React, { Component } from 'react';\nimport { array, bool, func, number, object, objectOf, string } from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport merge from 'lodash/merge';\nimport { propTypes } from '../../util/types';\nimport { SearchResultsPanel, SearchFilters, SearchFiltersMobile, SearchFiltersPanel } from '../../components';\nimport { validFilterParams } from './SearchPage.helpers';\nimport css from './SearchPage.css';\n\nclass MainPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSearchFiltersPanelOpen: false\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          className = _this$props.className,\n          rootClassName = _this$props.rootClassName,\n          urlQueryParams = _this$props.urlQueryParams,\n          listings = _this$props.listings,\n          searchInProgress = _this$props.searchInProgress,\n          searchListingsError = _this$props.searchListingsError,\n          searchParamsAreInSync = _this$props.searchParamsAreInSync,\n          onActivateListing = _this$props.onActivateListing,\n          onManageDisableScrolling = _this$props.onManageDisableScrolling,\n          onOpenModal = _this$props.onOpenModal,\n          onCloseModal = _this$props.onCloseModal,\n          onMapIconClick = _this$props.onMapIconClick,\n          pagination = _this$props.pagination,\n          searchParamsForPagination = _this$props.searchParamsForPagination,\n          showAsModalMaxWidth = _this$props.showAsModalMaxWidth,\n          primaryFilters = _this$props.primaryFilters,\n          secondaryFilters = _this$props.secondaryFilters;\n    const isSearchFiltersPanelOpen = !!secondaryFilters && this.state.isSearchFiltersPanelOpen;\n    const filters = merge(primaryFilters, secondaryFilters);\n    const selectedFilters = validFilterParams(urlQueryParams, filters);\n    const selectedFiltersCount = Object.keys(selectedFilters).length;\n    const selectedSecondaryFilters = secondaryFilters ? validFilterParams(urlQueryParams, secondaryFilters) : {};\n    const searchFiltersPanelSelectedCount = Object.keys(selectedSecondaryFilters).length;\n    const searchFiltersPanelProps = !!secondaryFilters ? {\n      isSearchFiltersPanelOpen: this.state.isSearchFiltersPanelOpen,\n      toggleSearchFiltersPanel: isOpen => {\n        this.setState({\n          isSearchFiltersPanelOpen: isOpen\n        });\n      },\n      searchFiltersPanelSelectedCount\n    } : {};\n    const hasPaginationInfo = !!pagination && pagination.totalItems != null;\n    const totalItems = searchParamsAreInSync && hasPaginationInfo ? pagination.totalItems : 0;\n    const listingsAreLoaded = !searchInProgress && searchParamsAreInSync && hasPaginationInfo;\n    const classes = classNames(rootClassName || css.searchResultContainer, className);\n    const filterParamNames = Object.values(filters).map(f => f.paramName);\n    const secondaryFilterParamNames = secondaryFilters ? Object.values(secondaryFilters).map(f => f.paramName) : [];\n    return React.createElement(\"div\", {\n      className: classes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(SearchFilters, Object.assign({\n      className: css.searchFilters,\n      urlQueryParams: urlQueryParams,\n      listingsAreLoaded: listingsAreLoaded,\n      resultsCount: totalItems,\n      searchInProgress: searchInProgress,\n      searchListingsError: searchListingsError,\n      onManageDisableScrolling: onManageDisableScrolling\n    }, searchFiltersPanelProps, primaryFilters, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(SearchFiltersMobile, Object.assign({\n      className: css.searchFiltersMobile,\n      urlQueryParams: urlQueryParams,\n      listingsAreLoaded: listingsAreLoaded,\n      resultsCount: totalItems,\n      searchInProgress: searchInProgress,\n      searchListingsError: searchListingsError,\n      showAsModalMaxWidth: showAsModalMaxWidth,\n      onMapIconClick: onMapIconClick,\n      onManageDisableScrolling: onManageDisableScrolling,\n      onOpenModal: onOpenModal,\n      onCloseModal: onCloseModal,\n      filterParamNames: filterParamNames,\n      selectedFiltersCount: selectedFiltersCount\n    }, primaryFilters, secondaryFilters, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), isSearchFiltersPanelOpen ? React.createElement(\"div\", {\n      className: classNames(css.searchFiltersPanel),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(SearchFiltersPanel, Object.assign({\n      urlQueryParams: urlQueryParams,\n      listingsAreLoaded: listingsAreLoaded,\n      onClosePanel: () => this.setState({\n        isSearchFiltersPanelOpen: false\n      }),\n      filterParamNames: secondaryFilterParamNames\n    }, secondaryFilters, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      className: classNames(css.listings, {\n        [css.newSearchInProgress]: !listingsAreLoaded\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, searchListingsError ? React.createElement(\"h2\", {\n      className: css.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"SearchPage.searchError\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })) : null, React.createElement(SearchResultsPanel, {\n      className: css.searchListingsPanel,\n      listings: listings,\n      pagination: listingsAreLoaded ? pagination : null,\n      search: searchParamsForPagination,\n      setActiveListing: onActivateListing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })));\n  }\n\n}\n\nMainPanel.defaultProps = {\n  className: null,\n  rootClassName: null,\n  listings: [],\n  resultsCount: 0,\n  pagination: null,\n  searchParamsForPagination: {},\n  primaryFilters: null,\n  secondaryFilters: null\n};\nMainPanel.propTypes = {\n  className: string,\n  rootClassName: string,\n  urlQueryParams: object.isRequired,\n  listings: array,\n  searchInProgress: bool.isRequired,\n  searchListingsError: propTypes.error,\n  searchParamsAreInSync: bool.isRequired,\n  onActivateListing: func.isRequired,\n  onManageDisableScrolling: func.isRequired,\n  onOpenModal: func.isRequired,\n  onCloseModal: func.isRequired,\n  onMapIconClick: func.isRequired,\n  pagination: propTypes.pagination,\n  searchParamsForPagination: object,\n  showAsModalMaxWidth: number.isRequired,\n  primaryFilters: objectOf(propTypes.filterConfig),\n  secondaryFilters: objectOf(propTypes.filterConfig)\n};\nexport default MainPanel;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/containers/SearchPage/MainPanel.js"],"names":["React","Component","array","bool","func","number","object","objectOf","string","FormattedMessage","classNames","merge","propTypes","SearchResultsPanel","SearchFilters","SearchFiltersMobile","SearchFiltersPanel","validFilterParams","css","MainPanel","constructor","props","state","isSearchFiltersPanelOpen","render","className","rootClassName","urlQueryParams","listings","searchInProgress","searchListingsError","searchParamsAreInSync","onActivateListing","onManageDisableScrolling","onOpenModal","onCloseModal","onMapIconClick","pagination","searchParamsForPagination","showAsModalMaxWidth","primaryFilters","secondaryFilters","filters","selectedFilters","selectedFiltersCount","Object","keys","length","selectedSecondaryFilters","searchFiltersPanelSelectedCount","searchFiltersPanelProps","toggleSearchFiltersPanel","isOpen","setState","hasPaginationInfo","totalItems","listingsAreLoaded","classes","searchResultContainer","filterParamNames","values","map","f","paramName","secondaryFilterParamNames","searchFilters","searchFiltersMobile","searchFiltersPanel","newSearchInProgress","error","searchListingsPanel","defaultProps","resultsCount","isRequired","filterConfig"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { array, bool, func, number, object, objectOf, string } from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport merge from 'lodash/merge';\nimport { propTypes } from '../../util/types';\nimport {\n  SearchResultsPanel,\n  SearchFilters,\n  SearchFiltersMobile,\n  SearchFiltersPanel,\n} from '../../components';\nimport { validFilterParams } from './SearchPage.helpers';\n\nimport css from './SearchPage.css';\n\nclass MainPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isSearchFiltersPanelOpen: false };\n  }\n\n  render() {\n    const {\n      className,\n      rootClassName,\n      urlQueryParams,\n      listings,\n      searchInProgress,\n      searchListingsError,\n      searchParamsAreInSync,\n      onActivateListing,\n      onManageDisableScrolling,\n      onOpenModal,\n      onCloseModal,\n      onMapIconClick,\n      pagination,\n      searchParamsForPagination,\n      showAsModalMaxWidth,\n      primaryFilters,\n      secondaryFilters,\n    } = this.props;\n\n    const isSearchFiltersPanelOpen = !!secondaryFilters && this.state.isSearchFiltersPanelOpen;\n\n    const filters = merge(primaryFilters, secondaryFilters);\n    const selectedFilters = validFilterParams(urlQueryParams, filters);\n    const selectedFiltersCount = Object.keys(selectedFilters).length;\n\n    const selectedSecondaryFilters = secondaryFilters\n      ? validFilterParams(urlQueryParams, secondaryFilters)\n      : {};\n    const searchFiltersPanelSelectedCount = Object.keys(selectedSecondaryFilters).length;\n\n    const searchFiltersPanelProps = !!secondaryFilters\n      ? {\n          isSearchFiltersPanelOpen: this.state.isSearchFiltersPanelOpen,\n          toggleSearchFiltersPanel: isOpen => {\n            this.setState({ isSearchFiltersPanelOpen: isOpen });\n          },\n          searchFiltersPanelSelectedCount,\n        }\n      : {};\n\n    const hasPaginationInfo = !!pagination && pagination.totalItems != null;\n    const totalItems = searchParamsAreInSync && hasPaginationInfo ? pagination.totalItems : 0;\n    const listingsAreLoaded = !searchInProgress && searchParamsAreInSync && hasPaginationInfo;\n\n    const classes = classNames(rootClassName || css.searchResultContainer, className);\n\n    const filterParamNames = Object.values(filters).map(f => f.paramName);\n    const secondaryFilterParamNames = secondaryFilters\n      ? Object.values(secondaryFilters).map(f => f.paramName)\n      : [];\n\n    return (\n      <div className={classes}>\n        <SearchFilters\n          className={css.searchFilters}\n          urlQueryParams={urlQueryParams}\n          listingsAreLoaded={listingsAreLoaded}\n          resultsCount={totalItems}\n          searchInProgress={searchInProgress}\n          searchListingsError={searchListingsError}\n          onManageDisableScrolling={onManageDisableScrolling}\n          {...searchFiltersPanelProps}\n          {...primaryFilters}\n        />\n        <SearchFiltersMobile\n          className={css.searchFiltersMobile}\n          urlQueryParams={urlQueryParams}\n          listingsAreLoaded={listingsAreLoaded}\n          resultsCount={totalItems}\n          searchInProgress={searchInProgress}\n          searchListingsError={searchListingsError}\n          showAsModalMaxWidth={showAsModalMaxWidth}\n          onMapIconClick={onMapIconClick}\n          onManageDisableScrolling={onManageDisableScrolling}\n          onOpenModal={onOpenModal}\n          onCloseModal={onCloseModal}\n          filterParamNames={filterParamNames}\n          selectedFiltersCount={selectedFiltersCount}\n          {...primaryFilters}\n          {...secondaryFilters}\n        />\n        {isSearchFiltersPanelOpen ? (\n          <div className={classNames(css.searchFiltersPanel)}>\n            <SearchFiltersPanel\n              urlQueryParams={urlQueryParams}\n              listingsAreLoaded={listingsAreLoaded}\n              onClosePanel={() => this.setState({ isSearchFiltersPanelOpen: false })}\n              filterParamNames={secondaryFilterParamNames}\n              {...secondaryFilters}\n            />\n          </div>\n        ) : (\n          <div\n            className={classNames(css.listings, {\n              [css.newSearchInProgress]: !listingsAreLoaded,\n            })}\n          >\n            {searchListingsError ? (\n              <h2 className={css.error}>\n                <FormattedMessage id=\"SearchPage.searchError\" />\n              </h2>\n            ) : null}\n            <SearchResultsPanel\n              className={css.searchListingsPanel}\n              listings={listings}\n              pagination={listingsAreLoaded ? pagination : null}\n              search={searchParamsForPagination}\n              setActiveListing={onActivateListing}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nMainPanel.defaultProps = {\n  className: null,\n  rootClassName: null,\n  listings: [],\n  resultsCount: 0,\n  pagination: null,\n  searchParamsForPagination: {},\n  primaryFilters: null,\n  secondaryFilters: null,\n};\n\nMainPanel.propTypes = {\n  className: string,\n  rootClassName: string,\n\n  urlQueryParams: object.isRequired,\n  listings: array,\n  searchInProgress: bool.isRequired,\n  searchListingsError: propTypes.error,\n  searchParamsAreInSync: bool.isRequired,\n  onActivateListing: func.isRequired,\n  onManageDisableScrolling: func.isRequired,\n  onOpenModal: func.isRequired,\n  onCloseModal: func.isRequired,\n  onMapIconClick: func.isRequired,\n  pagination: propTypes.pagination,\n  searchParamsForPagination: object,\n  showAsModalMaxWidth: number.isRequired,\n  primaryFilters: objectOf(propTypes.filterConfig),\n  secondaryFilters: objectOf(propTypes.filterConfig),\n};\n\nexport default MainPanel;\n"]},"metadata":{},"sourceType":"module"}