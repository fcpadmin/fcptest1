{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/forms/PayoutDetailsForm/PayoutDetailsCompanyAccount.js\";\nimport React from 'react';\nimport { bool, object, shape } from 'prop-types';\nimport { compose } from 'redux';\nimport { injectIntl, intlShape } from 'react-intl';\nimport PayoutDetailsAddress from './PayoutDetailsAddress';\nimport PayoutDetailsCompany from './PayoutDetailsCompany';\nimport PayoutDetailsBankDetails from './PayoutDetailsBankDetails';\nimport PayoutDetailsAccountOpener from './PayoutDetailsAccountOpener';\nimport PayoutDetailsAdditionalPersons from './PayoutDetailsAdditionalPersons';\nimport { stripeCountryConfigs } from './PayoutDetailsForm';\n\nconst CompanyAccountComponent = props => {\n  const fieldRenderProps = props.fieldRenderProps,\n        intl = props.intl;\n  const disabled = fieldRenderProps.disabled,\n        form = fieldRenderProps.form,\n        values = fieldRenderProps.values;\n  const country = values.country;\n\n  const _ref = form && form.mutators ? form.mutators : {},\n        push = _ref.push;\n\n  const companyConfig = country && stripeCountryConfigs(country).companyConfig ? stripeCountryConfigs(country).companyConfig : {};\n  const showBusinessURLField = !!companyConfig.businessURL;\n  const showCompanyPhoneNumberField = !!companyConfig.companyPhone;\n  const showMCCForUSField = !!companyConfig.mccForUS;\n  const showPersonalEmailField = !!companyConfig.personalEmail;\n  const showPersonalAddressField = !!companyConfig.personalAddress;\n  const showPersonalIdNumberField = !!companyConfig.personalIdNumberRequired || !!companyConfig.ssnLast4Required;\n  const showPersonalPhoneNumberField = !!companyConfig.personalPhone;\n  const showOwnerFields = !!companyConfig.owners;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, country ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(PayoutDetailsCompany, {\n    country: country,\n    disabled: disabled,\n    fieldId: \"company\",\n    intl: intl,\n    showPhoneNumberField: showCompanyPhoneNumberField,\n    showMCCForUSField: showMCCForUSField,\n    showBusinessURLField: showBusinessURLField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(PayoutDetailsAddress, {\n    country: country,\n    intl: intl,\n    disabled: disabled,\n    form: form,\n    fieldId: \"company.address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(PayoutDetailsBankDetails, {\n    country: country,\n    disabled: disabled,\n    fieldId: \"company\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(PayoutDetailsAccountOpener, {\n    country: country,\n    disabled: disabled,\n    fieldId: \"accountOpener\",\n    form: form,\n    intl: intl,\n    showEmailField: showPersonalEmailField,\n    showOrganizationTitleField: true,\n    showOwnerField: showOwnerFields,\n    showPersonalAddressField: showPersonalAddressField,\n    showPersonalIdNumberField: showPersonalIdNumberField,\n    showPhoneNumberField: showPersonalPhoneNumberField,\n    values: values,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), showOwnerFields ? React.createElement(PayoutDetailsAdditionalPersons, {\n    country: country,\n    disabled: disabled,\n    fieldId: \"persons\",\n    form: form,\n    intl: intl,\n    push: push,\n    showEmailField: showPersonalEmailField,\n    showOrganizationTitleField: true,\n    showOwnerField: showOwnerFields,\n    showPersonalAddressField: showPersonalAddressField,\n    showPersonalIdNumberField: showPersonalIdNumberField,\n    showPhoneNumberField: showPersonalPhoneNumberField,\n    values: values,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }) : null) : null);\n};\n\nCompanyAccountComponent.defaultProps = {\n  id: null,\n  disabled: false\n};\nCompanyAccountComponent.propTypes = {\n  fieldRenderProps: shape({\n    disabled: bool,\n    form: object.isRequired,\n    values: object\n  }).isRequired,\n  // from injectIntl\n  intl: intlShape.isRequired\n};\nconst PayoutDetailsCompanyAccount = compose(injectIntl)(CompanyAccountComponent);\nexport default PayoutDetailsCompanyAccount;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/forms/PayoutDetailsForm/PayoutDetailsCompanyAccount.js"],"names":["React","bool","object","shape","compose","injectIntl","intlShape","PayoutDetailsAddress","PayoutDetailsCompany","PayoutDetailsBankDetails","PayoutDetailsAccountOpener","PayoutDetailsAdditionalPersons","stripeCountryConfigs","CompanyAccountComponent","props","fieldRenderProps","intl","disabled","form","values","country","mutators","push","companyConfig","showBusinessURLField","businessURL","showCompanyPhoneNumberField","companyPhone","showMCCForUSField","mccForUS","showPersonalEmailField","personalEmail","showPersonalAddressField","personalAddress","showPersonalIdNumberField","personalIdNumberRequired","ssnLast4Required","showPersonalPhoneNumberField","personalPhone","showOwnerFields","owners","defaultProps","id","propTypes","isRequired","PayoutDetailsCompanyAccount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { bool, object, shape } from 'prop-types';\nimport { compose } from 'redux';\nimport { injectIntl, intlShape } from 'react-intl';\n\nimport PayoutDetailsAddress from './PayoutDetailsAddress';\nimport PayoutDetailsCompany from './PayoutDetailsCompany';\nimport PayoutDetailsBankDetails from './PayoutDetailsBankDetails';\nimport PayoutDetailsAccountOpener from './PayoutDetailsAccountOpener';\nimport PayoutDetailsAdditionalPersons from './PayoutDetailsAdditionalPersons';\nimport { stripeCountryConfigs } from './PayoutDetailsForm';\n\nconst CompanyAccountComponent = props => {\n  const { fieldRenderProps, intl } = props;\n  const { disabled, form, values } = fieldRenderProps;\n  const { country } = values;\n  const { push } = form && form.mutators ? form.mutators : {};\n\n  const companyConfig =\n    country && stripeCountryConfigs(country).companyConfig\n      ? stripeCountryConfigs(country).companyConfig\n      : {};\n\n  const showBusinessURLField = !!companyConfig.businessURL;\n  const showCompanyPhoneNumberField = !!companyConfig.companyPhone;\n  const showMCCForUSField = !!companyConfig.mccForUS;\n  const showPersonalEmailField = !!companyConfig.personalEmail;\n  const showPersonalAddressField = !!companyConfig.personalAddress;\n  const showPersonalIdNumberField =\n    !!companyConfig.personalIdNumberRequired || !!companyConfig.ssnLast4Required;\n  const showPersonalPhoneNumberField = !!companyConfig.personalPhone;\n  const showOwnerFields = !!companyConfig.owners;\n\n  return (\n    <React.Fragment>\n      {country ? (\n        <React.Fragment>\n          <PayoutDetailsCompany\n            country={country}\n            disabled={disabled}\n            fieldId=\"company\"\n            intl={intl}\n            showPhoneNumberField={showCompanyPhoneNumberField}\n            showMCCForUSField={showMCCForUSField}\n            showBusinessURLField={showBusinessURLField}\n          />\n          <PayoutDetailsAddress\n            country={country}\n            intl={intl}\n            disabled={disabled}\n            form={form}\n            fieldId=\"company.address\"\n          />\n          <PayoutDetailsBankDetails country={country} disabled={disabled} fieldId=\"company\" />\n\n          <PayoutDetailsAccountOpener\n            country={country}\n            disabled={disabled}\n            fieldId=\"accountOpener\"\n            form={form}\n            intl={intl}\n            showEmailField={showPersonalEmailField}\n            showOrganizationTitleField\n            showOwnerField={showOwnerFields}\n            showPersonalAddressField={showPersonalAddressField}\n            showPersonalIdNumberField={showPersonalIdNumberField}\n            showPhoneNumberField={showPersonalPhoneNumberField}\n            values={values}\n          />\n\n          {showOwnerFields ? (\n            <PayoutDetailsAdditionalPersons\n              country={country}\n              disabled={disabled}\n              fieldId=\"persons\"\n              form={form}\n              intl={intl}\n              push={push}\n              showEmailField={showPersonalEmailField}\n              showOrganizationTitleField\n              showOwnerField={showOwnerFields}\n              showPersonalAddressField={showPersonalAddressField}\n              showPersonalIdNumberField={showPersonalIdNumberField}\n              showPhoneNumberField={showPersonalPhoneNumberField}\n              values={values}\n            />\n          ) : null}\n        </React.Fragment>\n      ) : null}\n    </React.Fragment>\n  );\n};\n\nCompanyAccountComponent.defaultProps = {\n  id: null,\n  disabled: false,\n};\n\nCompanyAccountComponent.propTypes = {\n  fieldRenderProps: shape({\n    disabled: bool,\n    form: object.isRequired,\n    values: object,\n  }).isRequired,\n\n  // from injectIntl\n  intl: intlShape.isRequired,\n};\n\nconst PayoutDetailsCompanyAccount = compose(injectIntl)(CompanyAccountComponent);\n\nexport default PayoutDetailsCompanyAccount;\n"]},"metadata":{},"sourceType":"module"}