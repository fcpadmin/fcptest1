{"ast":null,"code":"import _objectSpread from \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/CookieConsent/CookieConsent.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { ExternalLink } from '../../components';\nimport classNames from 'classnames';\nimport css from './CookieConsent.css';\n\nclass CookieConsent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false\n    };\n    this.onAcceptCookies = this.onAcceptCookies.bind(this);\n    this.saveCookieConsent = this.saveCookieConsent.bind(this);\n  }\n\n  componentDidMount() {\n    const cookies = document.cookie.split('; ').reduce((acc, c) => {\n      const _c$split = c.split('='),\n            _c$split2 = _slicedToArray(_c$split, 2),\n            name = _c$split2[0],\n            value = _c$split2[1];\n\n      return _objectSpread({}, acc, {\n        [name]: decodeURIComponent(value)\n      });\n    }, {});\n\n    if (cookies.euCookiesAccepted !== '1') {\n      this.setState({\n        show: true\n      });\n    }\n  }\n\n  onAcceptCookies() {\n    this.saveCookieConsent();\n    this.setState({\n      show: false\n    });\n  }\n\n  saveCookieConsent() {\n    // We create date object and modify it to show date 10 years into the future.\n    let expirationDate = new Date();\n    expirationDate.setFullYear(expirationDate.getFullYear() + 10); // Save the cookie with expiration date\n\n    document.cookie = 'euCookiesAccepted=1; path=/; expires=' + expirationDate.toGMTString();\n  }\n\n  render() {\n    const _this$props = this.props,\n          className = _this$props.className,\n          rootClassName = _this$props.rootClassName;\n    const isServer = typeof window === 'undefined'; // Server side doesn't know about cookie consent\n\n    if (isServer || !this.state.show) {\n      return null;\n    } else {\n      const cookieLink = React.createElement(ExternalLink, {\n        href: \"https://cookiesandyou.com\",\n        className: css.cookieLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"CookieConsent.cookieLink\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n      const classes = classNames(rootClassName || css.root, className);\n      return React.createElement(\"div\", {\n        className: classes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: css.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"CookieConsent.message\",\n        values: {\n          cookieLink\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: css.continueBtn,\n        onClick: this.onAcceptCookies,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"CookieConsent.continue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\n\nconst string = PropTypes.string;\nCookieConsent.defaultProps = {\n  className: null,\n  rootClassName: null\n};\nCookieConsent.propTypes = {\n  className: string,\n  rootClassName: string\n};\nexport default CookieConsent;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/CookieConsent/CookieConsent.js"],"names":["React","Component","PropTypes","FormattedMessage","ExternalLink","classNames","css","CookieConsent","constructor","props","state","show","onAcceptCookies","bind","saveCookieConsent","componentDidMount","cookies","document","cookie","split","reduce","acc","c","name","value","decodeURIComponent","euCookiesAccepted","setState","expirationDate","Date","setFullYear","getFullYear","toGMTString","render","className","rootClassName","isServer","window","cookieLink","classes","root","message","continueBtn","string","defaultProps","propTypes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { ExternalLink } from '../../components';\nimport classNames from 'classnames';\n\nimport css from './CookieConsent.css';\n\nclass CookieConsent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { show: false };\n    this.onAcceptCookies = this.onAcceptCookies.bind(this);\n    this.saveCookieConsent = this.saveCookieConsent.bind(this);\n  }\n\n  componentDidMount() {\n    const cookies = document.cookie.split('; ').reduce((acc, c) => {\n      const [name, value] = c.split('=');\n      return { ...acc, [name]: decodeURIComponent(value) };\n    }, {});\n\n    if (cookies.euCookiesAccepted !== '1') {\n      this.setState({ show: true });\n    }\n  }\n\n  onAcceptCookies() {\n    this.saveCookieConsent();\n    this.setState({ show: false });\n  }\n\n  saveCookieConsent() {\n    // We create date object and modify it to show date 10 years into the future.\n    let expirationDate = new Date();\n    expirationDate.setFullYear(expirationDate.getFullYear() + 10);\n    // Save the cookie with expiration date\n    document.cookie = 'euCookiesAccepted=1; path=/; expires=' + expirationDate.toGMTString();\n  }\n\n  render() {\n    const { className, rootClassName } = this.props;\n    const isServer = typeof window === 'undefined';\n\n    // Server side doesn't know about cookie consent\n    if (isServer || !this.state.show) {\n      return null;\n    } else {\n      const cookieLink = (\n        <ExternalLink href=\"https://cookiesandyou.com\" className={css.cookieLink}>\n          <FormattedMessage id=\"CookieConsent.cookieLink\" />\n        </ExternalLink>\n      );\n      const classes = classNames(rootClassName || css.root, className);\n\n      return (\n        <div className={classes}>\n          <div className={css.message}>\n            <FormattedMessage id=\"CookieConsent.message\" values={{ cookieLink }} />\n          </div>\n          <button className={css.continueBtn} onClick={this.onAcceptCookies}>\n            <FormattedMessage id=\"CookieConsent.continue\" />\n          </button>\n        </div>\n      );\n    }\n  }\n}\n\nconst { string } = PropTypes;\n\nCookieConsent.defaultProps = {\n  className: null,\n  rootClassName: null,\n};\n\nCookieConsent.propTypes = {\n  className: string,\n  rootClassName: string,\n};\n\nexport default CookieConsent;\n"]},"metadata":{},"sourceType":"module"}