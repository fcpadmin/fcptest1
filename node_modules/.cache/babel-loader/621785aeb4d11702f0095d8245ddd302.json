{"ast":null,"code":"/**\n * This module defines custom PropTypes shared within the application.\n *\n * To learn about validating React component props with PropTypes, see:\n *\n *     https://facebook.github.io/react/docs/typechecking-with-proptypes.html\n *\n * For component specific PropTypes, it's perfectly ok to inline them\n * to the component itself. If the type is shared or external (SDK or\n * API), however, it should be in this file for sharing with other\n * components.\n *\n * PropTypes should usually be validated only at the lowest level\n * where the props are used, not along the way in parents that pass\n * along the props to their children. Those parents should usually\n * just validate the presense of the prop key and that the value is\n * defined. This way we get the validation errors only in the most\n * specific place and avoid duplicate errros.\n */\nimport { arrayOf, bool, func, instanceOf, number, object, objectOf, oneOf, oneOfType, shape, string } from 'prop-types';\nimport Decimal from 'decimal.js';\nimport { types as sdkTypes } from './sdkLoader';\nimport { TRANSITIONS, TX_TRANSITION_ACTORS } from './transaction';\nconst UUID = sdkTypes.UUID,\n      LatLng = sdkTypes.LatLng,\n      LatLngBounds = sdkTypes.LatLngBounds,\n      Money = sdkTypes.Money;\nconst propTypes = {}; // Fixed value\n\npropTypes.value = val => oneOf([val]); // SDK type instances\n\n\npropTypes.uuid = instanceOf(UUID);\npropTypes.latlng = instanceOf(LatLng);\npropTypes.latlngBounds = instanceOf(LatLngBounds);\npropTypes.money = instanceOf(Money); // Configuration for currency formatting\n\npropTypes.currencyConfig = shape({\n  style: string.isRequired,\n  currency: string.isRequired,\n  currencyDisplay: string,\n  useGrouping: bool,\n  minimumFractionDigits: number,\n  maximumFractionDigits: number\n}); // Configuration for a single route\n\npropTypes.route = shape({\n  name: string.isRequired,\n  path: string.isRequired,\n  exact: bool,\n  strict: bool,\n  component: func.isRequired,\n  loadData: func\n}); // Place object from LocationAutocompleteInput\n\npropTypes.place = shape({\n  address: string.isRequired,\n  origin: propTypes.latlng,\n  bounds: propTypes.latlngBounds // optional viewport bounds\n\n}); // Denormalised image object\n\npropTypes.image = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('image').isRequired,\n  attributes: shape({\n    variants: objectOf(shape({\n      width: number.isRequired,\n      height: number.isRequired,\n      url: string.isRequired\n    }))\n  })\n}); // Denormalised user object\n\npropTypes.currentUser = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('currentUser').isRequired,\n  attributes: shape({\n    banned: bool.isRequired,\n    email: string.isRequired,\n    emailVerified: bool.isRequired,\n    profile: shape({\n      firstName: string.isRequired,\n      lastName: string.isRequired,\n      displayName: string.isRequired,\n      abbreviatedName: string.isRequired,\n      bio: string\n    }).isRequired,\n    stripeConnected: bool\n  }),\n  profileImage: propTypes.image\n});\nconst userAttributes = shape({\n  banned: propTypes.value(false).isRequired,\n  deleted: propTypes.value(false).isRequired,\n  profile: shape({\n    displayName: string.isRequired,\n    abbreviatedName: string.isRequired,\n    bio: string\n  })\n}); // Listing queries can include author.\n// Banned and deleted are not relevant then\n// since banned and deleted users can't have listings.\n\nconst authorAttributes = shape({\n  profile: shape({\n    displayName: string.isRequired,\n    abbreviatedName: string.isRequired,\n    bio: string\n  })\n});\nconst deletedUserAttributes = shape({\n  deleted: propTypes.value(true).isRequired\n});\nconst bannedUserAttributes = shape({\n  banned: propTypes.value(true).isRequired\n}); // Denormalised user object\n\npropTypes.user = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('user').isRequired,\n  attributes: oneOfType([userAttributes, authorAttributes, deletedUserAttributes, bannedUserAttributes]).isRequired,\n  profileImage: propTypes.image\n});\nexport const LISTING_STATE_DRAFT = 'draft';\nexport const LISTING_STATE_PENDING_APPROVAL = 'pendingApproval';\nexport const LISTING_STATE_PUBLISHED = 'published';\nexport const LISTING_STATE_CLOSED = 'closed';\nconst LISTING_STATES = [LISTING_STATE_DRAFT, LISTING_STATE_PENDING_APPROVAL, LISTING_STATE_PUBLISHED, LISTING_STATE_CLOSED];\nconst listingAttributes = shape({\n  title: string.isRequired,\n  description: string,\n  geolocation: propTypes.latlng,\n  deleted: propTypes.value(false),\n  state: oneOf(LISTING_STATES),\n  price: propTypes.money,\n  publicData: object\n});\nconst AVAILABILITY_PLAN_DAY = 'availability-plan/day';\nconst AVAILABILITY_PLAN_TIME = 'availability-plan/time';\nexport const DAYS_OF_WEEK = ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun'];\nconst availabilityPlan = shape({\n  type: oneOf([AVAILABILITY_PLAN_DAY, AVAILABILITY_PLAN_TIME]).isRequired,\n  timezone: string,\n  entries: arrayOf(shape({\n    dayOfWeek: oneOf(DAYS_OF_WEEK).isRequired,\n    seats: number.isRequired,\n    start: string,\n    end: string\n  }))\n});\nconst ownListingAttributes = shape({\n  title: string.isRequired,\n  description: string,\n  geolocation: propTypes.latlng,\n  deleted: propTypes.value(false).isRequired,\n  state: oneOf(LISTING_STATES).isRequired,\n  price: propTypes.money,\n  availabilityPlan: availabilityPlan,\n  publicData: object.isRequired\n});\nconst deletedListingAttributes = shape({\n  deleted: propTypes.value(true).isRequired\n}); // Denormalised listing object\n\npropTypes.listing = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('listing').isRequired,\n  attributes: oneOfType([listingAttributes, deletedListingAttributes]).isRequired,\n  author: propTypes.user,\n  images: arrayOf(propTypes.image)\n}); // Denormalised ownListing object\n\npropTypes.ownListing = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('ownListing').isRequired,\n  attributes: oneOfType([ownListingAttributes, deletedListingAttributes]).isRequired,\n  author: propTypes.currentUser,\n  images: arrayOf(propTypes.image)\n});\nexport const BOOKING_STATE_PENDING = 'pending';\nexport const BOOKING_STATE_ACCEPTED = 'accepted';\nexport const BOOKING_STATE_DECLINED = 'declined';\nexport const BOOKING_STATE_CANCELLED = 'cancelled';\nexport const BOOKING_STATES = [BOOKING_STATE_PENDING, BOOKING_STATE_ACCEPTED, BOOKING_STATE_DECLINED, BOOKING_STATE_CANCELLED]; // Denormalised booking object\n\npropTypes.booking = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('booking').isRequired,\n  attributes: shape({\n    end: instanceOf(Date).isRequired,\n    start: instanceOf(Date).isRequired,\n    displayStart: instanceOf(Date),\n    displayEnd: instanceOf(Date),\n    state: oneOf(BOOKING_STATES)\n  })\n}); // A time slot that covers one day, having a start and end date.\n\nexport const TIME_SLOT_DAY = 'time-slot/day'; // Denormalised time slot object\n\npropTypes.timeSlot = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('timeSlot').isRequired,\n  attributes: shape({\n    type: oneOf([TIME_SLOT_DAY]).isRequired,\n    end: instanceOf(Date).isRequired,\n    start: instanceOf(Date).isRequired\n  })\n}); // Denormalised availability exception object\n\npropTypes.availabilityException = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('availabilityException').isRequired,\n  attributes: shape({\n    end: instanceOf(Date).isRequired,\n    seats: number.isRequired,\n    start: instanceOf(Date).isRequired\n  })\n});\npropTypes.transition = shape({\n  createdAt: instanceOf(Date).isRequired,\n  by: oneOf(TX_TRANSITION_ACTORS).isRequired,\n  transition: oneOf(TRANSITIONS).isRequired\n}); // Possible amount of stars in a review\n\nexport const REVIEW_RATINGS = [1, 2, 3, 4, 5]; // Review types: review of a provider and of a customer\n\nexport const REVIEW_TYPE_OF_PROVIDER = 'ofProvider';\nexport const REVIEW_TYPE_OF_CUSTOMER = 'ofCustomer'; // A review on a user\n\npropTypes.review = shape({\n  id: propTypes.uuid.isRequired,\n  attributes: shape({\n    createdAt: instanceOf(Date).isRequired,\n    content: string,\n    rating: oneOf(REVIEW_RATINGS),\n    state: string.isRequired,\n    type: oneOf([REVIEW_TYPE_OF_PROVIDER, REVIEW_TYPE_OF_CUSTOMER]).isRequired\n  }).isRequired,\n  author: propTypes.user,\n  subject: propTypes.user\n}); // A Stripe account entity\n\npropTypes.stripeAccount = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('stripeAccount').isRequired,\n  attributes: shape({\n    stripeAccountId: string.isRequired\n  })\n});\nexport const LINE_ITEM_NIGHT = 'line-item/night';\nexport const LINE_ITEM_DAY = 'line-item/day';\nexport const LINE_ITEM_UNITS = 'line-item/units';\nexport const LINE_ITEM_CUSTOMER_COMMISSION = 'line-item/customer-commission';\nexport const LINE_ITEM_PROVIDER_COMMISSION = 'line-item/provider-commission';\nexport const LINE_ITEMS = [LINE_ITEM_NIGHT, LINE_ITEM_DAY, LINE_ITEM_UNITS, LINE_ITEM_CUSTOMER_COMMISSION, LINE_ITEM_PROVIDER_COMMISSION];\npropTypes.bookingUnitType = oneOf([LINE_ITEM_NIGHT, LINE_ITEM_DAY, LINE_ITEM_UNITS]);\n\nconst requiredLineItemPropType = (props, propName, componentName) => {\n  const prop = props[propName];\n\n  if (!prop || prop === '') {\n    return new Error(\"Missing line item code prop from \".concat(componentName, \".\"));\n  }\n\n  if (!/^line-item\\/.+/.test(prop)) {\n    return new Error(\"Invalid line item code value \".concat(prop, \" passed to \").concat(componentName, \".\"));\n  }\n}; // Denormalised transaction object\n\n\npropTypes.transaction = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('transaction').isRequired,\n  attributes: shape({\n    createdAt: instanceOf(Date),\n    lastTransitionedAt: instanceOf(Date).isRequired,\n    lastTransition: oneOf(TRANSITIONS).isRequired,\n    // An enquiry won't need a total sum nor a booking so these are\n    // optional.\n    payinTotal: propTypes.money,\n    payoutTotal: propTypes.money,\n    lineItems: arrayOf(shape({\n      code: requiredLineItemPropType,\n      includeFor: arrayOf(oneOf(['customer', 'provider'])).isRequired,\n      quantity: instanceOf(Decimal),\n      unitPrice: propTypes.money.isRequired,\n      lineTotal: propTypes.money.isRequired,\n      reversal: bool.isRequired\n    })),\n    transitions: arrayOf(propTypes.transition).isRequired\n  }),\n  booking: propTypes.booking,\n  listing: propTypes.listing,\n  customer: propTypes.user,\n  provider: propTypes.user,\n  reviews: arrayOf(propTypes.review)\n}); // Denormalised transaction message\n\npropTypes.message = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('message').isRequired,\n  attributes: shape({\n    createdAt: instanceOf(Date).isRequired,\n    content: string.isRequired\n  }).isRequired,\n  sender: propTypes.user\n}); // Pagination information in the response meta\n\npropTypes.pagination = shape({\n  page: number.isRequired,\n  perPage: number.isRequired,\n  totalItems: number.isRequired,\n  totalPages: number.isRequired\n}); // Search filter definition\n\nconst filterWithOptions = shape({\n  paramName: string.isRequired,\n  options: arrayOf(shape({\n    key: oneOfType([string, bool, number]).isRequired,\n    label: string.isRequired\n  })).isRequired\n});\nconst filterWithPriceConfig = shape({\n  paramName: string.isRequired,\n  config: shape({\n    min: number.isRequired,\n    max: number.isRequired,\n    step: number.isRequired\n  }).isRequired\n});\nconst filterIsActiveConfig = shape({\n  paramName: string.isRequired,\n  config: shape({\n    active: bool.isRequired\n  }).isRequired\n});\npropTypes.filterConfig = oneOfType([filterWithOptions, filterWithPriceConfig, filterIsActiveConfig]);\nexport const ERROR_CODE_TRANSACTION_LISTING_NOT_FOUND = 'transaction-listing-not-found';\nexport const ERROR_CODE_TRANSACTION_INVALID_TRANSITION = 'transaction-invalid-transition';\nexport const ERROR_CODE_TRANSACTION_ALREADY_REVIEWED_BY_CUSTOMER = 'transaction-already-reviewed-by-customer';\nexport const ERROR_CODE_TRANSACTION_ALREADY_REVIEWED_BY_PROVIDER = 'transaction-already-reviewed-by-provider';\nexport const ERROR_CODE_TRANSACTION_BOOKING_TIME_NOT_AVAILABLE = 'transaction-booking-time-not-available';\nexport const ERROR_CODE_PAYMENT_FAILED = 'transaction-payment-failed';\nexport const ERROR_CODE_CHARGE_ZERO_PAYIN = 'transaction-charge-zero-payin';\nexport const ERROR_CODE_CHARGE_ZERO_PAYOUT = 'transaction-charge-zero-payout';\nexport const ERROR_CODE_EMAIL_TAKEN = 'email-taken';\nexport const ERROR_CODE_EMAIL_NOT_FOUND = 'email-not-found';\nexport const ERROR_CODE_TOO_MANY_VERIFICATION_REQUESTS = 'email-too-many-verification-requests';\nexport const ERROR_CODE_UPLOAD_OVER_LIMIT = 'request-upload-over-limit';\nexport const ERROR_CODE_VALIDATION_INVALID_PARAMS = 'validation-invalid-params';\nexport const ERROR_CODE_VALIDATION_INVALID_VALUE = 'validation-invalid-value';\nexport const ERROR_CODE_NOT_FOUND = 'not-found';\nexport const ERROR_CODE_FORBIDDEN = 'forbidden';\nexport const ERROR_CODE_MISSING_STRIPE_ACCOUNT = 'transaction-missing-stripe-account';\nconst ERROR_CODES = [ERROR_CODE_TRANSACTION_LISTING_NOT_FOUND, ERROR_CODE_TRANSACTION_INVALID_TRANSITION, ERROR_CODE_TRANSACTION_ALREADY_REVIEWED_BY_CUSTOMER, ERROR_CODE_TRANSACTION_ALREADY_REVIEWED_BY_PROVIDER, ERROR_CODE_PAYMENT_FAILED, ERROR_CODE_CHARGE_ZERO_PAYIN, ERROR_CODE_CHARGE_ZERO_PAYOUT, ERROR_CODE_EMAIL_TAKEN, ERROR_CODE_EMAIL_NOT_FOUND, ERROR_CODE_TOO_MANY_VERIFICATION_REQUESTS, ERROR_CODE_UPLOAD_OVER_LIMIT, ERROR_CODE_VALIDATION_INVALID_PARAMS, ERROR_CODE_VALIDATION_INVALID_VALUE, ERROR_CODE_NOT_FOUND, ERROR_CODE_FORBIDDEN, ERROR_CODE_MISSING_STRIPE_ACCOUNT]; // API error\n// TODO this is likely to change soonish\n\npropTypes.apiError = shape({\n  id: propTypes.uuid.isRequired,\n  status: number.isRequired,\n  code: oneOf(ERROR_CODES).isRequired,\n  title: string.isRequired,\n  meta: object\n}); // Storable error prop type. (Error object should not be stored as it is.)\n\npropTypes.error = shape({\n  type: propTypes.value('error').isRequired,\n  name: string.isRequired,\n  message: string,\n  status: number,\n  statusText: string,\n  apiErrors: arrayOf(propTypes.apiError)\n});\nexport { propTypes };","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/util/types.js"],"names":["arrayOf","bool","func","instanceOf","number","object","objectOf","oneOf","oneOfType","shape","string","Decimal","types","sdkTypes","TRANSITIONS","TX_TRANSITION_ACTORS","UUID","LatLng","LatLngBounds","Money","propTypes","value","val","uuid","latlng","latlngBounds","money","currencyConfig","style","isRequired","currency","currencyDisplay","useGrouping","minimumFractionDigits","maximumFractionDigits","route","name","path","exact","strict","component","loadData","place","address","origin","bounds","image","id","type","attributes","variants","width","height","url","currentUser","banned","email","emailVerified","profile","firstName","lastName","displayName","abbreviatedName","bio","stripeConnected","profileImage","userAttributes","deleted","authorAttributes","deletedUserAttributes","bannedUserAttributes","user","LISTING_STATE_DRAFT","LISTING_STATE_PENDING_APPROVAL","LISTING_STATE_PUBLISHED","LISTING_STATE_CLOSED","LISTING_STATES","listingAttributes","title","description","geolocation","state","price","publicData","AVAILABILITY_PLAN_DAY","AVAILABILITY_PLAN_TIME","DAYS_OF_WEEK","availabilityPlan","timezone","entries","dayOfWeek","seats","start","end","ownListingAttributes","deletedListingAttributes","listing","author","images","ownListing","BOOKING_STATE_PENDING","BOOKING_STATE_ACCEPTED","BOOKING_STATE_DECLINED","BOOKING_STATE_CANCELLED","BOOKING_STATES","booking","Date","displayStart","displayEnd","TIME_SLOT_DAY","timeSlot","availabilityException","transition","createdAt","by","REVIEW_RATINGS","REVIEW_TYPE_OF_PROVIDER","REVIEW_TYPE_OF_CUSTOMER","review","content","rating","subject","stripeAccount","stripeAccountId","LINE_ITEM_NIGHT","LINE_ITEM_DAY","LINE_ITEM_UNITS","LINE_ITEM_CUSTOMER_COMMISSION","LINE_ITEM_PROVIDER_COMMISSION","LINE_ITEMS","bookingUnitType","requiredLineItemPropType","props","propName","componentName","prop","Error","test","transaction","lastTransitionedAt","lastTransition","payinTotal","payoutTotal","lineItems","code","includeFor","quantity","unitPrice","lineTotal","reversal","transitions","customer","provider","reviews","message","sender","pagination","page","perPage","totalItems","totalPages","filterWithOptions","paramName","options","key","label","filterWithPriceConfig","config","min","max","step","filterIsActiveConfig","active","filterConfig","ERROR_CODE_TRANSACTION_LISTING_NOT_FOUND","ERROR_CODE_TRANSACTION_INVALID_TRANSITION","ERROR_CODE_TRANSACTION_ALREADY_REVIEWED_BY_CUSTOMER","ERROR_CODE_TRANSACTION_ALREADY_REVIEWED_BY_PROVIDER","ERROR_CODE_TRANSACTION_BOOKING_TIME_NOT_AVAILABLE","ERROR_CODE_PAYMENT_FAILED","ERROR_CODE_CHARGE_ZERO_PAYIN","ERROR_CODE_CHARGE_ZERO_PAYOUT","ERROR_CODE_EMAIL_TAKEN","ERROR_CODE_EMAIL_NOT_FOUND","ERROR_CODE_TOO_MANY_VERIFICATION_REQUESTS","ERROR_CODE_UPLOAD_OVER_LIMIT","ERROR_CODE_VALIDATION_INVALID_PARAMS","ERROR_CODE_VALIDATION_INVALID_VALUE","ERROR_CODE_NOT_FOUND","ERROR_CODE_FORBIDDEN","ERROR_CODE_MISSING_STRIPE_ACCOUNT","ERROR_CODES","apiError","status","meta","error","statusText","apiErrors"],"mappings":"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","sourcesContent":["/**\n * This module defines custom PropTypes shared within the application.\n *\n * To learn about validating React component props with PropTypes, see:\n *\n *     https://facebook.github.io/react/docs/typechecking-with-proptypes.html\n *\n * For component specific PropTypes, it's perfectly ok to inline them\n * to the component itself. If the type is shared or external (SDK or\n * API), however, it should be in this file for sharing with other\n * components.\n *\n * PropTypes should usually be validated only at the lowest level\n * where the props are used, not along the way in parents that pass\n * along the props to their children. Those parents should usually\n * just validate the presense of the prop key and that the value is\n * defined. This way we get the validation errors only in the most\n * specific place and avoid duplicate errros.\n */\nimport {\n  arrayOf,\n  bool,\n  func,\n  instanceOf,\n  number,\n  object,\n  objectOf,\n  oneOf,\n  oneOfType,\n  shape,\n  string,\n} from 'prop-types';\nimport Decimal from 'decimal.js';\nimport { types as sdkTypes } from './sdkLoader';\nimport { TRANSITIONS, TX_TRANSITION_ACTORS } from './transaction';\n\nconst { UUID, LatLng, LatLngBounds, Money } = sdkTypes;\n\nconst propTypes = {};\n\n// Fixed value\npropTypes.value = val => oneOf([val]);\n\n// SDK type instances\npropTypes.uuid = instanceOf(UUID);\npropTypes.latlng = instanceOf(LatLng);\npropTypes.latlngBounds = instanceOf(LatLngBounds);\npropTypes.money = instanceOf(Money);\n\n// Configuration for currency formatting\npropTypes.currencyConfig = shape({\n  style: string.isRequired,\n  currency: string.isRequired,\n  currencyDisplay: string,\n  useGrouping: bool,\n  minimumFractionDigits: number,\n  maximumFractionDigits: number,\n});\n\n// Configuration for a single route\npropTypes.route = shape({\n  name: string.isRequired,\n  path: string.isRequired,\n  exact: bool,\n  strict: bool,\n  component: func.isRequired,\n  loadData: func,\n});\n\n// Place object from LocationAutocompleteInput\npropTypes.place = shape({\n  address: string.isRequired,\n  origin: propTypes.latlng,\n  bounds: propTypes.latlngBounds, // optional viewport bounds\n});\n\n// Denormalised image object\npropTypes.image = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('image').isRequired,\n  attributes: shape({\n    variants: objectOf(\n      shape({\n        width: number.isRequired,\n        height: number.isRequired,\n        url: string.isRequired,\n      })\n    ),\n  }),\n});\n\n// Denormalised user object\npropTypes.currentUser = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('currentUser').isRequired,\n  attributes: shape({\n    banned: bool.isRequired,\n    email: string.isRequired,\n    emailVerified: bool.isRequired,\n    profile: shape({\n      firstName: string.isRequired,\n      lastName: string.isRequired,\n      displayName: string.isRequired,\n      abbreviatedName: string.isRequired,\n      bio: string,\n    }).isRequired,\n    stripeConnected: bool,\n  }),\n  profileImage: propTypes.image,\n});\n\nconst userAttributes = shape({\n  banned: propTypes.value(false).isRequired,\n  deleted: propTypes.value(false).isRequired,\n  profile: shape({\n    displayName: string.isRequired,\n    abbreviatedName: string.isRequired,\n    bio: string,\n  }),\n});\n\n// Listing queries can include author.\n// Banned and deleted are not relevant then\n// since banned and deleted users can't have listings.\nconst authorAttributes = shape({\n  profile: shape({\n    displayName: string.isRequired,\n    abbreviatedName: string.isRequired,\n    bio: string,\n  }),\n});\n\nconst deletedUserAttributes = shape({\n  deleted: propTypes.value(true).isRequired,\n});\n\nconst bannedUserAttributes = shape({\n  banned: propTypes.value(true).isRequired,\n});\n\n// Denormalised user object\npropTypes.user = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('user').isRequired,\n  attributes: oneOfType([\n    userAttributes,\n    authorAttributes,\n    deletedUserAttributes,\n    bannedUserAttributes,\n  ]).isRequired,\n  profileImage: propTypes.image,\n});\n\nexport const LISTING_STATE_DRAFT = 'draft';\nexport const LISTING_STATE_PENDING_APPROVAL = 'pendingApproval';\nexport const LISTING_STATE_PUBLISHED = 'published';\nexport const LISTING_STATE_CLOSED = 'closed';\n\nconst LISTING_STATES = [\n  LISTING_STATE_DRAFT,\n  LISTING_STATE_PENDING_APPROVAL,\n  LISTING_STATE_PUBLISHED,\n  LISTING_STATE_CLOSED,\n];\n\nconst listingAttributes = shape({\n  title: string.isRequired,\n  description: string,\n  geolocation: propTypes.latlng,\n  deleted: propTypes.value(false),\n  state: oneOf(LISTING_STATES),\n  price: propTypes.money,\n  publicData: object,\n});\n\nconst AVAILABILITY_PLAN_DAY = 'availability-plan/day';\nconst AVAILABILITY_PLAN_TIME = 'availability-plan/time';\nexport const DAYS_OF_WEEK = ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun'];\n\nconst availabilityPlan = shape({\n  type: oneOf([AVAILABILITY_PLAN_DAY, AVAILABILITY_PLAN_TIME]).isRequired,\n  timezone: string,\n  entries: arrayOf(\n    shape({\n      dayOfWeek: oneOf(DAYS_OF_WEEK).isRequired,\n      seats: number.isRequired,\n      start: string,\n      end: string,\n    })\n  ),\n});\n\nconst ownListingAttributes = shape({\n  title: string.isRequired,\n  description: string,\n  geolocation: propTypes.latlng,\n  deleted: propTypes.value(false).isRequired,\n  state: oneOf(LISTING_STATES).isRequired,\n  price: propTypes.money,\n  availabilityPlan: availabilityPlan,\n  publicData: object.isRequired,\n});\n\nconst deletedListingAttributes = shape({\n  deleted: propTypes.value(true).isRequired,\n});\n\n// Denormalised listing object\npropTypes.listing = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('listing').isRequired,\n  attributes: oneOfType([listingAttributes, deletedListingAttributes]).isRequired,\n  author: propTypes.user,\n  images: arrayOf(propTypes.image),\n});\n\n// Denormalised ownListing object\npropTypes.ownListing = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('ownListing').isRequired,\n  attributes: oneOfType([ownListingAttributes, deletedListingAttributes]).isRequired,\n  author: propTypes.currentUser,\n  images: arrayOf(propTypes.image),\n});\n\nexport const BOOKING_STATE_PENDING = 'pending';\nexport const BOOKING_STATE_ACCEPTED = 'accepted';\nexport const BOOKING_STATE_DECLINED = 'declined';\nexport const BOOKING_STATE_CANCELLED = 'cancelled';\nexport const BOOKING_STATES = [\n  BOOKING_STATE_PENDING,\n  BOOKING_STATE_ACCEPTED,\n  BOOKING_STATE_DECLINED,\n  BOOKING_STATE_CANCELLED,\n];\n\n// Denormalised booking object\npropTypes.booking = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('booking').isRequired,\n  attributes: shape({\n    end: instanceOf(Date).isRequired,\n    start: instanceOf(Date).isRequired,\n    displayStart: instanceOf(Date),\n    displayEnd: instanceOf(Date),\n    state: oneOf(BOOKING_STATES),\n  }),\n});\n\n// A time slot that covers one day, having a start and end date.\nexport const TIME_SLOT_DAY = 'time-slot/day';\n\n// Denormalised time slot object\npropTypes.timeSlot = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('timeSlot').isRequired,\n  attributes: shape({\n    type: oneOf([TIME_SLOT_DAY]).isRequired,\n    end: instanceOf(Date).isRequired,\n    start: instanceOf(Date).isRequired,\n  }),\n});\n\n// Denormalised availability exception object\npropTypes.availabilityException = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('availabilityException').isRequired,\n  attributes: shape({\n    end: instanceOf(Date).isRequired,\n    seats: number.isRequired,\n    start: instanceOf(Date).isRequired,\n  }),\n});\n\npropTypes.transition = shape({\n  createdAt: instanceOf(Date).isRequired,\n  by: oneOf(TX_TRANSITION_ACTORS).isRequired,\n  transition: oneOf(TRANSITIONS).isRequired,\n});\n\n// Possible amount of stars in a review\nexport const REVIEW_RATINGS = [1, 2, 3, 4, 5];\n\n// Review types: review of a provider and of a customer\nexport const REVIEW_TYPE_OF_PROVIDER = 'ofProvider';\nexport const REVIEW_TYPE_OF_CUSTOMER = 'ofCustomer';\n\n// A review on a user\npropTypes.review = shape({\n  id: propTypes.uuid.isRequired,\n  attributes: shape({\n    createdAt: instanceOf(Date).isRequired,\n    content: string,\n    rating: oneOf(REVIEW_RATINGS),\n    state: string.isRequired,\n    type: oneOf([REVIEW_TYPE_OF_PROVIDER, REVIEW_TYPE_OF_CUSTOMER]).isRequired,\n  }).isRequired,\n  author: propTypes.user,\n  subject: propTypes.user,\n});\n\n// A Stripe account entity\npropTypes.stripeAccount = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('stripeAccount').isRequired,\n  attributes: shape({\n    stripeAccountId: string.isRequired,\n  }),\n});\n\nexport const LINE_ITEM_NIGHT = 'line-item/night';\nexport const LINE_ITEM_DAY = 'line-item/day';\nexport const LINE_ITEM_UNITS = 'line-item/units';\nexport const LINE_ITEM_CUSTOMER_COMMISSION = 'line-item/customer-commission';\nexport const LINE_ITEM_PROVIDER_COMMISSION = 'line-item/provider-commission';\n\nexport const LINE_ITEMS = [\n  LINE_ITEM_NIGHT,\n  LINE_ITEM_DAY,\n  LINE_ITEM_UNITS,\n  LINE_ITEM_CUSTOMER_COMMISSION,\n  LINE_ITEM_PROVIDER_COMMISSION,\n];\n\npropTypes.bookingUnitType = oneOf([LINE_ITEM_NIGHT, LINE_ITEM_DAY, LINE_ITEM_UNITS]);\n\nconst requiredLineItemPropType = (props, propName, componentName) => {\n  const prop = props[propName];\n\n  if (!prop || prop === '') {\n    return new Error(`Missing line item code prop from ${componentName}.`);\n  }\n  if (!/^line-item\\/.+/.test(prop)) {\n    return new Error(`Invalid line item code value ${prop} passed to ${componentName}.`);\n  }\n};\n\n// Denormalised transaction object\npropTypes.transaction = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('transaction').isRequired,\n  attributes: shape({\n    createdAt: instanceOf(Date),\n    lastTransitionedAt: instanceOf(Date).isRequired,\n    lastTransition: oneOf(TRANSITIONS).isRequired,\n\n    // An enquiry won't need a total sum nor a booking so these are\n    // optional.\n    payinTotal: propTypes.money,\n    payoutTotal: propTypes.money,\n\n    lineItems: arrayOf(\n      shape({\n        code: requiredLineItemPropType,\n        includeFor: arrayOf(oneOf(['customer', 'provider'])).isRequired,\n        quantity: instanceOf(Decimal),\n        unitPrice: propTypes.money.isRequired,\n        lineTotal: propTypes.money.isRequired,\n        reversal: bool.isRequired,\n      })\n    ),\n    transitions: arrayOf(propTypes.transition).isRequired,\n  }),\n  booking: propTypes.booking,\n  listing: propTypes.listing,\n  customer: propTypes.user,\n  provider: propTypes.user,\n  reviews: arrayOf(propTypes.review),\n});\n\n// Denormalised transaction message\npropTypes.message = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('message').isRequired,\n  attributes: shape({\n    createdAt: instanceOf(Date).isRequired,\n    content: string.isRequired,\n  }).isRequired,\n  sender: propTypes.user,\n});\n\n// Pagination information in the response meta\npropTypes.pagination = shape({\n  page: number.isRequired,\n  perPage: number.isRequired,\n  totalItems: number.isRequired,\n  totalPages: number.isRequired,\n});\n\n// Search filter definition\nconst filterWithOptions = shape({\n  paramName: string.isRequired,\n  options: arrayOf(\n    shape({\n      key: oneOfType([string, bool, number]).isRequired,\n      label: string.isRequired,\n    })\n  ).isRequired,\n});\nconst filterWithPriceConfig = shape({\n  paramName: string.isRequired,\n  config: shape({\n    min: number.isRequired,\n    max: number.isRequired,\n    step: number.isRequired,\n  }).isRequired,\n});\n\nconst filterIsActiveConfig = shape({\n  paramName: string.isRequired,\n  config: shape({\n    active: bool.isRequired,\n  }).isRequired,\n});\n\npropTypes.filterConfig = oneOfType([\n  filterWithOptions,\n  filterWithPriceConfig,\n  filterIsActiveConfig,\n]);\n\nexport const ERROR_CODE_TRANSACTION_LISTING_NOT_FOUND = 'transaction-listing-not-found';\nexport const ERROR_CODE_TRANSACTION_INVALID_TRANSITION = 'transaction-invalid-transition';\nexport const ERROR_CODE_TRANSACTION_ALREADY_REVIEWED_BY_CUSTOMER =\n  'transaction-already-reviewed-by-customer';\nexport const ERROR_CODE_TRANSACTION_ALREADY_REVIEWED_BY_PROVIDER =\n  'transaction-already-reviewed-by-provider';\nexport const ERROR_CODE_TRANSACTION_BOOKING_TIME_NOT_AVAILABLE =\n  'transaction-booking-time-not-available';\nexport const ERROR_CODE_PAYMENT_FAILED = 'transaction-payment-failed';\nexport const ERROR_CODE_CHARGE_ZERO_PAYIN = 'transaction-charge-zero-payin';\nexport const ERROR_CODE_CHARGE_ZERO_PAYOUT = 'transaction-charge-zero-payout';\nexport const ERROR_CODE_EMAIL_TAKEN = 'email-taken';\nexport const ERROR_CODE_EMAIL_NOT_FOUND = 'email-not-found';\nexport const ERROR_CODE_TOO_MANY_VERIFICATION_REQUESTS = 'email-too-many-verification-requests';\nexport const ERROR_CODE_UPLOAD_OVER_LIMIT = 'request-upload-over-limit';\nexport const ERROR_CODE_VALIDATION_INVALID_PARAMS = 'validation-invalid-params';\nexport const ERROR_CODE_VALIDATION_INVALID_VALUE = 'validation-invalid-value';\nexport const ERROR_CODE_NOT_FOUND = 'not-found';\nexport const ERROR_CODE_FORBIDDEN = 'forbidden';\nexport const ERROR_CODE_MISSING_STRIPE_ACCOUNT = 'transaction-missing-stripe-account';\n\nconst ERROR_CODES = [\n  ERROR_CODE_TRANSACTION_LISTING_NOT_FOUND,\n  ERROR_CODE_TRANSACTION_INVALID_TRANSITION,\n  ERROR_CODE_TRANSACTION_ALREADY_REVIEWED_BY_CUSTOMER,\n  ERROR_CODE_TRANSACTION_ALREADY_REVIEWED_BY_PROVIDER,\n  ERROR_CODE_PAYMENT_FAILED,\n  ERROR_CODE_CHARGE_ZERO_PAYIN,\n  ERROR_CODE_CHARGE_ZERO_PAYOUT,\n  ERROR_CODE_EMAIL_TAKEN,\n  ERROR_CODE_EMAIL_NOT_FOUND,\n  ERROR_CODE_TOO_MANY_VERIFICATION_REQUESTS,\n  ERROR_CODE_UPLOAD_OVER_LIMIT,\n  ERROR_CODE_VALIDATION_INVALID_PARAMS,\n  ERROR_CODE_VALIDATION_INVALID_VALUE,\n  ERROR_CODE_NOT_FOUND,\n  ERROR_CODE_FORBIDDEN,\n  ERROR_CODE_MISSING_STRIPE_ACCOUNT,\n];\n\n// API error\n// TODO this is likely to change soonish\npropTypes.apiError = shape({\n  id: propTypes.uuid.isRequired,\n  status: number.isRequired,\n  code: oneOf(ERROR_CODES).isRequired,\n  title: string.isRequired,\n  meta: object,\n});\n\n// Storable error prop type. (Error object should not be stored as it is.)\npropTypes.error = shape({\n  type: propTypes.value('error').isRequired,\n  name: string.isRequired,\n  message: string,\n  status: number,\n  statusText: string,\n  apiErrors: arrayOf(propTypes.apiError),\n});\n\nexport { propTypes };\n"]},"metadata":{},"sourceType":"module"}