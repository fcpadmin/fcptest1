{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/ModalMissingInformation/EmailReminder.js\";\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { isTooManyEmailVerificationRequestsError } from '../../util/errors';\nimport { IconEmailAttention, InlineTextButton, NamedLink } from '../../components';\nimport css from './ModalMissingInformation.css';\n\nconst EmailReminder = props => {\n  const className = props.className,\n        user = props.user,\n        sendVerificationEmailInProgress = props.sendVerificationEmailInProgress,\n        sendVerificationEmailError = props.sendVerificationEmailError,\n        onResendVerificationEmail = props.onResendVerificationEmail;\n  const email = user.id ? React.createElement(\"span\", {\n    className: css.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, user.attributes.email) : '';\n  const resendEmailLink = React.createElement(InlineTextButton, {\n    rootClassName: css.helperLink,\n    onClick: onResendVerificationEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ModalMissingInformation.resendEmailLinkText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n  const fixEmailLink = React.createElement(NamedLink, {\n    className: css.helperLink,\n    name: \"ContactDetailsPage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ModalMissingInformation.fixEmailLinkText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n  const resendErrorTranslationId = isTooManyEmailVerificationRequestsError(sendVerificationEmailError) ? 'ModalMissingInformation.resendFailedTooManyRequests' : 'ModalMissingInformation.resendFailed';\n  const resendErrorMessage = sendVerificationEmailError ? React.createElement(\"p\", {\n    className: css.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: resendErrorTranslationId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })) : null;\n  return React.createElement(\"div\", {\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(IconEmailAttention, {\n    className: css.modalIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: css.modalTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ModalMissingInformation.verifyEmailTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: css.modalMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ModalMissingInformation.verifyEmailText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: css.modalMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ModalMissingInformation.checkInbox\",\n    values: {\n      email\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), resendErrorMessage, React.createElement(\"div\", {\n    className: css.bottomWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: css.helperText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, sendVerificationEmailInProgress ? React.createElement(FormattedMessage, {\n    id: \"ModalMissingInformation.sendingEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }) : React.createElement(FormattedMessage, {\n    id: \"ModalMissingInformation.resendEmail\",\n    values: {\n      resendEmailLink\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: css.helperText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ModalMissingInformation.fixEmail\",\n    values: {\n      fixEmailLink\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))));\n};\n\nexport default EmailReminder;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/ModalMissingInformation/EmailReminder.js"],"names":["React","FormattedMessage","isTooManyEmailVerificationRequestsError","IconEmailAttention","InlineTextButton","NamedLink","css","EmailReminder","props","className","user","sendVerificationEmailInProgress","sendVerificationEmailError","onResendVerificationEmail","email","id","attributes","resendEmailLink","helperLink","fixEmailLink","resendErrorTranslationId","resendErrorMessage","error","modalIcon","modalTitle","modalMessage","bottomWrapper","helperText"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { isTooManyEmailVerificationRequestsError } from '../../util/errors';\nimport { IconEmailAttention, InlineTextButton, NamedLink } from '../../components';\n\nimport css from './ModalMissingInformation.css';\n\nconst EmailReminder = props => {\n  const {\n    className,\n    user,\n    sendVerificationEmailInProgress,\n    sendVerificationEmailError,\n    onResendVerificationEmail,\n  } = props;\n\n  const email = user.id ? <span className={css.email}>{user.attributes.email}</span> : '';\n\n  const resendEmailLink = (\n    <InlineTextButton rootClassName={css.helperLink} onClick={onResendVerificationEmail}>\n      <FormattedMessage id=\"ModalMissingInformation.resendEmailLinkText\" />\n    </InlineTextButton>\n  );\n\n  const fixEmailLink = (\n    <NamedLink className={css.helperLink} name=\"ContactDetailsPage\">\n      <FormattedMessage id=\"ModalMissingInformation.fixEmailLinkText\" />\n    </NamedLink>\n  );\n\n  const resendErrorTranslationId = isTooManyEmailVerificationRequestsError(\n    sendVerificationEmailError\n  )\n    ? 'ModalMissingInformation.resendFailedTooManyRequests'\n    : 'ModalMissingInformation.resendFailed';\n  const resendErrorMessage = sendVerificationEmailError ? (\n    <p className={css.error}>\n      <FormattedMessage id={resendErrorTranslationId} />\n    </p>\n  ) : null;\n\n  return (\n    <div className={className}>\n      <IconEmailAttention className={css.modalIcon} />\n      <p className={css.modalTitle}>\n        <FormattedMessage id=\"ModalMissingInformation.verifyEmailTitle\" />\n      </p>\n      <p className={css.modalMessage}>\n        <FormattedMessage id=\"ModalMissingInformation.verifyEmailText\" />\n      </p>\n      <p className={css.modalMessage}>\n        <FormattedMessage id=\"ModalMissingInformation.checkInbox\" values={{ email }} />\n      </p>\n      {resendErrorMessage}\n\n      <div className={css.bottomWrapper}>\n        <p className={css.helperText}>\n          {sendVerificationEmailInProgress ? (\n            <FormattedMessage id=\"ModalMissingInformation.sendingEmail\" />\n          ) : (\n            <FormattedMessage\n              id=\"ModalMissingInformation.resendEmail\"\n              values={{ resendEmailLink }}\n            />\n          )}\n        </p>\n        <p className={css.helperText}>\n          <FormattedMessage id=\"ModalMissingInformation.fixEmail\" values={{ fixEmailLink }} />\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default EmailReminder;\n"]},"metadata":{},"sourceType":"module"}