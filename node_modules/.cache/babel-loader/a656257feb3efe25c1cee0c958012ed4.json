{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/FilterPlain/FilterPlain.js\";\nimport React, { Component } from 'react';\nimport { bool, func, node, object, string } from 'prop-types';\nimport classNames from 'classnames';\nimport { injectIntl, intlShape, FormattedMessage } from 'react-intl';\nimport { FilterForm } from '../../forms';\nimport css from './FilterPlain.css';\n\nclass FilterPlainComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.toggleIsOpen = this.toggleIsOpen.bind(this);\n  }\n\n  handleChange(values) {\n    const _this$props = this.props,\n          onSubmit = _this$props.onSubmit,\n          urlParam = _this$props.urlParam;\n    onSubmit(urlParam, values);\n  }\n\n  handleClear() {\n    const _this$props2 = this.props,\n          onSubmit = _this$props2.onSubmit,\n          onClear = _this$props2.onClear,\n          urlParam = _this$props2.urlParam;\n\n    if (onClear) {\n      onClear();\n    }\n\n    onSubmit(urlParam, null);\n  }\n\n  toggleIsOpen() {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          rootClassName = _this$props3.rootClassName,\n          className = _this$props3.className,\n          plainClassName = _this$props3.plainClassName,\n          id = _this$props3.id,\n          label = _this$props3.label,\n          isSelected = _this$props3.isSelected,\n          children = _this$props3.children,\n          initialValues = _this$props3.initialValues,\n          keepDirtyOnReinitialize = _this$props3.keepDirtyOnReinitialize,\n          contentPlacementOffset = _this$props3.contentPlacementOffset;\n    const classes = classNames(rootClassName || css.root, className);\n    const labelClass = isSelected ? css.filterLabelSelected : css.filterLabel;\n    return React.createElement(\"div\", {\n      className: classes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: labelClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: css.labelButton,\n      onClick: this.toggleIsOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: labelClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, label)), React.createElement(\"button\", {\n      type: \"button\",\n      className: css.clearButton,\n      onClick: this.handleClear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: 'FilterPlain.clear',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      id: id,\n      className: classNames(plainClassName, css.plain, {\n        [css.isOpen]: this.state.isOpen\n      }),\n      ref: node => {\n        this.filterContent = node;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(FilterForm, {\n      id: \"\".concat(id, \".form\"),\n      liveEdit: true,\n      contentPlacementOffset: contentPlacementOffset,\n      onChange: this.handleChange,\n      initialValues: initialValues,\n      keepDirtyOnReinitialize: keepDirtyOnReinitialize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, children)));\n  }\n\n}\n\nFilterPlainComponent.defaultProps = {\n  rootClassName: null,\n  className: null,\n  plainClassName: null,\n  initialValues: null,\n  keepDirtyOnReinitialize: false\n};\nFilterPlainComponent.propTypes = {\n  rootClassName: string,\n  className: string,\n  plainClassName: string,\n  id: string.isRequired,\n  onSubmit: func.isRequired,\n  label: node.isRequired,\n  isSelected: bool.isRequired,\n  children: node.isRequired,\n  initialValues: object,\n  keepDirtyOnReinitialize: bool,\n  // form injectIntl\n  intl: intlShape.isRequired\n};\nconst FilterPlain = injectIntl(FilterPlainComponent);\nexport default FilterPlain;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/FilterPlain/FilterPlain.js"],"names":["React","Component","bool","func","node","object","string","classNames","injectIntl","intlShape","FormattedMessage","FilterForm","css","FilterPlainComponent","constructor","props","state","isOpen","handleChange","bind","handleClear","toggleIsOpen","values","onSubmit","urlParam","onClear","setState","prevState","render","rootClassName","className","plainClassName","id","label","isSelected","children","initialValues","keepDirtyOnReinitialize","contentPlacementOffset","classes","root","labelClass","filterLabelSelected","filterLabel","labelButton","clearButton","plain","filterContent","defaultProps","propTypes","isRequired","intl","FilterPlain"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { bool, func, node, object, string } from 'prop-types';\nimport classNames from 'classnames';\nimport { injectIntl, intlShape, FormattedMessage } from 'react-intl';\n\nimport { FilterForm } from '../../forms';\nimport css from './FilterPlain.css';\n\nclass FilterPlainComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: true };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.toggleIsOpen = this.toggleIsOpen.bind(this);\n  }\n\n  handleChange(values) {\n    const { onSubmit, urlParam } = this.props;\n    onSubmit(urlParam, values);\n  }\n\n  handleClear() {\n    const { onSubmit, onClear, urlParam } = this.props;\n\n    if (onClear) {\n      onClear();\n    }\n\n    onSubmit(urlParam, null);\n  }\n\n  toggleIsOpen() {\n    this.setState(prevState => ({ isOpen: !prevState.isOpen }));\n  }\n\n  render() {\n    const {\n      rootClassName,\n      className,\n      plainClassName,\n      id,\n      label,\n      isSelected,\n      children,\n      initialValues,\n      keepDirtyOnReinitialize,\n      contentPlacementOffset,\n    } = this.props;\n    const classes = classNames(rootClassName || css.root, className);\n\n    const labelClass = isSelected ? css.filterLabelSelected : css.filterLabel;\n\n    return (\n      <div className={classes}>\n        <div className={labelClass}>\n          <button type=\"button\" className={css.labelButton} onClick={this.toggleIsOpen}>\n            <span className={labelClass}>{label}</span>\n          </button>\n          <button type=\"button\" className={css.clearButton} onClick={this.handleClear}>\n            <FormattedMessage id={'FilterPlain.clear'} />\n          </button>\n        </div>\n        <div\n          id={id}\n          className={classNames(plainClassName, css.plain, { [css.isOpen]: this.state.isOpen })}\n          ref={node => {\n            this.filterContent = node;\n          }}\n        >\n          <FilterForm\n            id={`${id}.form`}\n            liveEdit\n            contentPlacementOffset={contentPlacementOffset}\n            onChange={this.handleChange}\n            initialValues={initialValues}\n            keepDirtyOnReinitialize={keepDirtyOnReinitialize}\n          >\n            {children}\n          </FilterForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nFilterPlainComponent.defaultProps = {\n  rootClassName: null,\n  className: null,\n  plainClassName: null,\n  initialValues: null,\n  keepDirtyOnReinitialize: false,\n};\n\nFilterPlainComponent.propTypes = {\n  rootClassName: string,\n  className: string,\n  plainClassName: string,\n  id: string.isRequired,\n  onSubmit: func.isRequired,\n  label: node.isRequired,\n  isSelected: bool.isRequired,\n  children: node.isRequired,\n  initialValues: object,\n  keepDirtyOnReinitialize: bool,\n\n  // form injectIntl\n  intl: intlShape.isRequired,\n};\n\nconst FilterPlain = injectIntl(FilterPlainComponent);\n\nexport default FilterPlain;\n"]},"metadata":{},"sourceType":"module"}