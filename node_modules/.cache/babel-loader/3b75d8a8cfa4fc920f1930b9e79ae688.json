{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/ListingCard/ListingCard.js\";\nimport React, { Component } from 'react';\nimport { string, func } from 'prop-types';\nimport { FormattedMessage, intlShape, injectIntl } from 'react-intl';\nimport classNames from 'classnames';\nimport { lazyLoadWithDimensions } from '../../util/contextHelpers';\nimport { LINE_ITEM_DAY, LINE_ITEM_NIGHT, propTypes } from '../../util/types';\nimport { formatMoney } from '../../util/currency';\nimport { ensureListing, ensureUser } from '../../util/data';\nimport { richText } from '../../util/richText';\nimport { createSlug } from '../../util/urlHelpers';\nimport config from '../../config';\nimport { NamedLink, ResponsiveImage } from '../../components';\nimport css from './ListingCard.css';\nconst MIN_LENGTH_FOR_LONG_WORDS = 10;\n\nconst priceData = (price, intl) => {\n  if (price && price.currency === config.currency) {\n    const formattedPrice = formatMoney(intl, price);\n    return {\n      formattedPrice,\n      priceTitle: formattedPrice\n    };\n  } else if (price) {\n    return {\n      formattedPrice: intl.formatMessage({\n        id: 'ListingCard.unsupportedPrice'\n      }, {\n        currency: price.currency\n      }),\n      priceTitle: intl.formatMessage({\n        id: 'ListingCard.unsupportedPriceTitle'\n      }, {\n        currency: price.currency\n      })\n    };\n  }\n\n  return {};\n};\n\nclass ListingImage extends Component {\n  render() {\n    return React.createElement(ResponsiveImage, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst LazyImage = lazyLoadWithDimensions(ListingImage, {\n  loadAfterInitialRendering: 3000\n});\nexport const ListingCardComponent = props => {\n  const className = props.className,\n        rootClassName = props.rootClassName,\n        intl = props.intl,\n        listing = props.listing,\n        renderSizes = props.renderSizes,\n        setActiveListing = props.setActiveListing;\n  const classes = classNames(rootClassName || css.root, className);\n  const currentListing = ensureListing(listing);\n  const id = currentListing.id.uuid;\n  const _currentListing$attri = currentListing.attributes,\n        _currentListing$attri2 = _currentListing$attri.title,\n        title = _currentListing$attri2 === void 0 ? '' : _currentListing$attri2,\n        price = _currentListing$attri.price;\n  const slug = createSlug(title);\n  const author = ensureUser(listing.author);\n  const authorName = author.attributes.profile.displayName;\n  const firstImage = currentListing.images && currentListing.images.length > 0 ? currentListing.images[0] : null;\n\n  const _priceData = priceData(price, intl),\n        formattedPrice = _priceData.formattedPrice,\n        priceTitle = _priceData.priceTitle;\n\n  const unitType = config.bookingUnitType;\n  const isNightly = unitType === LINE_ITEM_NIGHT;\n  const isDaily = unitType === LINE_ITEM_DAY;\n  const unitTranslationKey = isNightly ? 'ListingCard.perNight' : isDaily ? 'ListingCard.perDay' : 'ListingCard.perUnit';\n  return React.createElement(NamedLink, {\n    className: classes,\n    name: \"ListingPage\",\n    params: {\n      id,\n      slug\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css.threeToTwoWrapper,\n    onMouseEnter: () => setActiveListing(currentListing.id),\n    onMouseLeave: () => setActiveListing(null),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css.aspectWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(LazyImage, {\n    rootClassName: css.rootForImage,\n    alt: title,\n    image: firstImage,\n    variants: ['landscape-crop', 'landscape-crop2x'],\n    sizes: renderSizes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: css.info,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css.price,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css.priceValue,\n    title: priceTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, formattedPrice), React.createElement(\"div\", {\n    className: css.perUnit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: unitTranslationKey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: css.mainInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, richText(title, {\n    longWordMinLength: MIN_LENGTH_FOR_LONG_WORDS,\n    longWordClass: css.longWord\n  })), React.createElement(\"div\", {\n    className: css.authorInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ListingCard.hostedBy\",\n    values: {\n      authorName\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })))));\n};\nListingCardComponent.defaultProps = {\n  className: null,\n  rootClassName: null,\n  renderSizes: null,\n  setActiveListing: () => null\n};\nListingCardComponent.propTypes = {\n  className: string,\n  rootClassName: string,\n  intl: intlShape.isRequired,\n  listing: propTypes.listing.isRequired,\n  // Responsive image sizes hint\n  renderSizes: string,\n  setActiveListing: func\n};\nexport default injectIntl(ListingCardComponent);","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/ListingCard/ListingCard.js"],"names":["React","Component","string","func","FormattedMessage","intlShape","injectIntl","classNames","lazyLoadWithDimensions","LINE_ITEM_DAY","LINE_ITEM_NIGHT","propTypes","formatMoney","ensureListing","ensureUser","richText","createSlug","config","NamedLink","ResponsiveImage","css","MIN_LENGTH_FOR_LONG_WORDS","priceData","price","intl","currency","formattedPrice","priceTitle","formatMessage","id","ListingImage","render","props","LazyImage","loadAfterInitialRendering","ListingCardComponent","className","rootClassName","listing","renderSizes","setActiveListing","classes","root","currentListing","uuid","attributes","title","slug","author","authorName","profile","displayName","firstImage","images","length","unitType","bookingUnitType","isNightly","isDaily","unitTranslationKey","threeToTwoWrapper","aspectWrapper","rootForImage","info","priceValue","perUnit","mainInfo","longWordMinLength","longWordClass","longWord","authorInfo","defaultProps","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { string, func } from 'prop-types';\nimport { FormattedMessage, intlShape, injectIntl } from 'react-intl';\nimport classNames from 'classnames';\nimport { lazyLoadWithDimensions } from '../../util/contextHelpers';\nimport { LINE_ITEM_DAY, LINE_ITEM_NIGHT, propTypes } from '../../util/types';\nimport { formatMoney } from '../../util/currency';\nimport { ensureListing, ensureUser } from '../../util/data';\nimport { richText } from '../../util/richText';\nimport { createSlug } from '../../util/urlHelpers';\nimport config from '../../config';\nimport { NamedLink, ResponsiveImage } from '../../components';\n\nimport css from './ListingCard.css';\n\nconst MIN_LENGTH_FOR_LONG_WORDS = 10;\n\nconst priceData = (price, intl) => {\n  if (price && price.currency === config.currency) {\n    const formattedPrice = formatMoney(intl, price);\n    return { formattedPrice, priceTitle: formattedPrice };\n  } else if (price) {\n    return {\n      formattedPrice: intl.formatMessage(\n        { id: 'ListingCard.unsupportedPrice' },\n        { currency: price.currency }\n      ),\n      priceTitle: intl.formatMessage(\n        { id: 'ListingCard.unsupportedPriceTitle' },\n        { currency: price.currency }\n      ),\n    };\n  }\n  return {};\n};\n\nclass ListingImage extends Component {\n  render() {\n    return <ResponsiveImage {...this.props} />;\n  }\n}\nconst LazyImage = lazyLoadWithDimensions(ListingImage, { loadAfterInitialRendering: 3000 });\n\nexport const ListingCardComponent = props => {\n  const { className, rootClassName, intl, listing, renderSizes, setActiveListing } = props;\n  const classes = classNames(rootClassName || css.root, className);\n  const currentListing = ensureListing(listing);\n  const id = currentListing.id.uuid;\n  const { title = '', price } = currentListing.attributes;\n  const slug = createSlug(title);\n  const author = ensureUser(listing.author);\n  const authorName = author.attributes.profile.displayName;\n  const firstImage =\n    currentListing.images && currentListing.images.length > 0 ? currentListing.images[0] : null;\n\n  const { formattedPrice, priceTitle } = priceData(price, intl);\n\n  const unitType = config.bookingUnitType;\n  const isNightly = unitType === LINE_ITEM_NIGHT;\n  const isDaily = unitType === LINE_ITEM_DAY;\n\n  const unitTranslationKey = isNightly\n    ? 'ListingCard.perNight'\n    : isDaily\n    ? 'ListingCard.perDay'\n    : 'ListingCard.perUnit';\n\n  return (\n    <NamedLink className={classes} name=\"ListingPage\" params={{ id, slug }}>\n      <div\n        className={css.threeToTwoWrapper}\n        onMouseEnter={() => setActiveListing(currentListing.id)}\n        onMouseLeave={() => setActiveListing(null)}\n      >\n        <div className={css.aspectWrapper}>\n          <LazyImage\n            rootClassName={css.rootForImage}\n            alt={title}\n            image={firstImage}\n            variants={['landscape-crop', 'landscape-crop2x']}\n            sizes={renderSizes}\n          />\n        </div>\n      </div>\n      <div className={css.info}>\n        <div className={css.price}>\n          <div className={css.priceValue} title={priceTitle}>\n            {formattedPrice}\n          </div>\n          <div className={css.perUnit}>\n            <FormattedMessage id={unitTranslationKey} />\n          </div>\n        </div>\n        <div className={css.mainInfo}>\n          <div className={css.title}>\n            {richText(title, {\n              longWordMinLength: MIN_LENGTH_FOR_LONG_WORDS,\n              longWordClass: css.longWord,\n            })}\n          </div>\n          <div className={css.authorInfo}>\n            <FormattedMessage id=\"ListingCard.hostedBy\" values={{ authorName }} />\n          </div>\n        </div>\n      </div>\n    </NamedLink>\n  );\n};\n\nListingCardComponent.defaultProps = {\n  className: null,\n  rootClassName: null,\n  renderSizes: null,\n  setActiveListing: () => null,\n};\n\nListingCardComponent.propTypes = {\n  className: string,\n  rootClassName: string,\n  intl: intlShape.isRequired,\n  listing: propTypes.listing.isRequired,\n\n  // Responsive image sizes hint\n  renderSizes: string,\n\n  setActiveListing: func,\n};\n\nexport default injectIntl(ListingCardComponent);\n"]},"metadata":{},"sourceType":"module"}