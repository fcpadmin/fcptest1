{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/EditListingFeaturesPanel/EditListingFeaturesPanel.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport { LISTING_STATE_DRAFT } from '../../util/types';\nimport { ensureListing } from '../../util/data';\nimport { EditListingFeaturesForm } from '../../forms';\nimport { ListingLink } from '../../components';\nimport css from './EditListingFeaturesPanel.css';\nconst FEATURES_NAME = 'amenities';\n\nconst EditListingFeaturesPanel = props => {\n  const rootClassName = props.rootClassName,\n        className = props.className,\n        listing = props.listing,\n        onSubmit = props.onSubmit,\n        onChange = props.onChange,\n        submitButtonText = props.submitButtonText,\n        panelUpdated = props.panelUpdated,\n        updateInProgress = props.updateInProgress,\n        errors = props.errors;\n  const classes = classNames(rootClassName || css.root, className);\n  const currentListing = ensureListing(listing);\n  const publicData = currentListing.attributes.publicData;\n  const isPublished = currentListing.id && currentListing.attributes.state !== LISTING_STATE_DRAFT;\n  const panelTitle = isPublished ? React.createElement(FormattedMessage, {\n    id: \"EditListingFeaturesPanel.title\",\n    values: {\n      listingTitle: React.createElement(ListingLink, {\n        listing: listing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }) : React.createElement(FormattedMessage, {\n    id: \"EditListingFeaturesPanel.createListingTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  });\n  const amenities = publicData && publicData.amenities;\n  const initialValues = {\n    amenities\n  };\n  return React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: css.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, panelTitle), React.createElement(EditListingFeaturesForm, {\n    className: css.form,\n    name: FEATURES_NAME,\n    initialValues: initialValues,\n    onSubmit: values => {\n      const _values$amenities = values.amenities,\n            amenities = _values$amenities === void 0 ? [] : _values$amenities;\n      const updatedValues = {\n        publicData: {\n          amenities\n        }\n      };\n      onSubmit(updatedValues);\n    },\n    onChange: onChange,\n    saveActionMsg: submitButtonText,\n    updated: panelUpdated,\n    updateInProgress: updateInProgress,\n    fetchErrors: errors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }));\n};\n\nEditListingFeaturesPanel.defaultProps = {\n  rootClassName: null,\n  className: null,\n  listing: null\n};\nconst bool = PropTypes.bool,\n      func = PropTypes.func,\n      object = PropTypes.object,\n      string = PropTypes.string;\nEditListingFeaturesPanel.propTypes = {\n  rootClassName: string,\n  className: string,\n  // We cannot use propTypes.listing since the listing might be a draft.\n  listing: object,\n  onSubmit: func.isRequired,\n  onChange: func.isRequired,\n  submitButtonText: string.isRequired,\n  panelUpdated: bool.isRequired,\n  updateInProgress: bool.isRequired,\n  errors: object.isRequired\n};\nexport default EditListingFeaturesPanel;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/EditListingFeaturesPanel/EditListingFeaturesPanel.js"],"names":["React","PropTypes","classNames","FormattedMessage","LISTING_STATE_DRAFT","ensureListing","EditListingFeaturesForm","ListingLink","css","FEATURES_NAME","EditListingFeaturesPanel","props","rootClassName","className","listing","onSubmit","onChange","submitButtonText","panelUpdated","updateInProgress","errors","classes","root","currentListing","publicData","attributes","isPublished","id","state","panelTitle","listingTitle","amenities","initialValues","title","form","values","updatedValues","defaultProps","bool","func","object","string","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n\nimport { LISTING_STATE_DRAFT } from '../../util/types';\nimport { ensureListing } from '../../util/data';\nimport { EditListingFeaturesForm } from '../../forms';\nimport { ListingLink } from '../../components';\n\nimport css from './EditListingFeaturesPanel.css';\n\nconst FEATURES_NAME = 'amenities';\n\nconst EditListingFeaturesPanel = props => {\n  const {\n    rootClassName,\n    className,\n    listing,\n    onSubmit,\n    onChange,\n    submitButtonText,\n    panelUpdated,\n    updateInProgress,\n    errors,\n  } = props;\n\n  const classes = classNames(rootClassName || css.root, className);\n  const currentListing = ensureListing(listing);\n  const { publicData } = currentListing.attributes;\n\n  const isPublished = currentListing.id && currentListing.attributes.state !== LISTING_STATE_DRAFT;\n  const panelTitle = isPublished ? (\n    <FormattedMessage\n      id=\"EditListingFeaturesPanel.title\"\n      values={{ listingTitle: <ListingLink listing={listing} /> }}\n    />\n  ) : (\n    <FormattedMessage id=\"EditListingFeaturesPanel.createListingTitle\" />\n  );\n\n  const amenities = publicData && publicData.amenities;\n  const initialValues = { amenities };\n\n  return (\n    <div className={classes}>\n      <h1 className={css.title}>{panelTitle}</h1>\n      <EditListingFeaturesForm\n        className={css.form}\n        name={FEATURES_NAME}\n        initialValues={initialValues}\n        onSubmit={values => {\n          const { amenities = [] } = values;\n\n          const updatedValues = {\n            publicData: { amenities },\n          };\n          onSubmit(updatedValues);\n        }}\n        onChange={onChange}\n        saveActionMsg={submitButtonText}\n        updated={panelUpdated}\n        updateInProgress={updateInProgress}\n        fetchErrors={errors}\n      />\n    </div>\n  );\n};\n\nEditListingFeaturesPanel.defaultProps = {\n  rootClassName: null,\n  className: null,\n  listing: null,\n};\n\nconst { bool, func, object, string } = PropTypes;\n\nEditListingFeaturesPanel.propTypes = {\n  rootClassName: string,\n  className: string,\n\n  // We cannot use propTypes.listing since the listing might be a draft.\n  listing: object,\n\n  onSubmit: func.isRequired,\n  onChange: func.isRequired,\n  submitButtonText: string.isRequired,\n  panelUpdated: bool.isRequired,\n  updateInProgress: bool.isRequired,\n  errors: object.isRequired,\n};\n\nexport default EditListingFeaturesPanel;\n"]},"metadata":{},"sourceType":"module"}