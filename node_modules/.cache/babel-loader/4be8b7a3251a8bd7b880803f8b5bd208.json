{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/FieldTextInput/FieldTextInput.example.js\";\n\n/* eslint-disable no-console */\nimport React from 'react';\nimport { Form as FinalForm, FormSpy } from 'react-final-form';\nimport * as validators from '../../util/validators';\nimport { Button } from '../../components';\nimport FieldTextInput from './FieldTextInput';\nimport css from './FieldTextInput.example.css';\n\nconst FormComponent = props => React.createElement(FinalForm, Object.assign({}, props, {\n  render: fieldRenderProps => {\n    const handleSubmit = fieldRenderProps.handleSubmit,\n          onChange = fieldRenderProps.onChange,\n          invalid = fieldRenderProps.invalid,\n          pristine = fieldRenderProps.pristine,\n          submitting = fieldRenderProps.submitting,\n          formName = fieldRenderProps.formName;\n    const required = validators.required('This field is required');\n    const submitDisabled = invalid || pristine || submitting;\n    return React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleSubmit(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(FormSpy, {\n      onChange: onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(FieldTextInput, {\n      className: css.field,\n      type: \"text\",\n      id: \"\".concat(formName, \".input1\"),\n      name: \"input1\",\n      label: \"Input that requires a value:\",\n      validate: required,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(FieldTextInput, {\n      className: css.field,\n      type: \"text\",\n      id: \"\".concat(formName, \".input2\"),\n      name: \"input2\",\n      label: \"Input that does not require a value:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(FieldTextInput, {\n      className: css.field,\n      type: \"text\",\n      name: \"input3\",\n      placeholder: \"Input without label...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(FieldTextInput, {\n      className: css.field,\n      type: \"textarea\",\n      id: \"\".concat(formName, \".textarea1\"),\n      name: \"textarea1\",\n      label: \"Textarea that requires a value:\",\n      validate: required,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(FieldTextInput, {\n      className: css.field,\n      type: \"textarea\",\n      id: \"\".concat(formName, \".textarea2\"),\n      name: \"textarea2\",\n      label: \"Textarea that does not require a value:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(FieldTextInput, {\n      className: css.field,\n      type: \"textarea\",\n      name: \"textarea3\",\n      placeholder: \"Textarea without label...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: css.submit,\n      type: \"submit\",\n      disabled: submitDisabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Submit\"));\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}));\n\nexport const Inputs = {\n  component: FormComponent,\n  props: {\n    formName: 'Inputs',\n    onChange: formState => {\n      if (Object.keys(formState.values).length > 0) {\n        console.log('form values changed to:', formState.values);\n      }\n    },\n    onSubmit: values => {\n      console.log('submit values:', values);\n    }\n  },\n  group: 'inputs'\n};","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/FieldTextInput/FieldTextInput.example.js"],"names":["React","Form","FinalForm","FormSpy","validators","Button","FieldTextInput","css","FormComponent","props","fieldRenderProps","handleSubmit","onChange","invalid","pristine","submitting","formName","required","submitDisabled","e","preventDefault","field","submit","Inputs","component","formState","Object","keys","values","length","console","log","onSubmit","group"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport { Form as FinalForm, FormSpy } from 'react-final-form';\nimport * as validators from '../../util/validators';\nimport { Button } from '../../components';\nimport FieldTextInput from './FieldTextInput';\n\nimport css from './FieldTextInput.example.css';\n\nconst FormComponent = props => (\n  <FinalForm\n    {...props}\n    render={fieldRenderProps => {\n      const { handleSubmit, onChange, invalid, pristine, submitting, formName } = fieldRenderProps;\n      const required = validators.required('This field is required');\n      const submitDisabled = invalid || pristine || submitting;\n      return (\n        <form\n          onSubmit={e => {\n            e.preventDefault();\n            handleSubmit(e);\n          }}\n        >\n          <FormSpy onChange={onChange} />\n          <FieldTextInput\n            className={css.field}\n            type=\"text\"\n            id={`${formName}.input1`}\n            name=\"input1\"\n            label=\"Input that requires a value:\"\n            validate={required}\n          />\n          <FieldTextInput\n            className={css.field}\n            type=\"text\"\n            id={`${formName}.input2`}\n            name=\"input2\"\n            label=\"Input that does not require a value:\"\n          />\n          <FieldTextInput\n            className={css.field}\n            type=\"text\"\n            name=\"input3\"\n            placeholder=\"Input without label...\"\n          />\n          <FieldTextInput\n            className={css.field}\n            type=\"textarea\"\n            id={`${formName}.textarea1`}\n            name=\"textarea1\"\n            label=\"Textarea that requires a value:\"\n            validate={required}\n          />\n          <FieldTextInput\n            className={css.field}\n            type=\"textarea\"\n            id={`${formName}.textarea2`}\n            name=\"textarea2\"\n            label=\"Textarea that does not require a value:\"\n          />\n          <FieldTextInput\n            className={css.field}\n            type=\"textarea\"\n            name=\"textarea3\"\n            placeholder=\"Textarea without label...\"\n          />\n          <Button className={css.submit} type=\"submit\" disabled={submitDisabled}>\n            Submit\n          </Button>\n        </form>\n      );\n    }}\n  />\n);\n\nexport const Inputs = {\n  component: FormComponent,\n  props: {\n    formName: 'Inputs',\n    onChange: formState => {\n      if (Object.keys(formState.values).length > 0) {\n        console.log('form values changed to:', formState.values);\n      }\n    },\n    onSubmit: values => {\n      console.log('submit values:', values);\n    },\n  },\n  group: 'inputs',\n};\n"]},"metadata":{},"sourceType":"module"}