{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/forms/EditListingPoliciesForm/EditListingPoliciesForm.js\";\nimport React from 'react';\nimport { bool, func, shape, string } from 'prop-types';\nimport { compose } from 'redux';\nimport { Form as FinalForm } from 'react-final-form';\nimport { intlShape, injectIntl, FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport { propTypes } from '../../util/types';\nimport { Form, Button, FieldTextInput } from '../../components';\nimport css from './EditListingPoliciesForm.css';\nexport const EditListingPoliciesFormComponent = props => React.createElement(FinalForm, Object.assign({}, props, {\n  render: fieldRenderProps => {\n    const className = fieldRenderProps.className,\n          disabled = fieldRenderProps.disabled,\n          handleSubmit = fieldRenderProps.handleSubmit,\n          intl = fieldRenderProps.intl,\n          invalid = fieldRenderProps.invalid,\n          pristine = fieldRenderProps.pristine,\n          saveActionMsg = fieldRenderProps.saveActionMsg,\n          updated = fieldRenderProps.updated,\n          updateInProgress = fieldRenderProps.updateInProgress,\n          fetchErrors = fieldRenderProps.fetchErrors;\n    const rulesLabelMessage = intl.formatMessage({\n      id: 'EditListingPoliciesForm.rulesLabel'\n    });\n    const rulesPlaceholderMessage = intl.formatMessage({\n      id: 'EditListingPoliciesForm.rulesPlaceholder'\n    });\n\n    const _ref = fetchErrors || {},\n          updateListingError = _ref.updateListingError,\n          showListingsError = _ref.showListingsError;\n\n    const errorMessage = updateListingError ? React.createElement(\"p\", {\n      className: css.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"EditListingPoliciesForm.updateFailed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })) : null;\n    const errorMessageShowListing = showListingsError ? React.createElement(\"p\", {\n      className: css.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"EditListingPoliciesForm.showListingFailed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })) : null;\n    const classes = classNames(css.root, className);\n    const submitReady = updated && pristine;\n    const submitInProgress = updateInProgress;\n    const submitDisabled = invalid || disabled || submitInProgress;\n    return React.createElement(Form, {\n      className: classes,\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, errorMessage, errorMessageShowListing, React.createElement(FieldTextInput, {\n      id: \"rules\",\n      name: \"rules\",\n      className: css.policy,\n      type: \"textarea\",\n      label: rulesLabelMessage,\n      placeholder: rulesPlaceholderMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: css.submitButton,\n      type: \"submit\",\n      inProgress: submitInProgress,\n      disabled: submitDisabled,\n      ready: submitReady,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, saveActionMsg));\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}));\nEditListingPoliciesFormComponent.defaultProps = {\n  selectedPlace: null,\n  updateError: null\n};\nEditListingPoliciesFormComponent.propTypes = {\n  intl: intlShape.isRequired,\n  onSubmit: func.isRequired,\n  saveActionMsg: string.isRequired,\n  selectedPlace: propTypes.place,\n  updated: bool.isRequired,\n  updateInProgress: bool.isRequired,\n  fetchErrors: shape({\n    showListingsError: propTypes.error,\n    updateListingError: propTypes.error\n  })\n};\nexport default compose(injectIntl)(EditListingPoliciesFormComponent);","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/forms/EditListingPoliciesForm/EditListingPoliciesForm.js"],"names":["React","bool","func","shape","string","compose","Form","FinalForm","intlShape","injectIntl","FormattedMessage","classNames","propTypes","Button","FieldTextInput","css","EditListingPoliciesFormComponent","props","fieldRenderProps","className","disabled","handleSubmit","intl","invalid","pristine","saveActionMsg","updated","updateInProgress","fetchErrors","rulesLabelMessage","formatMessage","id","rulesPlaceholderMessage","updateListingError","showListingsError","errorMessage","error","errorMessageShowListing","classes","root","submitReady","submitInProgress","submitDisabled","policy","submitButton","defaultProps","selectedPlace","updateError","isRequired","onSubmit","place"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,QAA0C,YAA1C;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,IAAI,IAAIC,SAAjB,QAAkC,kBAAlC;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,gBAAhC,QAAwD,YAAxD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASN,IAAT,EAAeO,MAAf,EAAuBC,cAAvB,QAA6C,kBAA7C;AAEA,OAAOC,GAAP,MAAgB,+BAAhB;AAEA,OAAO,MAAMC,gCAAgC,GAAGC,KAAK,IACnD,oBAAC,SAAD,oBACMA,KADN;AAEE,EAAA,MAAM,EAAEC,gBAAgB,IAAI;AAAA,UAExBC,SAFwB,GAYtBD,gBAZsB,CAExBC,SAFwB;AAAA,UAGxBC,QAHwB,GAYtBF,gBAZsB,CAGxBE,QAHwB;AAAA,UAIxBC,YAJwB,GAYtBH,gBAZsB,CAIxBG,YAJwB;AAAA,UAKxBC,IALwB,GAYtBJ,gBAZsB,CAKxBI,IALwB;AAAA,UAMxBC,OANwB,GAYtBL,gBAZsB,CAMxBK,OANwB;AAAA,UAOxBC,QAPwB,GAYtBN,gBAZsB,CAOxBM,QAPwB;AAAA,UAQxBC,aARwB,GAYtBP,gBAZsB,CAQxBO,aARwB;AAAA,UASxBC,OATwB,GAYtBR,gBAZsB,CASxBQ,OATwB;AAAA,UAUxBC,gBAVwB,GAYtBT,gBAZsB,CAUxBS,gBAVwB;AAAA,UAWxBC,WAXwB,GAYtBV,gBAZsB,CAWxBU,WAXwB;AAc1B,UAAMC,iBAAiB,GAAGP,IAAI,CAACQ,aAAL,CAAmB;AAC3CC,MAAAA,EAAE,EAAE;AADuC,KAAnB,CAA1B;AAGA,UAAMC,uBAAuB,GAAGV,IAAI,CAACQ,aAAL,CAAmB;AACjDC,MAAAA,EAAE,EAAE;AAD6C,KAAnB,CAAhC;;AAjB0B,iBAqBwBH,WAAW,IAAI,EArBvC;AAAA,UAqBlBK,kBArBkB,QAqBlBA,kBArBkB;AAAA,UAqBEC,iBArBF,QAqBEA,iBArBF;;AAsB1B,UAAMC,YAAY,GAAGF,kBAAkB,GACrC;AAAG,MAAA,SAAS,EAAElB,GAAG,CAACqB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,sCAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADqC,GAInC,IAJJ;AAKA,UAAMC,uBAAuB,GAAGH,iBAAiB,GAC/C;AAAG,MAAA,SAAS,EAAEnB,GAAG,CAACqB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,2CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAD+C,GAI7C,IAJJ;AAMA,UAAME,OAAO,GAAG3B,UAAU,CAACI,GAAG,CAACwB,IAAL,EAAWpB,SAAX,CAA1B;AACA,UAAMqB,WAAW,GAAGd,OAAO,IAAIF,QAA/B;AACA,UAAMiB,gBAAgB,GAAGd,gBAAzB;AACA,UAAMe,cAAc,GAAGnB,OAAO,IAAIH,QAAX,IAAuBqB,gBAA9C;AAEA,WACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAEH,OAAjB;AAA0B,MAAA,QAAQ,EAAEjB,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGc,YADH,EAEGE,uBAFH,EAIE,oBAAC,cAAD;AACE,MAAA,EAAE,EAAC,OADL;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,SAAS,EAAEtB,GAAG,CAAC4B,MAHjB;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,KAAK,EAAEd,iBALT;AAME,MAAA,WAAW,EAAEG,uBANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAaE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAEjB,GAAG,CAAC6B,YADjB;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,UAAU,EAAEH,gBAHd;AAIE,MAAA,QAAQ,EAAEC,cAJZ;AAKE,MAAA,KAAK,EAAEF,WALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGf,aAPH,CAbF,CADF;AAyBD,GAjEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAsEPT,gCAAgC,CAAC6B,YAAjC,GAAgD;AAC9CC,EAAAA,aAAa,EAAE,IAD+B;AAE9CC,EAAAA,WAAW,EAAE;AAFiC,CAAhD;AAKA/B,gCAAgC,CAACJ,SAAjC,GAA6C;AAC3CU,EAAAA,IAAI,EAAEd,SAAS,CAACwC,UAD2B;AAE3CC,EAAAA,QAAQ,EAAE/C,IAAI,CAAC8C,UAF4B;AAG3CvB,EAAAA,aAAa,EAAErB,MAAM,CAAC4C,UAHqB;AAI3CF,EAAAA,aAAa,EAAElC,SAAS,CAACsC,KAJkB;AAK3CxB,EAAAA,OAAO,EAAEzB,IAAI,CAAC+C,UAL6B;AAM3CrB,EAAAA,gBAAgB,EAAE1B,IAAI,CAAC+C,UANoB;AAO3CpB,EAAAA,WAAW,EAAEzB,KAAK,CAAC;AACjB+B,IAAAA,iBAAiB,EAAEtB,SAAS,CAACwB,KADZ;AAEjBH,IAAAA,kBAAkB,EAAErB,SAAS,CAACwB;AAFb,GAAD;AAPyB,CAA7C;AAaA,eAAe/B,OAAO,CAACI,UAAD,CAAP,CAAoBO,gCAApB,CAAf","sourcesContent":["import React from 'react';\nimport { bool, func, shape, string } from 'prop-types';\nimport { compose } from 'redux';\nimport { Form as FinalForm } from 'react-final-form';\nimport { intlShape, injectIntl, FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport { propTypes } from '../../util/types';\nimport { Form, Button, FieldTextInput } from '../../components';\n\nimport css from './EditListingPoliciesForm.css';\n\nexport const EditListingPoliciesFormComponent = props => (\n  <FinalForm\n    {...props}\n    render={fieldRenderProps => {\n      const {\n        className,\n        disabled,\n        handleSubmit,\n        intl,\n        invalid,\n        pristine,\n        saveActionMsg,\n        updated,\n        updateInProgress,\n        fetchErrors,\n      } = fieldRenderProps;\n\n      const rulesLabelMessage = intl.formatMessage({\n        id: 'EditListingPoliciesForm.rulesLabel',\n      });\n      const rulesPlaceholderMessage = intl.formatMessage({\n        id: 'EditListingPoliciesForm.rulesPlaceholder',\n      });\n\n      const { updateListingError, showListingsError } = fetchErrors || {};\n      const errorMessage = updateListingError ? (\n        <p className={css.error}>\n          <FormattedMessage id=\"EditListingPoliciesForm.updateFailed\" />\n        </p>\n      ) : null;\n      const errorMessageShowListing = showListingsError ? (\n        <p className={css.error}>\n          <FormattedMessage id=\"EditListingPoliciesForm.showListingFailed\" />\n        </p>\n      ) : null;\n\n      const classes = classNames(css.root, className);\n      const submitReady = updated && pristine;\n      const submitInProgress = updateInProgress;\n      const submitDisabled = invalid || disabled || submitInProgress;\n\n      return (\n        <Form className={classes} onSubmit={handleSubmit}>\n          {errorMessage}\n          {errorMessageShowListing}\n\n          <FieldTextInput\n            id=\"rules\"\n            name=\"rules\"\n            className={css.policy}\n            type=\"textarea\"\n            label={rulesLabelMessage}\n            placeholder={rulesPlaceholderMessage}\n          />\n\n          <Button\n            className={css.submitButton}\n            type=\"submit\"\n            inProgress={submitInProgress}\n            disabled={submitDisabled}\n            ready={submitReady}\n          >\n            {saveActionMsg}\n          </Button>\n        </Form>\n      );\n    }}\n  />\n);\n\nEditListingPoliciesFormComponent.defaultProps = {\n  selectedPlace: null,\n  updateError: null,\n};\n\nEditListingPoliciesFormComponent.propTypes = {\n  intl: intlShape.isRequired,\n  onSubmit: func.isRequired,\n  saveActionMsg: string.isRequired,\n  selectedPlace: propTypes.place,\n  updated: bool.isRequired,\n  updateInProgress: bool.isRequired,\n  fetchErrors: shape({\n    showListingsError: propTypes.error,\n    updateListingError: propTypes.error,\n  }),\n};\n\nexport default compose(injectIntl)(EditListingPoliciesFormComponent);\n"]},"metadata":{},"sourceType":"module"}