{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/EditListingAvailabilityPanel/EditListingAvailabilityPanel.js\";\nimport React from 'react';\nimport { bool, func, object, shape, string } from 'prop-types';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport { ensureOwnListing } from '../../util/data';\nimport { LISTING_STATE_DRAFT } from '../../util/types';\nimport { ListingLink } from '../../components';\nimport { EditListingAvailabilityForm } from '../../forms';\nimport css from './EditListingAvailabilityPanel.css';\n\nconst EditListingAvailabilityPanel = props => {\n  const className = props.className,\n        rootClassName = props.rootClassName,\n        listing = props.listing,\n        availability = props.availability,\n        onSubmit = props.onSubmit,\n        onChange = props.onChange,\n        submitButtonText = props.submitButtonText,\n        panelUpdated = props.panelUpdated,\n        updateInProgress = props.updateInProgress,\n        errors = props.errors;\n  const classes = classNames(rootClassName || css.root, className);\n  const currentListing = ensureOwnListing(listing);\n  const isPublished = currentListing.id && currentListing.attributes.state !== LISTING_STATE_DRAFT;\n  const defaultAvailabilityPlan = {\n    type: 'availability-plan/day',\n    entries: [{\n      dayOfWeek: 'mon',\n      seats: 1\n    }, {\n      dayOfWeek: 'tue',\n      seats: 1\n    }, {\n      dayOfWeek: 'wed',\n      seats: 1\n    }, {\n      dayOfWeek: 'thu',\n      seats: 1\n    }, {\n      dayOfWeek: 'fri',\n      seats: 1\n    }, {\n      dayOfWeek: 'sat',\n      seats: 1\n    }, {\n      dayOfWeek: 'sun',\n      seats: 1\n    }]\n  };\n  const availabilityPlan = currentListing.attributes.availabilityPlan || defaultAvailabilityPlan;\n  return React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: css.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, isPublished ? React.createElement(FormattedMessage, {\n    id: \"EditListingAvailabilityPanel.title\",\n    values: {\n      listingTitle: React.createElement(ListingLink, {\n        listing: listing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }) : React.createElement(FormattedMessage, {\n    id: \"EditListingAvailabilityPanel.createListingTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(EditListingAvailabilityForm, {\n    className: css.form,\n    listingId: currentListing.id,\n    initialValues: {\n      availabilityPlan\n    },\n    availability: availability,\n    availabilityPlan: availabilityPlan,\n    onSubmit: () => {\n      // We save the default availability plan\n      // I.e. this listing is available every night.\n      // Exceptions are handled with live edit through a calendar,\n      // which is visible on this panel.\n      onSubmit({\n        availabilityPlan\n      });\n    },\n    onChange: onChange,\n    saveActionMsg: submitButtonText,\n    updated: panelUpdated,\n    updateError: errors.updateListingError,\n    updateInProgress: updateInProgress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }));\n};\n\nEditListingAvailabilityPanel.defaultProps = {\n  className: null,\n  rootClassName: null,\n  listing: null\n};\nEditListingAvailabilityPanel.propTypes = {\n  className: string,\n  rootClassName: string,\n  // We cannot use propTypes.listing since the listing might be a draft.\n  listing: object,\n  availability: shape({\n    calendar: object.isRequired,\n    onFetchAvailabilityExceptions: func.isRequired,\n    onCreateAvailabilityException: func.isRequired,\n    onDeleteAvailabilityException: func.isRequired\n  }).isRequired,\n  onSubmit: func.isRequired,\n  onChange: func.isRequired,\n  submitButtonText: string.isRequired,\n  panelUpdated: bool.isRequired,\n  updateInProgress: bool.isRequired,\n  errors: object.isRequired\n};\nexport default EditListingAvailabilityPanel;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/EditListingAvailabilityPanel/EditListingAvailabilityPanel.js"],"names":["React","bool","func","object","shape","string","classNames","FormattedMessage","ensureOwnListing","LISTING_STATE_DRAFT","ListingLink","EditListingAvailabilityForm","css","EditListingAvailabilityPanel","props","className","rootClassName","listing","availability","onSubmit","onChange","submitButtonText","panelUpdated","updateInProgress","errors","classes","root","currentListing","isPublished","id","attributes","state","defaultAvailabilityPlan","type","entries","dayOfWeek","seats","availabilityPlan","title","listingTitle","form","updateListingError","defaultProps","propTypes","calendar","isRequired","onFetchAvailabilityExceptions","onCreateAvailabilityException","onDeleteAvailabilityException"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { bool, func, object, shape, string } from 'prop-types';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport { ensureOwnListing } from '../../util/data';\nimport { LISTING_STATE_DRAFT } from '../../util/types';\nimport { ListingLink } from '../../components';\nimport { EditListingAvailabilityForm } from '../../forms';\n\nimport css from './EditListingAvailabilityPanel.css';\n\nconst EditListingAvailabilityPanel = props => {\n  const {\n    className,\n    rootClassName,\n    listing,\n    availability,\n    onSubmit,\n    onChange,\n    submitButtonText,\n    panelUpdated,\n    updateInProgress,\n    errors,\n  } = props;\n\n  const classes = classNames(rootClassName || css.root, className);\n  const currentListing = ensureOwnListing(listing);\n  const isPublished = currentListing.id && currentListing.attributes.state !== LISTING_STATE_DRAFT;\n  const defaultAvailabilityPlan = {\n    type: 'availability-plan/day',\n    entries: [\n      { dayOfWeek: 'mon', seats: 1 },\n      { dayOfWeek: 'tue', seats: 1 },\n      { dayOfWeek: 'wed', seats: 1 },\n      { dayOfWeek: 'thu', seats: 1 },\n      { dayOfWeek: 'fri', seats: 1 },\n      { dayOfWeek: 'sat', seats: 1 },\n      { dayOfWeek: 'sun', seats: 1 },\n    ],\n  };\n  const availabilityPlan = currentListing.attributes.availabilityPlan || defaultAvailabilityPlan;\n\n  return (\n    <div className={classes}>\n      <h1 className={css.title}>\n        {isPublished ? (\n          <FormattedMessage\n            id=\"EditListingAvailabilityPanel.title\"\n            values={{ listingTitle: <ListingLink listing={listing} /> }}\n          />\n        ) : (\n          <FormattedMessage id=\"EditListingAvailabilityPanel.createListingTitle\" />\n        )}\n      </h1>\n      <EditListingAvailabilityForm\n        className={css.form}\n        listingId={currentListing.id}\n        initialValues={{ availabilityPlan }}\n        availability={availability}\n        availabilityPlan={availabilityPlan}\n        onSubmit={() => {\n          // We save the default availability plan\n          // I.e. this listing is available every night.\n          // Exceptions are handled with live edit through a calendar,\n          // which is visible on this panel.\n          onSubmit({ availabilityPlan });\n        }}\n        onChange={onChange}\n        saveActionMsg={submitButtonText}\n        updated={panelUpdated}\n        updateError={errors.updateListingError}\n        updateInProgress={updateInProgress}\n      />\n    </div>\n  );\n};\n\nEditListingAvailabilityPanel.defaultProps = {\n  className: null,\n  rootClassName: null,\n  listing: null,\n};\n\nEditListingAvailabilityPanel.propTypes = {\n  className: string,\n  rootClassName: string,\n\n  // We cannot use propTypes.listing since the listing might be a draft.\n  listing: object,\n\n  availability: shape({\n    calendar: object.isRequired,\n    onFetchAvailabilityExceptions: func.isRequired,\n    onCreateAvailabilityException: func.isRequired,\n    onDeleteAvailabilityException: func.isRequired,\n  }).isRequired,\n  onSubmit: func.isRequired,\n  onChange: func.isRequired,\n  submitButtonText: string.isRequired,\n  panelUpdated: bool.isRequired,\n  updateInProgress: bool.isRequired,\n  errors: object.isRequired,\n};\n\nexport default EditListingAvailabilityPanel;\n"]},"metadata":{},"sourceType":"module"}