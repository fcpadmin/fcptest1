{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/forms/PayoutDetailsForm/PayoutDetailsIndividualAccount.js\";\nimport React from 'react';\nimport { bool, object, shape } from 'prop-types';\nimport { compose } from 'redux';\nimport { FormattedMessage, injectIntl, intlShape } from 'react-intl';\nimport config from '../../config';\nimport routeConfiguration from '../../routeConfiguration';\nimport { propTypes } from '../../util/types';\nimport { createResourceLocatorString } from '../../util/routes';\nimport { stripeCountryConfigs } from './PayoutDetailsForm';\nimport PayoutDetailsAddress from './PayoutDetailsAddress';\nimport PayoutDetailsBankDetails from './PayoutDetailsBankDetails';\nimport PayoutDetailsPersonalDetails from './PayoutDetailsPersonalDetails';\nimport PayoutDetailsBusinessProfile from './PayoutDetailsBusinessProfile';\nimport css from './PayoutDetailsForm.css';\n\nconst PayoutDetailsIndividualAccountComponent = props => {\n  const fieldRenderProps = props.fieldRenderProps,\n        currentUserId = props.currentUserId,\n        intl = props.intl,\n        appConfig = props.appConfig;\n  const disabled = fieldRenderProps.disabled,\n        form = fieldRenderProps.form,\n        values = fieldRenderProps.values;\n  const country = values.country;\n  const individualConfig = country && stripeCountryConfigs(country).individualConfig ? stripeCountryConfigs(country).individualConfig : {};\n  const showEmailField = !!individualConfig.personalEmail;\n  const showPhoneNumberField = !!individualConfig.personalPhone;\n  const showPersonalIdNumberField = !!individualConfig.personalIdNumberRequired || !!individualConfig.ssnLast4Required;\n  const showBusinessURLField = !!individualConfig.businessURL;\n  const showMCCForUSField = !!individualConfig.mccForUS;\n  const showBusinssProfileSection = showBusinessURLField || showMCCForUSField;\n  const hasBusinessURL = values && values.individual && values.individual.businessProfile && values.individual.businessProfile.url; // Use user profile page as business_url on this marketplace\n  // or just fake it if it's dev environment using Stripe test endpoints.\n  // NOTE: All US accounts need to provide business URL or product description\n\n  if (showBusinssProfileSection && !hasBusinessURL && currentUserId) {\n    const pathToProfilePage = uuid => createResourceLocatorString('ProfilePage', routeConfiguration(), {\n      id: uuid\n    }, {});\n\n    const defaultBusinessURL = appConfig && appConfig.canonicalRootURL && !appConfig.dev ? \"\".concat(config.canonicalRootURL).concat(pathToProfilePage(currentUserId.uuid)) : \"https://test-marketplace.com\".concat(pathToProfilePage(currentUserId.uuid));\n    form.change('individual.businessProfile.url', defaultBusinessURL);\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(PayoutDetailsPersonalDetails, {\n    intl: intl,\n    disabled: disabled,\n    values: values,\n    country: country,\n    fieldId: \"individual\",\n    accountType: \"individual\",\n    showEmailField: showEmailField,\n    showPersonalIdNumberField: showPersonalIdNumberField,\n    showPhoneNumberField: showPhoneNumberField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(PayoutDetailsAddress, {\n    country: country,\n    intl: intl,\n    disabled: disabled,\n    form: form,\n    fieldId: \"individual.address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), showBusinssProfileSection ? React.createElement(\"div\", {\n    className: css.sectionContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: css.subTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"PayoutDetailsForm.businessProfile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(PayoutDetailsBusinessProfile, {\n    disabled: disabled,\n    fieldId: \"individual.businessProfile\",\n    form: form,\n    showBusinessURLField: showBusinessURLField,\n    showMCCForUSField: showMCCForUSField,\n    intl: intl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })) : null, React.createElement(PayoutDetailsBankDetails, {\n    country: country,\n    disabled: disabled,\n    fieldId: \"individual\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }));\n};\n\nPayoutDetailsIndividualAccountComponent.defaultProps = {\n  currentUserId: null,\n  appConfig: config\n};\nPayoutDetailsIndividualAccountComponent.propTypes = {\n  fieldRenderProps: shape({\n    disabled: bool,\n    form: object.isRequired,\n    values: object\n  }).isRequired,\n  currentUserId: propTypes.uuid,\n  appConfig: object,\n  // from injectIntl\n  intl: intlShape.isRequired\n};\nconst PayoutDetailsIndividualAccount = compose(injectIntl)(PayoutDetailsIndividualAccountComponent);\nexport default PayoutDetailsIndividualAccount;","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/forms/PayoutDetailsForm/PayoutDetailsIndividualAccount.js"],"names":["React","bool","object","shape","compose","FormattedMessage","injectIntl","intlShape","config","routeConfiguration","propTypes","createResourceLocatorString","stripeCountryConfigs","PayoutDetailsAddress","PayoutDetailsBankDetails","PayoutDetailsPersonalDetails","PayoutDetailsBusinessProfile","css","PayoutDetailsIndividualAccountComponent","props","fieldRenderProps","currentUserId","intl","appConfig","disabled","form","values","country","individualConfig","showEmailField","personalEmail","showPhoneNumberField","personalPhone","showPersonalIdNumberField","personalIdNumberRequired","ssnLast4Required","showBusinessURLField","businessURL","showMCCForUSField","mccForUS","showBusinssProfileSection","hasBusinessURL","individual","businessProfile","url","pathToProfilePage","uuid","id","defaultBusinessURL","canonicalRootURL","dev","change","sectionContainer","subTitle","defaultProps","isRequired","PayoutDetailsIndividualAccount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { bool, object, shape } from 'prop-types';\nimport { compose } from 'redux';\nimport { FormattedMessage, injectIntl, intlShape } from 'react-intl';\nimport config from '../../config';\nimport routeConfiguration from '../../routeConfiguration';\nimport { propTypes } from '../../util/types';\nimport { createResourceLocatorString } from '../../util/routes';\n\nimport { stripeCountryConfigs } from './PayoutDetailsForm';\nimport PayoutDetailsAddress from './PayoutDetailsAddress';\nimport PayoutDetailsBankDetails from './PayoutDetailsBankDetails';\nimport PayoutDetailsPersonalDetails from './PayoutDetailsPersonalDetails';\nimport PayoutDetailsBusinessProfile from './PayoutDetailsBusinessProfile';\nimport css from './PayoutDetailsForm.css';\n\nconst PayoutDetailsIndividualAccountComponent = props => {\n  const { fieldRenderProps, currentUserId, intl, appConfig } = props;\n  const { disabled, form, values } = fieldRenderProps;\n  const { country } = values;\n\n  const individualConfig =\n    country && stripeCountryConfigs(country).individualConfig\n      ? stripeCountryConfigs(country).individualConfig\n      : {};\n\n  const showEmailField = !!individualConfig.personalEmail;\n  const showPhoneNumberField = !!individualConfig.personalPhone;\n  const showPersonalIdNumberField =\n    !!individualConfig.personalIdNumberRequired || !!individualConfig.ssnLast4Required;\n\n  const showBusinessURLField = !!individualConfig.businessURL;\n  const showMCCForUSField = !!individualConfig.mccForUS;\n  const showBusinssProfileSection = showBusinessURLField || showMCCForUSField;\n\n  const hasBusinessURL =\n    values &&\n    values.individual &&\n    values.individual.businessProfile &&\n    values.individual.businessProfile.url;\n\n  // Use user profile page as business_url on this marketplace\n  // or just fake it if it's dev environment using Stripe test endpoints.\n  // NOTE: All US accounts need to provide business URL or product description\n  if (showBusinssProfileSection && !hasBusinessURL && currentUserId) {\n    const pathToProfilePage = uuid =>\n      createResourceLocatorString('ProfilePage', routeConfiguration(), { id: uuid }, {});\n    const defaultBusinessURL =\n      appConfig && appConfig.canonicalRootURL && !appConfig.dev\n        ? `${config.canonicalRootURL}${pathToProfilePage(currentUserId.uuid)}`\n        : `https://test-marketplace.com${pathToProfilePage(currentUserId.uuid)}`;\n\n    form.change('individual.businessProfile.url', defaultBusinessURL);\n  }\n\n  return (\n    <React.Fragment>\n      <PayoutDetailsPersonalDetails\n        intl={intl}\n        disabled={disabled}\n        values={values}\n        country={country}\n        fieldId=\"individual\"\n        accountType=\"individual\"\n        showEmailField={showEmailField}\n        showPersonalIdNumberField={showPersonalIdNumberField}\n        showPhoneNumberField={showPhoneNumberField}\n      />\n\n      <PayoutDetailsAddress\n        country={country}\n        intl={intl}\n        disabled={disabled}\n        form={form}\n        fieldId=\"individual.address\"\n      />\n\n      {showBusinssProfileSection ? (\n        <div className={css.sectionContainer}>\n          <h3 className={css.subTitle}>\n            <FormattedMessage id=\"PayoutDetailsForm.businessProfile\" />\n          </h3>\n          <PayoutDetailsBusinessProfile\n            disabled={disabled}\n            fieldId=\"individual.businessProfile\"\n            form={form}\n            showBusinessURLField={showBusinessURLField}\n            showMCCForUSField={showMCCForUSField}\n            intl={intl}\n          />\n        </div>\n      ) : null}\n\n      <PayoutDetailsBankDetails country={country} disabled={disabled} fieldId=\"individual\" />\n    </React.Fragment>\n  );\n};\n\nPayoutDetailsIndividualAccountComponent.defaultProps = {\n  currentUserId: null,\n  appConfig: config,\n};\n\nPayoutDetailsIndividualAccountComponent.propTypes = {\n  fieldRenderProps: shape({\n    disabled: bool,\n    form: object.isRequired,\n    values: object,\n  }).isRequired,\n  currentUserId: propTypes.uuid,\n  appConfig: object,\n\n  // from injectIntl\n  intl: intlShape.isRequired,\n};\n\nconst PayoutDetailsIndividualAccount = compose(injectIntl)(PayoutDetailsIndividualAccountComponent);\n\nexport default PayoutDetailsIndividualAccount;\n"]},"metadata":{},"sourceType":"module"}