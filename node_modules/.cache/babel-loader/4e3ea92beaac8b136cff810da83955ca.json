{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/containers/StyleguidePage/Colors.example.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './StyleguidePage.css';\n\nconst ColorCard = props => {\n  const mpColor = props.mpColor,\n        name = props.name,\n        usage = props.usage;\n  const colorClasses = mpColor || css.color;\n  return React.createElement(\"div\", {\n    className: css.colorCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: colorClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: css.colorDescription,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, name), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: css.tinyFont,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, usage))));\n};\n\nconst string = PropTypes.string; // Jest test strip off CSS classes (css is an empty object). Otherwise this could be required prop.\n\nconst defaultProps = {\n  mpColor: undefined\n}; // Create a real undefined value, not just injecting a hopefully undefined object.\n\ndelete defaultProps.mpColor;\nColorCard.defaultProps = defaultProps;\nColorCard.propTypes = {\n  mpColor: string,\n  name: string.isRequired,\n  usage: string.isRequired\n};\n\nconst MarketplaceColors = () => {\n  return React.createElement(\"div\", {\n    className: css.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: css.spacing2x,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Marketplace colors have three groups: branding color and its variations, action colors, and grey palette for fine tuning UI elements.\"), React.createElement(\"p\", {\n    className: css.spacing2x,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"N.B. you should import marketplace.css where ever you are going to use marketplace variables (e.g. \", React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"@import '../../marketplace.css';\"), \").\"), React.createElement(\"div\", {\n    className: css.colorsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css.colorsGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(ColorCard, {\n    mpColor: css.marketplaceColorBackground,\n    name: \"--marketplaceColor\",\n    usage: \"e.g. color: var(--marketplaceColor);\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(ColorCard, {\n    mpColor: css.marketplaceColorLightBackground,\n    name: \"--marketplaceColorLight\",\n    usage: \"e.g. color: var(--marketplaceColorLight);\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(ColorCard, {\n    mpColor: css.marketplaceColorDarkBackground,\n    name: \"--marketplaceColorDark\",\n    usage: \"e.g. color: var(--marketplaceColorDark);\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: css.colorsGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(ColorCard, {\n    mpColor: css.successColorBackground,\n    name: \"--successColor\",\n    usage: \"e.g. color: var(--successColor);\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(ColorCard, {\n    mpColor: css.failColorBackground,\n    name: \"--failColor\",\n    usage: \"e.g. color: var(--failColor);\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(ColorCard, {\n    mpColor: css.attentionColorBackground,\n    name: \"--attentionColor\",\n    usage: \"e.g. color: var(--attentionColor);\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: css.colorsGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(ColorCard, {\n    mpColor: css.matterColorDarkBackground,\n    name: \"--matterColorDark\",\n    usage: \"e.g. color: var(--matterColorDark);\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(ColorCard, {\n    mpColor: css.matterColorBackground,\n    name: \"--matterColor\",\n    usage: \"e.g. color: var(--matterColor);\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(ColorCard, {\n    mpColor: css.matterColorAntiBackground,\n    name: \"--matterColorAnti\",\n    usage: \"e.g. color: var(--matterColorAnti);\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(ColorCard, {\n    mpColor: css.matterColorNegativeBackground,\n    name: \"--matterColorNegative\",\n    usage: \"e.g. color: var(--matterColorNegative);\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(ColorCard, {\n    mpColor: css.matterColorLightBackground,\n    name: \"--matterColorLight\",\n    usage: \"e.g. color: var(--matterColorLight);\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }))));\n};\n\nexport const Colors = {\n  component: MarketplaceColors,\n  group: 'colors',\n  props: {}\n};","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/containers/StyleguidePage/Colors.example.js"],"names":["React","PropTypes","css","ColorCard","props","mpColor","name","usage","colorClasses","color","colorCard","colorDescription","tinyFont","string","defaultProps","undefined","propTypes","isRequired","MarketplaceColors","content","spacing2x","colorsContainer","colorsGroup","marketplaceColorBackground","marketplaceColorLightBackground","marketplaceColorDarkBackground","successColorBackground","failColorBackground","attentionColorBackground","matterColorDarkBackground","matterColorBackground","matterColorAntiBackground","matterColorNegativeBackground","matterColorLightBackground","Colors","component","group"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './StyleguidePage.css';\n\nconst ColorCard = props => {\n  const { mpColor, name, usage } = props;\n  const colorClasses = mpColor || css.color;\n\n  return (\n    <div className={css.colorCard}>\n      <div className={colorClasses} />\n      <div className={css.colorDescription}>\n        <p>\n          <span>{name}</span>\n          <br />\n          <span className={css.tinyFont}>{usage}</span>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nconst { string } = PropTypes;\n\n// Jest test strip off CSS classes (css is an empty object). Otherwise this could be required prop.\nconst defaultProps = { mpColor: undefined };\n// Create a real undefined value, not just injecting a hopefully undefined object.\ndelete defaultProps.mpColor;\nColorCard.defaultProps = defaultProps;\n\nColorCard.propTypes = {\n  mpColor: string,\n  name: string.isRequired,\n  usage: string.isRequired,\n};\n\nconst MarketplaceColors = () => {\n  return (\n    <div className={css.content}>\n      <p className={css.spacing2x}>\n        Marketplace colors have three groups: branding color and its variations, action colors, and\n        grey palette for fine tuning UI elements.\n      </p>\n      <p className={css.spacing2x}>\n        N.B. you should import marketplace.css where ever you are going to use marketplace variables\n        (e.g. <i>@import '../../marketplace.css';</i>).\n      </p>\n      <div className={css.colorsContainer}>\n        <div className={css.colorsGroup}>\n          <ColorCard\n            mpColor={css.marketplaceColorBackground}\n            name=\"--marketplaceColor\"\n            usage=\"e.g. color: var(--marketplaceColor);\"\n          />\n          <ColorCard\n            mpColor={css.marketplaceColorLightBackground}\n            name=\"--marketplaceColorLight\"\n            usage=\"e.g. color: var(--marketplaceColorLight);\"\n          />\n          <ColorCard\n            mpColor={css.marketplaceColorDarkBackground}\n            name=\"--marketplaceColorDark\"\n            usage=\"e.g. color: var(--marketplaceColorDark);\"\n          />\n        </div>\n        <div className={css.colorsGroup}>\n          <ColorCard\n            mpColor={css.successColorBackground}\n            name=\"--successColor\"\n            usage=\"e.g. color: var(--successColor);\"\n          />\n          <ColorCard\n            mpColor={css.failColorBackground}\n            name=\"--failColor\"\n            usage=\"e.g. color: var(--failColor);\"\n          />\n          <ColorCard\n            mpColor={css.attentionColorBackground}\n            name=\"--attentionColor\"\n            usage=\"e.g. color: var(--attentionColor);\"\n          />\n        </div>\n        <div className={css.colorsGroup}>\n          <ColorCard\n            mpColor={css.matterColorDarkBackground}\n            name=\"--matterColorDark\"\n            usage=\"e.g. color: var(--matterColorDark);\"\n          />\n          <ColorCard\n            mpColor={css.matterColorBackground}\n            name=\"--matterColor\"\n            usage=\"e.g. color: var(--matterColor);\"\n          />\n          <ColorCard\n            mpColor={css.matterColorAntiBackground}\n            name=\"--matterColorAnti\"\n            usage=\"e.g. color: var(--matterColorAnti);\"\n          />\n          <ColorCard\n            mpColor={css.matterColorNegativeBackground}\n            name=\"--matterColorNegative\"\n            usage=\"e.g. color: var(--matterColorNegative);\"\n          />\n          <ColorCard\n            mpColor={css.matterColorLightBackground}\n            name=\"--matterColorLight\"\n            usage=\"e.g. color: var(--matterColorLight);\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const Colors = {\n  component: MarketplaceColors,\n  group: 'colors',\n  props: {},\n};\n"]},"metadata":{},"sourceType":"module"}