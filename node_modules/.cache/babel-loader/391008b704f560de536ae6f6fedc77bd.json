{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/ModalInMobile/ModalInMobile.example.js\";\n\n/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport { Button } from '../../components';\nimport ModalInMobile from './ModalInMobile';\nimport css from './ModalInMobile.example.css';\n\nconst onManageDisableScrolling = (componentId, scrollingDisabled = true) => {\n  // We are just checking the value for now\n  console.log('Toggling ModalInMobile - currently:', componentId, scrollingDisabled);\n};\n\nclass ModalInMobileWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.handleOpen = this.handleOpen.bind(this);\n  }\n\n  handleOpen() {\n    this.setState({\n      isOpen: true\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        margin: '1rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Wrapper text before ModalInMobile\"), React.createElement(ModalInMobile, Object.assign({}, this.props, {\n      onClose: () => {\n        this.setState({\n          isOpen: false\n        });\n        console.log('Closing modal');\n      },\n      isModalOpenOnMobile: this.state.isOpen,\n      onManageDisableScrolling: onManageDisableScrolling,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        margin: '1rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Some content inside ModalInMobile component\")), React.createElement(\"div\", {\n      style: {\n        margin: '1rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleOpen,\n      className: css.visibleOnMobileLayout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Open\")));\n  }\n\n}\n\nexport const Empty = {\n  component: ModalInMobileWrapper,\n  useDefaultWrapperStyles: false,\n  props: {\n    id: 'ExampleModalInMobile',\n    showAsModalMaxWidth: 400\n  }\n};","map":{"version":3,"sources":["/Users/matthewmcelwee/fcprepos/webtest1/flex-template-web/src/components/ModalInMobile/ModalInMobile.example.js"],"names":["React","Component","Button","ModalInMobile","css","onManageDisableScrolling","componentId","scrollingDisabled","console","log","ModalInMobileWrapper","constructor","props","state","isOpen","handleOpen","bind","setState","render","margin","visibleOnMobileLayout","Empty","component","useDefaultWrapperStyles","id","showAsModalMaxWidth"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,GAAP,MAAgB,6BAAhB;;AAEA,MAAMC,wBAAwB,GAAG,CAACC,WAAD,EAAcC,iBAAiB,GAAG,IAAlC,KAA2C;AAC1E;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDH,WAAnD,EAAgEC,iBAAhE;AACD,CAHD;;AAKA,MAAMG,oBAAN,SAAmCT,SAAnC,CAA6C;AAC3CU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAb;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDD,EAAAA,UAAU,GAAG;AACX,SAAKE,QAAL,CAAc;AAAEH,MAAAA,MAAM,EAAE;AAAV,KAAd;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,EAEE,oBAAC,aAAD,oBACM,KAAKP,KADX;AAEE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKK,QAAL,CAAc;AAAEH,UAAAA,MAAM,EAAE;AAAV,SAAd;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,OALH;AAME,MAAA,mBAAmB,EAAE,KAAKI,KAAL,CAAWC,MANlC;AAOE,MAAA,wBAAwB,EAAET,wBAP5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASE;AAAK,MAAA,KAAK,EAAE;AAAEc,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDATF,CAFF,EAaE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKJ,UAAtB;AAAkC,MAAA,SAAS,EAAEX,GAAG,CAACgB,qBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAbF,CADF;AAqBD;;AAjC0C;;AAoC7C,OAAO,MAAMC,KAAK,GAAG;AACnBC,EAAAA,SAAS,EAAEZ,oBADQ;AAEnBa,EAAAA,uBAAuB,EAAE,KAFN;AAGnBX,EAAAA,KAAK,EAAE;AACLY,IAAAA,EAAE,EAAE,sBADC;AAELC,IAAAA,mBAAmB,EAAE;AAFhB;AAHY,CAAd","sourcesContent":["/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport { Button } from '../../components';\nimport ModalInMobile from './ModalInMobile';\nimport css from './ModalInMobile.example.css';\n\nconst onManageDisableScrolling = (componentId, scrollingDisabled = true) => {\n  // We are just checking the value for now\n  console.log('Toggling ModalInMobile - currently:', componentId, scrollingDisabled);\n};\n\nclass ModalInMobileWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n    this.handleOpen = this.handleOpen.bind(this);\n  }\n\n  handleOpen() {\n    this.setState({ isOpen: true });\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{ margin: '1rem' }}>Wrapper text before ModalInMobile</div>\n        <ModalInMobile\n          {...this.props}\n          onClose={() => {\n            this.setState({ isOpen: false });\n            console.log('Closing modal');\n          }}\n          isModalOpenOnMobile={this.state.isOpen}\n          onManageDisableScrolling={onManageDisableScrolling}\n        >\n          <div style={{ margin: '1rem' }}>Some content inside ModalInMobile component</div>\n        </ModalInMobile>\n        <div style={{ margin: '1rem' }}>\n          <Button onClick={this.handleOpen} className={css.visibleOnMobileLayout}>\n            Open\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const Empty = {\n  component: ModalInMobileWrapper,\n  useDefaultWrapperStyles: false,\n  props: {\n    id: 'ExampleModalInMobile',\n    showAsModalMaxWidth: 400,\n  },\n};\n"]},"metadata":{},"sourceType":"module"}